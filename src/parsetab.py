
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIFXnonassocELSErightCOLONleftPLUSMINUSMAT_PLUSMAT_MINUSleftTIMESDIVIDEMAT_TIMESMAT_DIVIDErightUNARY_MINUSnonassocIDXnonassocL_S_BRACKETleftTRANSPOSEASSIGN BREAK COLON COMMA CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER GREATER_EQUAL ID IF INTEGER LESS LESS_EQUAL L_C_BRACKET L_R_BRACKET L_S_BRACKET MAT_DIVIDE MAT_MINUS MAT_PLUS MAT_TIMES MINUS MINUS_ASSIGN NOT_EQUAL ONES PLUS PLUS_ASSIGN PRINT RETURN R_C_BRACKET R_R_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TIMES_ASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_opt instructions_opt : instructions\n                        | epsilon instructions : instructions instruction\n                    | instruction instruction : expression SEMICOLON\n                   | assignment SEMICOLON\n                   | command SEMICOLON\n                   | conditional_statement\n                   | while_statement\n                   | for_statement\n                   | instruction_block epsilon : conditional_statement : if_statement ELSE body\n                             | if_statement %prec IFX if_statement : IF L_R_BRACKET sentence R_R_BRACKET body while_statement : WHILE L_R_BRACKET sentence R_R_BRACKET body for_statement : FOR ID ASSIGN range body body : instruction instruction_block : L_C_BRACKET instructions_opt R_C_BRACKET range : expression COLON expression sentence : expression EQUAL expression\n                | expression NOT_EQUAL expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression GREATER_EQUAL expression\n                | expression LESS_EQUAL expression expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MAT_PLUS expression\n                  | expression MAT_MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MAT_TIMES expression\n                  | expression MAT_DIVIDE expression\n                  | MINUS expression %prec UNARY_MINUS\n                  | expression TRANSPOSE\n                  | expression L_S_BRACKET expression COMMA expression R_S_BRACKET\n                  | eye\n                  | zeros\n                  | ones\n                  | L_R_BRACKET expression R_R_BRACKET\n                  | changeable\n                  | matrix\n                  | integer\n                  | float\n                  | string eye : EYE L_R_BRACKET expression R_R_BRACKETzeros : ZEROS L_R_BRACKET expression R_R_BRACKETones : ONES L_R_BRACKET expression R_R_BRACKETassignment : changeable ASSIGN expression\n                  | changeable PLUS_ASSIGN expression\n                  | changeable MINUS_ASSIGN expression\n                  | changeable TIMES_ASSIGN expression\n                  | changeable DIVIDE_ASSIGN expression changeable : id %prec IDX\n                  | id L_S_BRACKET expression COMMA expression R_S_BRACKET integer : INTEGERfloat : FLOATstring : STRINGid : IDcommand : print_command\n               | RETURN expression\n               | continue\n               | break break : BREAKcontinue : CONTINUEprint_command : PRINT sequence matrix : L_S_BRACKET row_sequence R_S_BRACKET row_sequence : row COMMA row_sequence\n                    | row row : L_S_BRACKET sequence R_S_BRACKET sequence : expression COMMA sequence\n                | expression '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,9,10,11,12,28,44,45,56,57,99,100,104,130,137,140,],[-13,0,-1,-2,-3,-5,-9,-10,-11,-12,-15,-4,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'MINUS':([0,3,5,6,9,10,11,12,13,15,16,17,18,19,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,111,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[13,13,-5,47,-9,-10,-11,-12,13,-39,-40,-41,13,-43,-44,-45,-46,-47,13,-15,-61,13,-56,-58,-59,-60,13,-4,-6,13,13,13,13,13,13,13,13,-37,13,-7,-8,-36,-43,13,47,13,13,13,13,13,47,13,13,13,13,13,13,47,13,-28,-29,-30,-31,-32,-33,-34,-35,47,-69,-42,47,47,47,47,47,-14,-19,47,13,-20,47,47,47,47,13,13,13,13,13,13,13,13,13,13,47,-48,-49,-50,13,13,47,-17,47,47,47,47,47,47,-18,13,47,-16,-38,47,-57,]),'L_R_BRACKET':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,29,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[18,18,-5,-9,-10,-11,-12,18,-39,-40,-41,18,-44,-45,-46,-47,18,-15,71,-61,18,74,75,76,-56,-58,-59,-60,18,80,-4,-6,18,18,18,18,18,18,18,18,-37,18,-7,-8,-36,-43,18,18,18,18,18,18,18,18,18,18,18,18,18,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,18,-20,18,18,18,18,18,18,18,18,18,18,-48,-49,-50,18,18,-17,-18,18,-16,-38,-21,-57,]),'RETURN':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[25,25,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,25,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,25,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,25,25,-48,-49,-50,25,-17,-18,-16,-38,-21,-57,]),'WHILE':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[29,29,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,29,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,29,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,29,29,-48,-49,-50,29,-17,-18,-16,-38,-21,-57,]),'FOR':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[30,30,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,30,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,30,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,30,30,-48,-49,-50,30,-17,-18,-16,-38,-21,-57,]),'L_C_BRACKET':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[32,32,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,32,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,32,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,32,32,-48,-49,-50,32,-17,-18,-16,-38,-21,-57,]),'EYE':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[33,33,-5,-9,-10,-11,-12,33,-39,-40,-41,33,-44,-45,-46,-47,33,-15,-61,33,-56,-58,-59,-60,33,-4,-6,33,33,33,33,33,33,33,33,-37,33,-7,-8,-36,-43,33,33,33,33,33,33,33,33,33,33,33,33,33,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,33,-20,33,33,33,33,33,33,33,33,33,33,-48,-49,-50,33,33,-17,-18,33,-16,-38,-21,-57,]),'ZEROS':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[34,34,-5,-9,-10,-11,-12,34,-39,-40,-41,34,-44,-45,-46,-47,34,-15,-61,34,-56,-58,-59,-60,34,-4,-6,34,34,34,34,34,34,34,34,-37,34,-7,-8,-36,-43,34,34,34,34,34,34,34,34,34,34,34,34,34,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,34,-20,34,34,34,34,34,34,34,34,34,34,-48,-49,-50,34,34,-17,-18,34,-16,-38,-21,-57,]),'ONES':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[35,35,-5,-9,-10,-11,-12,35,-39,-40,-41,35,-44,-45,-46,-47,35,-15,-61,35,-56,-58,-59,-60,35,-4,-6,35,35,35,35,35,35,35,35,-37,35,-7,-8,-36,-43,35,35,35,35,35,35,35,35,35,35,35,35,35,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,35,-20,35,35,35,35,35,35,35,35,35,35,-48,-49,-50,35,35,-17,-18,35,-16,-38,-21,-57,]),'L_S_BRACKET':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,111,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[14,14,-5,55,-9,-10,-11,-12,14,60,-39,-40,-41,14,-43,-44,-45,-46,-47,14,-15,-61,14,77,-58,-59,-60,14,-4,-6,14,14,14,14,14,14,14,14,-37,14,-7,-8,55,-43,14,55,14,14,14,14,14,55,14,14,14,14,14,14,55,14,55,55,55,55,55,55,55,55,55,-69,60,-42,55,55,55,55,55,-14,-19,55,14,-20,55,55,55,55,14,14,14,14,14,14,14,14,14,14,55,-48,-49,-50,14,14,55,-17,55,55,55,55,55,55,-18,14,55,-16,-38,55,-57,]),'INTEGER':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[37,37,-5,-9,-10,-11,-12,37,-39,-40,-41,37,-44,-45,-46,-47,37,-15,-61,37,-56,-58,-59,-60,37,-4,-6,37,37,37,37,37,37,37,37,-37,37,-7,-8,-36,-43,37,37,37,37,37,37,37,37,37,37,37,37,37,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,37,-20,37,37,37,37,37,37,37,37,37,37,-48,-49,-50,37,37,-17,-18,37,-16,-38,-21,-57,]),'FLOAT':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[38,38,-5,-9,-10,-11,-12,38,-39,-40,-41,38,-44,-45,-46,-47,38,-15,-61,38,-56,-58,-59,-60,38,-4,-6,38,38,38,38,38,38,38,38,-37,38,-7,-8,-36,-43,38,38,38,38,38,38,38,38,38,38,38,38,38,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,38,-20,38,38,38,38,38,38,38,38,38,38,-48,-49,-50,38,38,-17,-18,38,-16,-38,-21,-57,]),'STRING':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[39,39,-5,-9,-10,-11,-12,39,-39,-40,-41,39,-44,-45,-46,-47,39,-15,-61,39,-56,-58,-59,-60,39,-4,-6,39,39,39,39,39,39,39,39,-37,39,-7,-8,-36,-43,39,39,39,39,39,39,39,39,39,39,39,39,39,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,39,-20,39,39,39,39,39,39,39,39,39,39,-48,-49,-50,39,39,-17,-18,39,-16,-38,-21,-57,]),'PRINT':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[40,40,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,40,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,40,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,40,40,-48,-49,-50,40,-17,-18,-16,-38,-21,-57,]),'CONTINUE':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[41,41,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,41,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,41,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,41,41,-48,-49,-50,41,-17,-18,-16,-38,-21,-57,]),'BREAK':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[42,42,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,42,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,42,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,42,42,-48,-49,-50,42,-17,-18,-16,-38,-21,-57,]),'IF':([0,3,5,9,10,11,12,15,16,17,20,21,22,23,28,31,32,36,37,38,39,44,45,54,56,57,58,59,70,81,82,83,84,85,86,87,88,91,93,99,100,104,114,121,123,124,125,128,130,137,140,141,142,143,],[43,43,-5,-9,-10,-11,-12,-39,-40,-41,-44,-45,-46,-47,-15,-61,43,-56,-58,-59,-60,-4,-6,-37,-7,-8,-36,-43,43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,-20,43,43,-48,-49,-50,43,-17,-18,-16,-38,-21,-57,]),'ID':([0,3,5,9,10,11,12,13,15,16,17,18,20,21,22,23,25,28,30,31,32,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,91,93,99,100,103,104,109,111,114,115,116,117,118,119,120,121,123,124,125,126,128,130,137,138,140,141,142,143,],[31,31,-5,-9,-10,-11,-12,31,-39,-40,-41,31,-44,-45,-46,-47,31,-15,72,-61,31,-56,-58,-59,-60,31,-4,-6,31,31,31,31,31,31,31,31,-37,31,-7,-8,-36,-43,31,31,31,31,31,31,31,31,31,31,31,31,31,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-14,-19,31,-20,31,31,31,31,31,31,31,31,31,31,-48,-49,-50,31,31,-17,-18,31,-16,-38,-21,-57,]),'R_C_BRACKET':([3,4,5,9,10,11,12,28,32,44,45,56,57,73,99,100,104,130,137,140,],[-2,-3,-5,-9,-10,-11,-12,-15,-13,-4,-6,-7,-8,104,-14,-19,-20,-17,-18,-16,]),'SEMICOLON':([6,7,8,15,16,17,19,20,21,22,23,24,26,27,31,36,37,38,39,41,42,54,58,59,69,78,79,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,123,124,125,127,141,143,],[45,56,57,-39,-40,-41,-43,-44,-45,-46,-47,-62,-64,-65,-61,-56,-58,-59,-60,-67,-66,-37,-36,-43,-63,-68,-74,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,-51,-52,-53,-54,-55,-48,-49,-50,-73,-38,-57,]),'PLUS':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[46,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,46,46,46,-28,-29,-30,-31,-32,-33,-34,-35,46,-69,-42,46,46,46,46,46,46,46,46,46,46,46,-48,-49,-50,46,46,46,46,46,46,46,46,-38,46,-57,]),'MAT_PLUS':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[48,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,48,48,48,-28,-29,-30,-31,-32,-33,-34,-35,48,-69,-42,48,48,48,48,48,48,48,48,48,48,48,-48,-49,-50,48,48,48,48,48,48,48,48,-38,48,-57,]),'MAT_MINUS':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[49,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,49,49,49,-28,-29,-30,-31,-32,-33,-34,-35,49,-69,-42,49,49,49,49,49,49,49,49,49,49,49,-48,-49,-50,49,49,49,49,49,49,49,49,-38,49,-57,]),'TIMES':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[50,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,50,50,50,50,50,50,50,-32,-33,-34,-35,50,-69,-42,50,50,50,50,50,50,50,50,50,50,50,-48,-49,-50,50,50,50,50,50,50,50,50,-38,50,-57,]),'DIVIDE':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[51,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,51,51,51,51,51,51,51,-32,-33,-34,-35,51,-69,-42,51,51,51,51,51,51,51,51,51,51,51,-48,-49,-50,51,51,51,51,51,51,51,51,-38,51,-57,]),'MAT_TIMES':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[52,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,52,52,52,52,52,52,52,-32,-33,-34,-35,52,-69,-42,52,52,52,52,52,52,52,52,52,52,52,-48,-49,-50,52,52,52,52,52,52,52,52,-38,52,-57,]),'MAT_DIVIDE':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[53,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,53,53,53,53,53,53,53,-32,-33,-34,-35,53,-69,-42,53,53,53,53,53,53,53,53,53,53,53,-48,-49,-50,53,53,53,53,53,53,53,53,-38,53,-57,]),'TRANSPOSE':([6,15,16,17,19,20,21,22,23,31,36,37,38,39,54,58,59,63,69,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,102,105,106,107,108,122,123,124,125,129,131,132,133,134,135,136,139,141,142,143,],[54,-39,-40,-41,-43,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,54,-43,54,54,54,54,54,54,54,54,54,54,54,54,-69,-42,54,54,54,54,54,54,54,54,54,54,54,-48,-49,-50,54,54,54,54,54,54,54,54,-38,54,-57,]),'ELSE':([9,10,11,12,28,45,56,57,99,100,104,130,137,140,],[-9,-10,-11,-12,70,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'R_R_BRACKET':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,63,81,82,83,84,85,86,87,88,91,93,101,105,106,107,110,123,124,125,131,132,133,134,135,136,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,93,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,114,123,124,125,128,-48,-49,-50,-22,-23,-24,-25,-26,-27,-38,-57,]),'COMMA':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,62,79,81,82,83,84,85,86,87,88,89,91,93,108,112,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,92,109,-28,-29,-30,-31,-32,-33,-34,-35,111,-69,-42,126,-72,-48,-49,-50,-38,-57,]),'R_S_BRACKET':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,61,62,79,81,82,83,84,85,86,87,88,90,91,93,112,113,123,124,125,127,129,139,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,91,-71,-74,-28,-29,-30,-31,-32,-33,-34,-35,112,-69,-42,-72,-70,-48,-49,-50,-73,141,143,-38,-57,]),'EQUAL':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,115,-48,-49,-50,-38,-57,]),'NOT_EQUAL':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,116,-48,-49,-50,-38,-57,]),'GREATER':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,117,-48,-49,-50,-38,-57,]),'LESS':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,118,-48,-49,-50,-38,-57,]),'GREATER_EQUAL':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,119,-48,-49,-50,-38,-57,]),'LESS_EQUAL':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,102,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,120,-48,-49,-50,-38,-57,]),'COLON':([15,16,17,20,21,22,23,31,36,37,38,39,54,58,59,81,82,83,84,85,86,87,88,91,93,122,123,124,125,141,143,],[-39,-40,-41,-44,-45,-46,-47,-61,-56,-58,-59,-60,-37,-36,-43,-28,-29,-30,-31,-32,-33,-34,-35,-69,-42,138,-48,-49,-50,-38,-57,]),'ASSIGN':([19,31,36,72,143,],[64,-61,-56,103,-57,]),'PLUS_ASSIGN':([19,31,36,143,],[65,-61,-56,-57,]),'MINUS_ASSIGN':([19,31,36,143,],[66,-61,-56,-57,]),'TIMES_ASSIGN':([19,31,36,143,],[67,-61,-56,-57,]),'DIVIDE_ASSIGN':([19,31,36,143,],[68,-61,-56,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,32,],[2,73,]),'instructions':([0,32,],[3,3,]),'epsilon':([0,32,],[4,4,]),'instruction':([0,3,32,70,114,121,128,],[5,44,5,100,100,100,100,]),'expression':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[6,6,58,63,69,6,79,81,82,83,84,85,86,87,88,89,79,94,95,96,97,98,6,102,105,106,107,108,102,122,79,129,6,131,132,133,134,135,136,6,139,6,142,]),'assignment':([0,3,32,70,114,121,128,],[7,7,7,7,7,7,7,]),'command':([0,3,32,70,114,121,128,],[8,8,8,8,8,8,8,]),'conditional_statement':([0,3,32,70,114,121,128,],[9,9,9,9,9,9,9,]),'while_statement':([0,3,32,70,114,121,128,],[10,10,10,10,10,10,10,]),'for_statement':([0,3,32,70,114,121,128,],[11,11,11,11,11,11,11,]),'instruction_block':([0,3,32,70,114,121,128,],[12,12,12,12,12,12,12,]),'eye':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'zeros':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'ones':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'changeable':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[19,19,59,59,59,19,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,19,59,59,59,59,59,59,59,59,59,19,59,59,59,59,59,59,19,59,19,59,]),'matrix':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'integer':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'float':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'string':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'print_command':([0,3,32,70,114,121,128,],[24,24,24,24,24,24,24,]),'continue':([0,3,32,70,114,121,128,],[26,26,26,26,26,26,26,]),'break':([0,3,32,70,114,121,128,],[27,27,27,27,27,27,27,]),'if_statement':([0,3,32,70,114,121,128,],[28,28,28,28,28,28,28,]),'id':([0,3,13,18,25,32,40,46,47,48,49,50,51,52,53,55,60,64,65,66,67,68,70,71,74,75,76,77,80,103,109,111,114,115,116,117,118,119,120,121,126,128,138,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'row_sequence':([14,92,],[61,113,]),'row':([14,92,],[62,62,]),'sequence':([40,60,109,],[78,90,127,]),'body':([70,114,121,128,],[99,130,137,140,]),'sentence':([71,80,],[101,110,]),'range':([103,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','matrix_parser.py',40),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','matrix_parser.py',45),
  ('instructions_opt -> epsilon','instructions_opt',1,'p_instructions_opt','matrix_parser.py',46),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','matrix_parser.py',54),
  ('instructions -> instruction','instructions',1,'p_instructions','matrix_parser.py',55),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',63),
  ('instruction -> assignment SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',64),
  ('instruction -> command SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',65),
  ('instruction -> conditional_statement','instruction',1,'p_instruction','matrix_parser.py',66),
  ('instruction -> while_statement','instruction',1,'p_instruction','matrix_parser.py',67),
  ('instruction -> for_statement','instruction',1,'p_instruction','matrix_parser.py',68),
  ('instruction -> instruction_block','instruction',1,'p_instruction','matrix_parser.py',69),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','matrix_parser.py',74),
  ('conditional_statement -> if_statement ELSE body','conditional_statement',3,'p_conditional_statement','matrix_parser.py',83),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','matrix_parser.py',84),
  ('if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body','if_statement',5,'p_if_statement','matrix_parser.py',92),
  ('while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body','while_statement',5,'p_while_statement','matrix_parser.py',97),
  ('for_statement -> FOR ID ASSIGN range body','for_statement',5,'p_for_statement','matrix_parser.py',102),
  ('body -> instruction','body',1,'p_body','matrix_parser.py',107),
  ('instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET','instruction_block',3,'p_instruction_block','matrix_parser.py',112),
  ('range -> expression COLON expression','range',3,'p_range','matrix_parser.py',117),
  ('sentence -> expression EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',126),
  ('sentence -> expression NOT_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',127),
  ('sentence -> expression GREATER expression','sentence',3,'p_sentence','matrix_parser.py',128),
  ('sentence -> expression LESS expression','sentence',3,'p_sentence','matrix_parser.py',129),
  ('sentence -> expression GREATER_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',130),
  ('sentence -> expression LESS_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',131),
  ('expression -> expression PLUS expression','expression',3,'p_expression','matrix_parser.py',143),
  ('expression -> expression MINUS expression','expression',3,'p_expression','matrix_parser.py',144),
  ('expression -> expression MAT_PLUS expression','expression',3,'p_expression','matrix_parser.py',145),
  ('expression -> expression MAT_MINUS expression','expression',3,'p_expression','matrix_parser.py',146),
  ('expression -> expression TIMES expression','expression',3,'p_expression','matrix_parser.py',147),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','matrix_parser.py',148),
  ('expression -> expression MAT_TIMES expression','expression',3,'p_expression','matrix_parser.py',149),
  ('expression -> expression MAT_DIVIDE expression','expression',3,'p_expression','matrix_parser.py',150),
  ('expression -> MINUS expression','expression',2,'p_expression','matrix_parser.py',151),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression','matrix_parser.py',152),
  ('expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET','expression',6,'p_expression','matrix_parser.py',153),
  ('expression -> eye','expression',1,'p_expression','matrix_parser.py',154),
  ('expression -> zeros','expression',1,'p_expression','matrix_parser.py',155),
  ('expression -> ones','expression',1,'p_expression','matrix_parser.py',156),
  ('expression -> L_R_BRACKET expression R_R_BRACKET','expression',3,'p_expression','matrix_parser.py',157),
  ('expression -> changeable','expression',1,'p_expression','matrix_parser.py',158),
  ('expression -> matrix','expression',1,'p_expression','matrix_parser.py',159),
  ('expression -> integer','expression',1,'p_expression','matrix_parser.py',160),
  ('expression -> float','expression',1,'p_expression','matrix_parser.py',161),
  ('expression -> string','expression',1,'p_expression','matrix_parser.py',162),
  ('eye -> EYE L_R_BRACKET expression R_R_BRACKET','eye',4,'p_eye','matrix_parser.py',176),
  ('zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET','zeros',4,'p_zeros','matrix_parser.py',181),
  ('ones -> ONES L_R_BRACKET expression R_R_BRACKET','ones',4,'p_ones','matrix_parser.py',186),
  ('assignment -> changeable ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',191),
  ('assignment -> changeable PLUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',192),
  ('assignment -> changeable MINUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',193),
  ('assignment -> changeable TIMES_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',194),
  ('assignment -> changeable DIVIDE_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',195),
  ('changeable -> id','changeable',1,'p_changeable','matrix_parser.py',200),
  ('changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET','changeable',6,'p_changeable','matrix_parser.py',201),
  ('integer -> INTEGER','integer',1,'p_integer','matrix_parser.py',209),
  ('float -> FLOAT','float',1,'p_float','matrix_parser.py',215),
  ('string -> STRING','string',1,'p_string','matrix_parser.py',221),
  ('id -> ID','id',1,'p_id','matrix_parser.py',227),
  ('command -> print_command','command',1,'p_command','matrix_parser.py',237),
  ('command -> RETURN expression','command',2,'p_command','matrix_parser.py',238),
  ('command -> continue','command',1,'p_command','matrix_parser.py',239),
  ('command -> break','command',1,'p_command','matrix_parser.py',240),
  ('break -> BREAK','break',1,'p_break','matrix_parser.py',249),
  ('continue -> CONTINUE','continue',1,'p_continue','matrix_parser.py',255),
  ('print_command -> PRINT sequence','print_command',2,'p_print_command','matrix_parser.py',261),
  ('matrix -> L_S_BRACKET row_sequence R_S_BRACKET','matrix',3,'p_matrix','matrix_parser.py',271),
  ('row_sequence -> row COMMA row_sequence','row_sequence',3,'p_row_sequence','matrix_parser.py',276),
  ('row_sequence -> row','row_sequence',1,'p_row_sequence','matrix_parser.py',277),
  ('row -> L_S_BRACKET sequence R_S_BRACKET','row',3,'p_row','matrix_parser.py',285),
  ('sequence -> expression COMMA sequence','sequence',3,'p_sequence','matrix_parser.py',291),
  ('sequence -> expression','sequence',1,'p_sequence','matrix_parser.py',292),
]
