Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> epsilon
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> expression SEMICOLON
Rule 7     instruction -> assignment SEMICOLON
Rule 8     instruction -> command SEMICOLON
Rule 9     instruction -> conditional_statement
Rule 10    instruction -> while_statement
Rule 11    instruction -> for_statement
Rule 12    instruction -> instruction_block
Rule 13    epsilon -> <empty>
Rule 14    conditional_statement -> if_statement ELSE body
Rule 15    conditional_statement -> if_statement
Rule 16    if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body
Rule 17    while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body
Rule 18    for_statement -> FOR ID ASSIGN range body
Rule 19    body -> instruction
Rule 20    instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET
Rule 21    range -> expression COLON expression
Rule 22    sentence -> expression EQUAL expression
Rule 23    sentence -> expression NOT_EQUAL expression
Rule 24    sentence -> expression GREATER expression
Rule 25    sentence -> expression LESS expression
Rule 26    sentence -> expression GREATER_EQUAL expression
Rule 27    sentence -> expression LESS_EQUAL expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression MAT_PLUS expression
Rule 31    expression -> expression MAT_MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MAT_TIMES expression
Rule 35    expression -> expression MAT_DIVIDE expression
Rule 36    expression -> MINUS expression
Rule 37    expression -> expression TRANSPOSE
Rule 38    expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET
Rule 39    expression -> eye
Rule 40    expression -> zeros
Rule 41    expression -> ones
Rule 42    expression -> L_R_BRACKET expression R_R_BRACKET
Rule 43    expression -> changeable
Rule 44    expression -> matrix
Rule 45    expression -> integer
Rule 46    expression -> float
Rule 47    expression -> string
Rule 48    eye -> EYE L_R_BRACKET expression R_R_BRACKET
Rule 49    zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET
Rule 50    ones -> ONES L_R_BRACKET expression R_R_BRACKET
Rule 51    assignment -> changeable ASSIGN expression
Rule 52    assignment -> changeable PLUS_ASSIGN expression
Rule 53    assignment -> changeable MINUS_ASSIGN expression
Rule 54    assignment -> changeable TIMES_ASSIGN expression
Rule 55    assignment -> changeable DIVIDE_ASSIGN expression
Rule 56    changeable -> id
Rule 57    changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET
Rule 58    integer -> INTEGER
Rule 59    float -> FLOAT
Rule 60    string -> STRING
Rule 61    id -> ID
Rule 62    command -> print_command
Rule 63    command -> RETURN expression
Rule 64    command -> continue
Rule 65    command -> break
Rule 66    break -> BREAK
Rule 67    continue -> CONTINUE
Rule 68    print_command -> PRINT sequence
Rule 69    matrix -> L_S_BRACKET row_sequence R_S_BRACKET
Rule 70    row_sequence -> row COMMA row_sequence
Rule 71    row_sequence -> row
Rule 72    row -> L_S_BRACKET sequence R_S_BRACKET
Rule 73    sequence -> expression COMMA sequence
Rule 74    sequence -> expression

Terminals, with rules where they appear

ASSIGN               : 18 51
BREAK                : 66
COLON                : 21
COMMA                : 38 57 70 73
CONTINUE             : 67
DIVIDE               : 33
DIVIDE_ASSIGN        : 55
ELSE                 : 14
EQUAL                : 22
EYE                  : 48
FLOAT                : 59
FOR                  : 18
GREATER              : 24
GREATER_EQUAL        : 26
ID                   : 18 61
IF                   : 16
INTEGER              : 58
LESS                 : 25
LESS_EQUAL           : 27
L_C_BRACKET          : 20
L_R_BRACKET          : 16 17 42 48 49 50
L_S_BRACKET          : 38 57 69 72
MAT_DIVIDE           : 35
MAT_MINUS            : 31
MAT_PLUS             : 30
MAT_TIMES            : 34
MINUS                : 29 36
MINUS_ASSIGN         : 53
NOT_EQUAL            : 23
ONES                 : 50
PLUS                 : 28
PLUS_ASSIGN          : 52
PRINT                : 68
RETURN               : 63
R_C_BRACKET          : 20
R_R_BRACKET          : 16 17 42 48 49 50
R_S_BRACKET          : 38 57 69 72
SEMICOLON            : 6 7 8
STRING               : 60
TIMES                : 32
TIMES_ASSIGN         : 54
TRANSPOSE            : 37
WHILE                : 17
ZEROS                : 49
error                : 

Nonterminals, with rules where they appear

assignment           : 7
body                 : 14 16 17 18
break                : 65
changeable           : 43 51 52 53 54 55
command              : 8
conditional_statement : 9
continue             : 64
epsilon              : 3
expression           : 6 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 38 38 38 42 48 49 50 51 52 53 54 55 57 57 63 73 74
eye                  : 39
float                : 46
for_statement        : 11
id                   : 56 57
if_statement         : 14 15
instruction          : 4 5 19
instruction_block    : 12
instructions         : 2 4
instructions_opt     : 1 20
integer              : 45
matrix               : 44
ones                 : 41
print_command        : 62
program              : 0
range                : 18
row                  : 70 71
row_sequence         : 69 70
sentence             : 16 17
sequence             : 68 72 73
string               : 47
while_statement      : 10
zeros                : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (13) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    $end            reduce using rule 13 (epsilon -> .)
    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    R_C_BRACKET     reduce using rule 2 (instructions_opt -> instructions .)
    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    instruction                    shift and go to state 44
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 4

    (3) instructions_opt -> epsilon .

    $end            reduce using rule 3 (instructions_opt -> epsilon .)
    R_C_BRACKET     reduce using rule 3 (instructions_opt -> epsilon .)


state 5

    (5) instructions -> instruction .

    MINUS           reduce using rule 5 (instructions -> instruction .)
    L_R_BRACKET     reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    L_C_BRACKET     reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    L_S_BRACKET     reduce using rule 5 (instructions -> instruction .)
    INTEGER         reduce using rule 5 (instructions -> instruction .)
    FLOAT           reduce using rule 5 (instructions -> instruction .)
    STRING          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    R_C_BRACKET     reduce using rule 5 (instructions -> instruction .)


state 6

    (6) instruction -> expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 7

    (7) instruction -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 56


state 8

    (8) instruction -> command . SEMICOLON

    SEMICOLON       shift and go to state 57


state 9

    (9) instruction -> conditional_statement .

    MINUS           reduce using rule 9 (instruction -> conditional_statement .)
    L_R_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    RETURN          reduce using rule 9 (instruction -> conditional_statement .)
    WHILE           reduce using rule 9 (instruction -> conditional_statement .)
    FOR             reduce using rule 9 (instruction -> conditional_statement .)
    L_C_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    EYE             reduce using rule 9 (instruction -> conditional_statement .)
    ZEROS           reduce using rule 9 (instruction -> conditional_statement .)
    ONES            reduce using rule 9 (instruction -> conditional_statement .)
    L_S_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    INTEGER         reduce using rule 9 (instruction -> conditional_statement .)
    FLOAT           reduce using rule 9 (instruction -> conditional_statement .)
    STRING          reduce using rule 9 (instruction -> conditional_statement .)
    PRINT           reduce using rule 9 (instruction -> conditional_statement .)
    CONTINUE        reduce using rule 9 (instruction -> conditional_statement .)
    BREAK           reduce using rule 9 (instruction -> conditional_statement .)
    IF              reduce using rule 9 (instruction -> conditional_statement .)
    ID              reduce using rule 9 (instruction -> conditional_statement .)
    $end            reduce using rule 9 (instruction -> conditional_statement .)
    R_C_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    ELSE            reduce using rule 9 (instruction -> conditional_statement .)


state 10

    (10) instruction -> while_statement .

    MINUS           reduce using rule 10 (instruction -> while_statement .)
    L_R_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    RETURN          reduce using rule 10 (instruction -> while_statement .)
    WHILE           reduce using rule 10 (instruction -> while_statement .)
    FOR             reduce using rule 10 (instruction -> while_statement .)
    L_C_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    EYE             reduce using rule 10 (instruction -> while_statement .)
    ZEROS           reduce using rule 10 (instruction -> while_statement .)
    ONES            reduce using rule 10 (instruction -> while_statement .)
    L_S_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    INTEGER         reduce using rule 10 (instruction -> while_statement .)
    FLOAT           reduce using rule 10 (instruction -> while_statement .)
    STRING          reduce using rule 10 (instruction -> while_statement .)
    PRINT           reduce using rule 10 (instruction -> while_statement .)
    CONTINUE        reduce using rule 10 (instruction -> while_statement .)
    BREAK           reduce using rule 10 (instruction -> while_statement .)
    IF              reduce using rule 10 (instruction -> while_statement .)
    ID              reduce using rule 10 (instruction -> while_statement .)
    $end            reduce using rule 10 (instruction -> while_statement .)
    R_C_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    ELSE            reduce using rule 10 (instruction -> while_statement .)


state 11

    (11) instruction -> for_statement .

    MINUS           reduce using rule 11 (instruction -> for_statement .)
    L_R_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    RETURN          reduce using rule 11 (instruction -> for_statement .)
    WHILE           reduce using rule 11 (instruction -> for_statement .)
    FOR             reduce using rule 11 (instruction -> for_statement .)
    L_C_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    EYE             reduce using rule 11 (instruction -> for_statement .)
    ZEROS           reduce using rule 11 (instruction -> for_statement .)
    ONES            reduce using rule 11 (instruction -> for_statement .)
    L_S_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    INTEGER         reduce using rule 11 (instruction -> for_statement .)
    FLOAT           reduce using rule 11 (instruction -> for_statement .)
    STRING          reduce using rule 11 (instruction -> for_statement .)
    PRINT           reduce using rule 11 (instruction -> for_statement .)
    CONTINUE        reduce using rule 11 (instruction -> for_statement .)
    BREAK           reduce using rule 11 (instruction -> for_statement .)
    IF              reduce using rule 11 (instruction -> for_statement .)
    ID              reduce using rule 11 (instruction -> for_statement .)
    $end            reduce using rule 11 (instruction -> for_statement .)
    R_C_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    ELSE            reduce using rule 11 (instruction -> for_statement .)


state 12

    (12) instruction -> instruction_block .

    MINUS           reduce using rule 12 (instruction -> instruction_block .)
    L_R_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    RETURN          reduce using rule 12 (instruction -> instruction_block .)
    WHILE           reduce using rule 12 (instruction -> instruction_block .)
    FOR             reduce using rule 12 (instruction -> instruction_block .)
    L_C_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    EYE             reduce using rule 12 (instruction -> instruction_block .)
    ZEROS           reduce using rule 12 (instruction -> instruction_block .)
    ONES            reduce using rule 12 (instruction -> instruction_block .)
    L_S_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    INTEGER         reduce using rule 12 (instruction -> instruction_block .)
    FLOAT           reduce using rule 12 (instruction -> instruction_block .)
    STRING          reduce using rule 12 (instruction -> instruction_block .)
    PRINT           reduce using rule 12 (instruction -> instruction_block .)
    CONTINUE        reduce using rule 12 (instruction -> instruction_block .)
    BREAK           reduce using rule 12 (instruction -> instruction_block .)
    IF              reduce using rule 12 (instruction -> instruction_block .)
    ID              reduce using rule 12 (instruction -> instruction_block .)
    $end            reduce using rule 12 (instruction -> instruction_block .)
    R_C_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    ELSE            reduce using rule 12 (instruction -> instruction_block .)


state 13

    (36) expression -> MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 58
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 14

    (69) matrix -> L_S_BRACKET . row_sequence R_S_BRACKET
    (70) row_sequence -> . row COMMA row_sequence
    (71) row_sequence -> . row
    (72) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 60

    row_sequence                   shift and go to state 61
    row                            shift and go to state 62

state 15

    (39) expression -> eye .

    SEMICOLON       reduce using rule 39 (expression -> eye .)
    PLUS            reduce using rule 39 (expression -> eye .)
    MINUS           reduce using rule 39 (expression -> eye .)
    MAT_PLUS        reduce using rule 39 (expression -> eye .)
    MAT_MINUS       reduce using rule 39 (expression -> eye .)
    TIMES           reduce using rule 39 (expression -> eye .)
    DIVIDE          reduce using rule 39 (expression -> eye .)
    MAT_TIMES       reduce using rule 39 (expression -> eye .)
    MAT_DIVIDE      reduce using rule 39 (expression -> eye .)
    TRANSPOSE       reduce using rule 39 (expression -> eye .)
    L_S_BRACKET     reduce using rule 39 (expression -> eye .)
    R_R_BRACKET     reduce using rule 39 (expression -> eye .)
    COMMA           reduce using rule 39 (expression -> eye .)
    R_S_BRACKET     reduce using rule 39 (expression -> eye .)
    EQUAL           reduce using rule 39 (expression -> eye .)
    NOT_EQUAL       reduce using rule 39 (expression -> eye .)
    GREATER         reduce using rule 39 (expression -> eye .)
    LESS            reduce using rule 39 (expression -> eye .)
    GREATER_EQUAL   reduce using rule 39 (expression -> eye .)
    LESS_EQUAL      reduce using rule 39 (expression -> eye .)
    COLON           reduce using rule 39 (expression -> eye .)
    L_R_BRACKET     reduce using rule 39 (expression -> eye .)
    RETURN          reduce using rule 39 (expression -> eye .)
    WHILE           reduce using rule 39 (expression -> eye .)
    FOR             reduce using rule 39 (expression -> eye .)
    L_C_BRACKET     reduce using rule 39 (expression -> eye .)
    EYE             reduce using rule 39 (expression -> eye .)
    ZEROS           reduce using rule 39 (expression -> eye .)
    ONES            reduce using rule 39 (expression -> eye .)
    INTEGER         reduce using rule 39 (expression -> eye .)
    FLOAT           reduce using rule 39 (expression -> eye .)
    STRING          reduce using rule 39 (expression -> eye .)
    PRINT           reduce using rule 39 (expression -> eye .)
    CONTINUE        reduce using rule 39 (expression -> eye .)
    BREAK           reduce using rule 39 (expression -> eye .)
    IF              reduce using rule 39 (expression -> eye .)
    ID              reduce using rule 39 (expression -> eye .)


state 16

    (40) expression -> zeros .

    SEMICOLON       reduce using rule 40 (expression -> zeros .)
    PLUS            reduce using rule 40 (expression -> zeros .)
    MINUS           reduce using rule 40 (expression -> zeros .)
    MAT_PLUS        reduce using rule 40 (expression -> zeros .)
    MAT_MINUS       reduce using rule 40 (expression -> zeros .)
    TIMES           reduce using rule 40 (expression -> zeros .)
    DIVIDE          reduce using rule 40 (expression -> zeros .)
    MAT_TIMES       reduce using rule 40 (expression -> zeros .)
    MAT_DIVIDE      reduce using rule 40 (expression -> zeros .)
    TRANSPOSE       reduce using rule 40 (expression -> zeros .)
    L_S_BRACKET     reduce using rule 40 (expression -> zeros .)
    R_R_BRACKET     reduce using rule 40 (expression -> zeros .)
    COMMA           reduce using rule 40 (expression -> zeros .)
    R_S_BRACKET     reduce using rule 40 (expression -> zeros .)
    EQUAL           reduce using rule 40 (expression -> zeros .)
    NOT_EQUAL       reduce using rule 40 (expression -> zeros .)
    GREATER         reduce using rule 40 (expression -> zeros .)
    LESS            reduce using rule 40 (expression -> zeros .)
    GREATER_EQUAL   reduce using rule 40 (expression -> zeros .)
    LESS_EQUAL      reduce using rule 40 (expression -> zeros .)
    COLON           reduce using rule 40 (expression -> zeros .)
    L_R_BRACKET     reduce using rule 40 (expression -> zeros .)
    RETURN          reduce using rule 40 (expression -> zeros .)
    WHILE           reduce using rule 40 (expression -> zeros .)
    FOR             reduce using rule 40 (expression -> zeros .)
    L_C_BRACKET     reduce using rule 40 (expression -> zeros .)
    EYE             reduce using rule 40 (expression -> zeros .)
    ZEROS           reduce using rule 40 (expression -> zeros .)
    ONES            reduce using rule 40 (expression -> zeros .)
    INTEGER         reduce using rule 40 (expression -> zeros .)
    FLOAT           reduce using rule 40 (expression -> zeros .)
    STRING          reduce using rule 40 (expression -> zeros .)
    PRINT           reduce using rule 40 (expression -> zeros .)
    CONTINUE        reduce using rule 40 (expression -> zeros .)
    BREAK           reduce using rule 40 (expression -> zeros .)
    IF              reduce using rule 40 (expression -> zeros .)
    ID              reduce using rule 40 (expression -> zeros .)


state 17

    (41) expression -> ones .

    SEMICOLON       reduce using rule 41 (expression -> ones .)
    PLUS            reduce using rule 41 (expression -> ones .)
    MINUS           reduce using rule 41 (expression -> ones .)
    MAT_PLUS        reduce using rule 41 (expression -> ones .)
    MAT_MINUS       reduce using rule 41 (expression -> ones .)
    TIMES           reduce using rule 41 (expression -> ones .)
    DIVIDE          reduce using rule 41 (expression -> ones .)
    MAT_TIMES       reduce using rule 41 (expression -> ones .)
    MAT_DIVIDE      reduce using rule 41 (expression -> ones .)
    TRANSPOSE       reduce using rule 41 (expression -> ones .)
    L_S_BRACKET     reduce using rule 41 (expression -> ones .)
    R_R_BRACKET     reduce using rule 41 (expression -> ones .)
    COMMA           reduce using rule 41 (expression -> ones .)
    R_S_BRACKET     reduce using rule 41 (expression -> ones .)
    EQUAL           reduce using rule 41 (expression -> ones .)
    NOT_EQUAL       reduce using rule 41 (expression -> ones .)
    GREATER         reduce using rule 41 (expression -> ones .)
    LESS            reduce using rule 41 (expression -> ones .)
    GREATER_EQUAL   reduce using rule 41 (expression -> ones .)
    LESS_EQUAL      reduce using rule 41 (expression -> ones .)
    COLON           reduce using rule 41 (expression -> ones .)
    L_R_BRACKET     reduce using rule 41 (expression -> ones .)
    RETURN          reduce using rule 41 (expression -> ones .)
    WHILE           reduce using rule 41 (expression -> ones .)
    FOR             reduce using rule 41 (expression -> ones .)
    L_C_BRACKET     reduce using rule 41 (expression -> ones .)
    EYE             reduce using rule 41 (expression -> ones .)
    ZEROS           reduce using rule 41 (expression -> ones .)
    ONES            reduce using rule 41 (expression -> ones .)
    INTEGER         reduce using rule 41 (expression -> ones .)
    FLOAT           reduce using rule 41 (expression -> ones .)
    STRING          reduce using rule 41 (expression -> ones .)
    PRINT           reduce using rule 41 (expression -> ones .)
    CONTINUE        reduce using rule 41 (expression -> ones .)
    BREAK           reduce using rule 41 (expression -> ones .)
    IF              reduce using rule 41 (expression -> ones .)
    ID              reduce using rule 41 (expression -> ones .)


state 18

    (42) expression -> L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 63
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 19

    (43) expression -> changeable .
    (51) assignment -> changeable . ASSIGN expression
    (52) assignment -> changeable . PLUS_ASSIGN expression
    (53) assignment -> changeable . MINUS_ASSIGN expression
    (54) assignment -> changeable . TIMES_ASSIGN expression
    (55) assignment -> changeable . DIVIDE_ASSIGN expression

    SEMICOLON       reduce using rule 43 (expression -> changeable .)
    PLUS            reduce using rule 43 (expression -> changeable .)
    MINUS           reduce using rule 43 (expression -> changeable .)
    MAT_PLUS        reduce using rule 43 (expression -> changeable .)
    MAT_MINUS       reduce using rule 43 (expression -> changeable .)
    TIMES           reduce using rule 43 (expression -> changeable .)
    DIVIDE          reduce using rule 43 (expression -> changeable .)
    MAT_TIMES       reduce using rule 43 (expression -> changeable .)
    MAT_DIVIDE      reduce using rule 43 (expression -> changeable .)
    TRANSPOSE       reduce using rule 43 (expression -> changeable .)
    L_S_BRACKET     reduce using rule 43 (expression -> changeable .)
    ASSIGN          shift and go to state 64
    PLUS_ASSIGN     shift and go to state 65
    MINUS_ASSIGN    shift and go to state 66
    TIMES_ASSIGN    shift and go to state 67
    DIVIDE_ASSIGN   shift and go to state 68


state 20

    (44) expression -> matrix .

    SEMICOLON       reduce using rule 44 (expression -> matrix .)
    PLUS            reduce using rule 44 (expression -> matrix .)
    MINUS           reduce using rule 44 (expression -> matrix .)
    MAT_PLUS        reduce using rule 44 (expression -> matrix .)
    MAT_MINUS       reduce using rule 44 (expression -> matrix .)
    TIMES           reduce using rule 44 (expression -> matrix .)
    DIVIDE          reduce using rule 44 (expression -> matrix .)
    MAT_TIMES       reduce using rule 44 (expression -> matrix .)
    MAT_DIVIDE      reduce using rule 44 (expression -> matrix .)
    TRANSPOSE       reduce using rule 44 (expression -> matrix .)
    L_S_BRACKET     reduce using rule 44 (expression -> matrix .)
    R_R_BRACKET     reduce using rule 44 (expression -> matrix .)
    COMMA           reduce using rule 44 (expression -> matrix .)
    R_S_BRACKET     reduce using rule 44 (expression -> matrix .)
    EQUAL           reduce using rule 44 (expression -> matrix .)
    NOT_EQUAL       reduce using rule 44 (expression -> matrix .)
    GREATER         reduce using rule 44 (expression -> matrix .)
    LESS            reduce using rule 44 (expression -> matrix .)
    GREATER_EQUAL   reduce using rule 44 (expression -> matrix .)
    LESS_EQUAL      reduce using rule 44 (expression -> matrix .)
    COLON           reduce using rule 44 (expression -> matrix .)
    L_R_BRACKET     reduce using rule 44 (expression -> matrix .)
    RETURN          reduce using rule 44 (expression -> matrix .)
    WHILE           reduce using rule 44 (expression -> matrix .)
    FOR             reduce using rule 44 (expression -> matrix .)
    L_C_BRACKET     reduce using rule 44 (expression -> matrix .)
    EYE             reduce using rule 44 (expression -> matrix .)
    ZEROS           reduce using rule 44 (expression -> matrix .)
    ONES            reduce using rule 44 (expression -> matrix .)
    INTEGER         reduce using rule 44 (expression -> matrix .)
    FLOAT           reduce using rule 44 (expression -> matrix .)
    STRING          reduce using rule 44 (expression -> matrix .)
    PRINT           reduce using rule 44 (expression -> matrix .)
    CONTINUE        reduce using rule 44 (expression -> matrix .)
    BREAK           reduce using rule 44 (expression -> matrix .)
    IF              reduce using rule 44 (expression -> matrix .)
    ID              reduce using rule 44 (expression -> matrix .)


state 21

    (45) expression -> integer .

    SEMICOLON       reduce using rule 45 (expression -> integer .)
    PLUS            reduce using rule 45 (expression -> integer .)
    MINUS           reduce using rule 45 (expression -> integer .)
    MAT_PLUS        reduce using rule 45 (expression -> integer .)
    MAT_MINUS       reduce using rule 45 (expression -> integer .)
    TIMES           reduce using rule 45 (expression -> integer .)
    DIVIDE          reduce using rule 45 (expression -> integer .)
    MAT_TIMES       reduce using rule 45 (expression -> integer .)
    MAT_DIVIDE      reduce using rule 45 (expression -> integer .)
    TRANSPOSE       reduce using rule 45 (expression -> integer .)
    L_S_BRACKET     reduce using rule 45 (expression -> integer .)
    R_R_BRACKET     reduce using rule 45 (expression -> integer .)
    COMMA           reduce using rule 45 (expression -> integer .)
    R_S_BRACKET     reduce using rule 45 (expression -> integer .)
    EQUAL           reduce using rule 45 (expression -> integer .)
    NOT_EQUAL       reduce using rule 45 (expression -> integer .)
    GREATER         reduce using rule 45 (expression -> integer .)
    LESS            reduce using rule 45 (expression -> integer .)
    GREATER_EQUAL   reduce using rule 45 (expression -> integer .)
    LESS_EQUAL      reduce using rule 45 (expression -> integer .)
    COLON           reduce using rule 45 (expression -> integer .)
    L_R_BRACKET     reduce using rule 45 (expression -> integer .)
    RETURN          reduce using rule 45 (expression -> integer .)
    WHILE           reduce using rule 45 (expression -> integer .)
    FOR             reduce using rule 45 (expression -> integer .)
    L_C_BRACKET     reduce using rule 45 (expression -> integer .)
    EYE             reduce using rule 45 (expression -> integer .)
    ZEROS           reduce using rule 45 (expression -> integer .)
    ONES            reduce using rule 45 (expression -> integer .)
    INTEGER         reduce using rule 45 (expression -> integer .)
    FLOAT           reduce using rule 45 (expression -> integer .)
    STRING          reduce using rule 45 (expression -> integer .)
    PRINT           reduce using rule 45 (expression -> integer .)
    CONTINUE        reduce using rule 45 (expression -> integer .)
    BREAK           reduce using rule 45 (expression -> integer .)
    IF              reduce using rule 45 (expression -> integer .)
    ID              reduce using rule 45 (expression -> integer .)


state 22

    (46) expression -> float .

    SEMICOLON       reduce using rule 46 (expression -> float .)
    PLUS            reduce using rule 46 (expression -> float .)
    MINUS           reduce using rule 46 (expression -> float .)
    MAT_PLUS        reduce using rule 46 (expression -> float .)
    MAT_MINUS       reduce using rule 46 (expression -> float .)
    TIMES           reduce using rule 46 (expression -> float .)
    DIVIDE          reduce using rule 46 (expression -> float .)
    MAT_TIMES       reduce using rule 46 (expression -> float .)
    MAT_DIVIDE      reduce using rule 46 (expression -> float .)
    TRANSPOSE       reduce using rule 46 (expression -> float .)
    L_S_BRACKET     reduce using rule 46 (expression -> float .)
    R_R_BRACKET     reduce using rule 46 (expression -> float .)
    COMMA           reduce using rule 46 (expression -> float .)
    R_S_BRACKET     reduce using rule 46 (expression -> float .)
    EQUAL           reduce using rule 46 (expression -> float .)
    NOT_EQUAL       reduce using rule 46 (expression -> float .)
    GREATER         reduce using rule 46 (expression -> float .)
    LESS            reduce using rule 46 (expression -> float .)
    GREATER_EQUAL   reduce using rule 46 (expression -> float .)
    LESS_EQUAL      reduce using rule 46 (expression -> float .)
    COLON           reduce using rule 46 (expression -> float .)
    L_R_BRACKET     reduce using rule 46 (expression -> float .)
    RETURN          reduce using rule 46 (expression -> float .)
    WHILE           reduce using rule 46 (expression -> float .)
    FOR             reduce using rule 46 (expression -> float .)
    L_C_BRACKET     reduce using rule 46 (expression -> float .)
    EYE             reduce using rule 46 (expression -> float .)
    ZEROS           reduce using rule 46 (expression -> float .)
    ONES            reduce using rule 46 (expression -> float .)
    INTEGER         reduce using rule 46 (expression -> float .)
    FLOAT           reduce using rule 46 (expression -> float .)
    STRING          reduce using rule 46 (expression -> float .)
    PRINT           reduce using rule 46 (expression -> float .)
    CONTINUE        reduce using rule 46 (expression -> float .)
    BREAK           reduce using rule 46 (expression -> float .)
    IF              reduce using rule 46 (expression -> float .)
    ID              reduce using rule 46 (expression -> float .)


state 23

    (47) expression -> string .

    SEMICOLON       reduce using rule 47 (expression -> string .)
    PLUS            reduce using rule 47 (expression -> string .)
    MINUS           reduce using rule 47 (expression -> string .)
    MAT_PLUS        reduce using rule 47 (expression -> string .)
    MAT_MINUS       reduce using rule 47 (expression -> string .)
    TIMES           reduce using rule 47 (expression -> string .)
    DIVIDE          reduce using rule 47 (expression -> string .)
    MAT_TIMES       reduce using rule 47 (expression -> string .)
    MAT_DIVIDE      reduce using rule 47 (expression -> string .)
    TRANSPOSE       reduce using rule 47 (expression -> string .)
    L_S_BRACKET     reduce using rule 47 (expression -> string .)
    R_R_BRACKET     reduce using rule 47 (expression -> string .)
    COMMA           reduce using rule 47 (expression -> string .)
    R_S_BRACKET     reduce using rule 47 (expression -> string .)
    EQUAL           reduce using rule 47 (expression -> string .)
    NOT_EQUAL       reduce using rule 47 (expression -> string .)
    GREATER         reduce using rule 47 (expression -> string .)
    LESS            reduce using rule 47 (expression -> string .)
    GREATER_EQUAL   reduce using rule 47 (expression -> string .)
    LESS_EQUAL      reduce using rule 47 (expression -> string .)
    COLON           reduce using rule 47 (expression -> string .)
    L_R_BRACKET     reduce using rule 47 (expression -> string .)
    RETURN          reduce using rule 47 (expression -> string .)
    WHILE           reduce using rule 47 (expression -> string .)
    FOR             reduce using rule 47 (expression -> string .)
    L_C_BRACKET     reduce using rule 47 (expression -> string .)
    EYE             reduce using rule 47 (expression -> string .)
    ZEROS           reduce using rule 47 (expression -> string .)
    ONES            reduce using rule 47 (expression -> string .)
    INTEGER         reduce using rule 47 (expression -> string .)
    FLOAT           reduce using rule 47 (expression -> string .)
    STRING          reduce using rule 47 (expression -> string .)
    PRINT           reduce using rule 47 (expression -> string .)
    CONTINUE        reduce using rule 47 (expression -> string .)
    BREAK           reduce using rule 47 (expression -> string .)
    IF              reduce using rule 47 (expression -> string .)
    ID              reduce using rule 47 (expression -> string .)


state 24

    (62) command -> print_command .

    SEMICOLON       reduce using rule 62 (command -> print_command .)


state 25

    (63) command -> RETURN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 69
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 26

    (64) command -> continue .

    SEMICOLON       reduce using rule 64 (command -> continue .)


state 27

    (65) command -> break .

    SEMICOLON       reduce using rule 65 (command -> break .)


state 28

    (14) conditional_statement -> if_statement . ELSE body
    (15) conditional_statement -> if_statement .

    ELSE            shift and go to state 70
    MINUS           reduce using rule 15 (conditional_statement -> if_statement .)
    L_R_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    RETURN          reduce using rule 15 (conditional_statement -> if_statement .)
    WHILE           reduce using rule 15 (conditional_statement -> if_statement .)
    FOR             reduce using rule 15 (conditional_statement -> if_statement .)
    L_C_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    EYE             reduce using rule 15 (conditional_statement -> if_statement .)
    ZEROS           reduce using rule 15 (conditional_statement -> if_statement .)
    ONES            reduce using rule 15 (conditional_statement -> if_statement .)
    L_S_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    INTEGER         reduce using rule 15 (conditional_statement -> if_statement .)
    FLOAT           reduce using rule 15 (conditional_statement -> if_statement .)
    STRING          reduce using rule 15 (conditional_statement -> if_statement .)
    PRINT           reduce using rule 15 (conditional_statement -> if_statement .)
    CONTINUE        reduce using rule 15 (conditional_statement -> if_statement .)
    BREAK           reduce using rule 15 (conditional_statement -> if_statement .)
    IF              reduce using rule 15 (conditional_statement -> if_statement .)
    ID              reduce using rule 15 (conditional_statement -> if_statement .)
    $end            reduce using rule 15 (conditional_statement -> if_statement .)
    R_C_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)

  ! ELSE            [ reduce using rule 15 (conditional_statement -> if_statement .) ]


state 29

    (17) while_statement -> WHILE . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 71


state 30

    (18) for_statement -> FOR . ID ASSIGN range body

    ID              shift and go to state 72


state 31

    (61) id -> ID .

    L_S_BRACKET     reduce using rule 61 (id -> ID .)
    ASSIGN          reduce using rule 61 (id -> ID .)
    PLUS_ASSIGN     reduce using rule 61 (id -> ID .)
    MINUS_ASSIGN    reduce using rule 61 (id -> ID .)
    TIMES_ASSIGN    reduce using rule 61 (id -> ID .)
    DIVIDE_ASSIGN   reduce using rule 61 (id -> ID .)
    SEMICOLON       reduce using rule 61 (id -> ID .)
    PLUS            reduce using rule 61 (id -> ID .)
    MINUS           reduce using rule 61 (id -> ID .)
    MAT_PLUS        reduce using rule 61 (id -> ID .)
    MAT_MINUS       reduce using rule 61 (id -> ID .)
    TIMES           reduce using rule 61 (id -> ID .)
    DIVIDE          reduce using rule 61 (id -> ID .)
    MAT_TIMES       reduce using rule 61 (id -> ID .)
    MAT_DIVIDE      reduce using rule 61 (id -> ID .)
    TRANSPOSE       reduce using rule 61 (id -> ID .)
    R_R_BRACKET     reduce using rule 61 (id -> ID .)
    COMMA           reduce using rule 61 (id -> ID .)
    R_S_BRACKET     reduce using rule 61 (id -> ID .)
    EQUAL           reduce using rule 61 (id -> ID .)
    NOT_EQUAL       reduce using rule 61 (id -> ID .)
    GREATER         reduce using rule 61 (id -> ID .)
    LESS            reduce using rule 61 (id -> ID .)
    GREATER_EQUAL   reduce using rule 61 (id -> ID .)
    LESS_EQUAL      reduce using rule 61 (id -> ID .)
    COLON           reduce using rule 61 (id -> ID .)
    L_R_BRACKET     reduce using rule 61 (id -> ID .)
    RETURN          reduce using rule 61 (id -> ID .)
    WHILE           reduce using rule 61 (id -> ID .)
    FOR             reduce using rule 61 (id -> ID .)
    L_C_BRACKET     reduce using rule 61 (id -> ID .)
    EYE             reduce using rule 61 (id -> ID .)
    ZEROS           reduce using rule 61 (id -> ID .)
    ONES            reduce using rule 61 (id -> ID .)
    INTEGER         reduce using rule 61 (id -> ID .)
    FLOAT           reduce using rule 61 (id -> ID .)
    STRING          reduce using rule 61 (id -> ID .)
    PRINT           reduce using rule 61 (id -> ID .)
    CONTINUE        reduce using rule 61 (id -> ID .)
    BREAK           reduce using rule 61 (id -> ID .)
    IF              reduce using rule 61 (id -> ID .)
    ID              reduce using rule 61 (id -> ID .)


state 32

    (20) instruction_block -> L_C_BRACKET . instructions_opt R_C_BRACKET
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (13) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    R_C_BRACKET     reduce using rule 13 (epsilon -> .)
    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    instructions_opt               shift and go to state 73
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 33

    (48) eye -> EYE . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 74


state 34

    (49) zeros -> ZEROS . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 75


state 35

    (50) ones -> ONES . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 76


state 36

    (56) changeable -> id .
    (57) changeable -> id . L_S_BRACKET expression COMMA expression R_S_BRACKET

    ASSIGN          reduce using rule 56 (changeable -> id .)
    PLUS_ASSIGN     reduce using rule 56 (changeable -> id .)
    MINUS_ASSIGN    reduce using rule 56 (changeable -> id .)
    TIMES_ASSIGN    reduce using rule 56 (changeable -> id .)
    DIVIDE_ASSIGN   reduce using rule 56 (changeable -> id .)
    SEMICOLON       reduce using rule 56 (changeable -> id .)
    PLUS            reduce using rule 56 (changeable -> id .)
    MINUS           reduce using rule 56 (changeable -> id .)
    MAT_PLUS        reduce using rule 56 (changeable -> id .)
    MAT_MINUS       reduce using rule 56 (changeable -> id .)
    TIMES           reduce using rule 56 (changeable -> id .)
    DIVIDE          reduce using rule 56 (changeable -> id .)
    MAT_TIMES       reduce using rule 56 (changeable -> id .)
    MAT_DIVIDE      reduce using rule 56 (changeable -> id .)
    TRANSPOSE       reduce using rule 56 (changeable -> id .)
    R_R_BRACKET     reduce using rule 56 (changeable -> id .)
    COMMA           reduce using rule 56 (changeable -> id .)
    R_S_BRACKET     reduce using rule 56 (changeable -> id .)
    EQUAL           reduce using rule 56 (changeable -> id .)
    NOT_EQUAL       reduce using rule 56 (changeable -> id .)
    GREATER         reduce using rule 56 (changeable -> id .)
    LESS            reduce using rule 56 (changeable -> id .)
    GREATER_EQUAL   reduce using rule 56 (changeable -> id .)
    LESS_EQUAL      reduce using rule 56 (changeable -> id .)
    COLON           reduce using rule 56 (changeable -> id .)
    L_R_BRACKET     reduce using rule 56 (changeable -> id .)
    RETURN          reduce using rule 56 (changeable -> id .)
    WHILE           reduce using rule 56 (changeable -> id .)
    FOR             reduce using rule 56 (changeable -> id .)
    L_C_BRACKET     reduce using rule 56 (changeable -> id .)
    EYE             reduce using rule 56 (changeable -> id .)
    ZEROS           reduce using rule 56 (changeable -> id .)
    ONES            reduce using rule 56 (changeable -> id .)
    INTEGER         reduce using rule 56 (changeable -> id .)
    FLOAT           reduce using rule 56 (changeable -> id .)
    STRING          reduce using rule 56 (changeable -> id .)
    PRINT           reduce using rule 56 (changeable -> id .)
    CONTINUE        reduce using rule 56 (changeable -> id .)
    BREAK           reduce using rule 56 (changeable -> id .)
    IF              reduce using rule 56 (changeable -> id .)
    ID              reduce using rule 56 (changeable -> id .)
    L_S_BRACKET     shift and go to state 77

  ! L_S_BRACKET     [ reduce using rule 56 (changeable -> id .) ]


state 37

    (58) integer -> INTEGER .

    SEMICOLON       reduce using rule 58 (integer -> INTEGER .)
    PLUS            reduce using rule 58 (integer -> INTEGER .)
    MINUS           reduce using rule 58 (integer -> INTEGER .)
    MAT_PLUS        reduce using rule 58 (integer -> INTEGER .)
    MAT_MINUS       reduce using rule 58 (integer -> INTEGER .)
    TIMES           reduce using rule 58 (integer -> INTEGER .)
    DIVIDE          reduce using rule 58 (integer -> INTEGER .)
    MAT_TIMES       reduce using rule 58 (integer -> INTEGER .)
    MAT_DIVIDE      reduce using rule 58 (integer -> INTEGER .)
    TRANSPOSE       reduce using rule 58 (integer -> INTEGER .)
    L_S_BRACKET     reduce using rule 58 (integer -> INTEGER .)
    R_R_BRACKET     reduce using rule 58 (integer -> INTEGER .)
    COMMA           reduce using rule 58 (integer -> INTEGER .)
    R_S_BRACKET     reduce using rule 58 (integer -> INTEGER .)
    EQUAL           reduce using rule 58 (integer -> INTEGER .)
    NOT_EQUAL       reduce using rule 58 (integer -> INTEGER .)
    GREATER         reduce using rule 58 (integer -> INTEGER .)
    LESS            reduce using rule 58 (integer -> INTEGER .)
    GREATER_EQUAL   reduce using rule 58 (integer -> INTEGER .)
    LESS_EQUAL      reduce using rule 58 (integer -> INTEGER .)
    COLON           reduce using rule 58 (integer -> INTEGER .)
    L_R_BRACKET     reduce using rule 58 (integer -> INTEGER .)
    RETURN          reduce using rule 58 (integer -> INTEGER .)
    WHILE           reduce using rule 58 (integer -> INTEGER .)
    FOR             reduce using rule 58 (integer -> INTEGER .)
    L_C_BRACKET     reduce using rule 58 (integer -> INTEGER .)
    EYE             reduce using rule 58 (integer -> INTEGER .)
    ZEROS           reduce using rule 58 (integer -> INTEGER .)
    ONES            reduce using rule 58 (integer -> INTEGER .)
    INTEGER         reduce using rule 58 (integer -> INTEGER .)
    FLOAT           reduce using rule 58 (integer -> INTEGER .)
    STRING          reduce using rule 58 (integer -> INTEGER .)
    PRINT           reduce using rule 58 (integer -> INTEGER .)
    CONTINUE        reduce using rule 58 (integer -> INTEGER .)
    BREAK           reduce using rule 58 (integer -> INTEGER .)
    IF              reduce using rule 58 (integer -> INTEGER .)
    ID              reduce using rule 58 (integer -> INTEGER .)


state 38

    (59) float -> FLOAT .

    SEMICOLON       reduce using rule 59 (float -> FLOAT .)
    PLUS            reduce using rule 59 (float -> FLOAT .)
    MINUS           reduce using rule 59 (float -> FLOAT .)
    MAT_PLUS        reduce using rule 59 (float -> FLOAT .)
    MAT_MINUS       reduce using rule 59 (float -> FLOAT .)
    TIMES           reduce using rule 59 (float -> FLOAT .)
    DIVIDE          reduce using rule 59 (float -> FLOAT .)
    MAT_TIMES       reduce using rule 59 (float -> FLOAT .)
    MAT_DIVIDE      reduce using rule 59 (float -> FLOAT .)
    TRANSPOSE       reduce using rule 59 (float -> FLOAT .)
    L_S_BRACKET     reduce using rule 59 (float -> FLOAT .)
    R_R_BRACKET     reduce using rule 59 (float -> FLOAT .)
    COMMA           reduce using rule 59 (float -> FLOAT .)
    R_S_BRACKET     reduce using rule 59 (float -> FLOAT .)
    EQUAL           reduce using rule 59 (float -> FLOAT .)
    NOT_EQUAL       reduce using rule 59 (float -> FLOAT .)
    GREATER         reduce using rule 59 (float -> FLOAT .)
    LESS            reduce using rule 59 (float -> FLOAT .)
    GREATER_EQUAL   reduce using rule 59 (float -> FLOAT .)
    LESS_EQUAL      reduce using rule 59 (float -> FLOAT .)
    COLON           reduce using rule 59 (float -> FLOAT .)
    L_R_BRACKET     reduce using rule 59 (float -> FLOAT .)
    RETURN          reduce using rule 59 (float -> FLOAT .)
    WHILE           reduce using rule 59 (float -> FLOAT .)
    FOR             reduce using rule 59 (float -> FLOAT .)
    L_C_BRACKET     reduce using rule 59 (float -> FLOAT .)
    EYE             reduce using rule 59 (float -> FLOAT .)
    ZEROS           reduce using rule 59 (float -> FLOAT .)
    ONES            reduce using rule 59 (float -> FLOAT .)
    INTEGER         reduce using rule 59 (float -> FLOAT .)
    FLOAT           reduce using rule 59 (float -> FLOAT .)
    STRING          reduce using rule 59 (float -> FLOAT .)
    PRINT           reduce using rule 59 (float -> FLOAT .)
    CONTINUE        reduce using rule 59 (float -> FLOAT .)
    BREAK           reduce using rule 59 (float -> FLOAT .)
    IF              reduce using rule 59 (float -> FLOAT .)
    ID              reduce using rule 59 (float -> FLOAT .)


state 39

    (60) string -> STRING .

    SEMICOLON       reduce using rule 60 (string -> STRING .)
    PLUS            reduce using rule 60 (string -> STRING .)
    MINUS           reduce using rule 60 (string -> STRING .)
    MAT_PLUS        reduce using rule 60 (string -> STRING .)
    MAT_MINUS       reduce using rule 60 (string -> STRING .)
    TIMES           reduce using rule 60 (string -> STRING .)
    DIVIDE          reduce using rule 60 (string -> STRING .)
    MAT_TIMES       reduce using rule 60 (string -> STRING .)
    MAT_DIVIDE      reduce using rule 60 (string -> STRING .)
    TRANSPOSE       reduce using rule 60 (string -> STRING .)
    L_S_BRACKET     reduce using rule 60 (string -> STRING .)
    R_R_BRACKET     reduce using rule 60 (string -> STRING .)
    COMMA           reduce using rule 60 (string -> STRING .)
    R_S_BRACKET     reduce using rule 60 (string -> STRING .)
    EQUAL           reduce using rule 60 (string -> STRING .)
    NOT_EQUAL       reduce using rule 60 (string -> STRING .)
    GREATER         reduce using rule 60 (string -> STRING .)
    LESS            reduce using rule 60 (string -> STRING .)
    GREATER_EQUAL   reduce using rule 60 (string -> STRING .)
    LESS_EQUAL      reduce using rule 60 (string -> STRING .)
    COLON           reduce using rule 60 (string -> STRING .)
    L_R_BRACKET     reduce using rule 60 (string -> STRING .)
    RETURN          reduce using rule 60 (string -> STRING .)
    WHILE           reduce using rule 60 (string -> STRING .)
    FOR             reduce using rule 60 (string -> STRING .)
    L_C_BRACKET     reduce using rule 60 (string -> STRING .)
    EYE             reduce using rule 60 (string -> STRING .)
    ZEROS           reduce using rule 60 (string -> STRING .)
    ONES            reduce using rule 60 (string -> STRING .)
    INTEGER         reduce using rule 60 (string -> STRING .)
    FLOAT           reduce using rule 60 (string -> STRING .)
    STRING          reduce using rule 60 (string -> STRING .)
    PRINT           reduce using rule 60 (string -> STRING .)
    CONTINUE        reduce using rule 60 (string -> STRING .)
    BREAK           reduce using rule 60 (string -> STRING .)
    IF              reduce using rule 60 (string -> STRING .)
    ID              reduce using rule 60 (string -> STRING .)


state 40

    (68) print_command -> PRINT . sequence
    (73) sequence -> . expression COMMA sequence
    (74) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    sequence                       shift and go to state 78
    expression                     shift and go to state 79
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 41

    (67) continue -> CONTINUE .

    SEMICOLON       reduce using rule 67 (continue -> CONTINUE .)


state 42

    (66) break -> BREAK .

    SEMICOLON       reduce using rule 66 (break -> BREAK .)


state 43

    (16) if_statement -> IF . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 80


state 44

    (4) instructions -> instructions instruction .

    MINUS           reduce using rule 4 (instructions -> instructions instruction .)
    L_R_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    L_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    L_S_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    INTEGER         reduce using rule 4 (instructions -> instructions instruction .)
    FLOAT           reduce using rule 4 (instructions -> instructions instruction .)
    STRING          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    R_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)


state 45

    (6) instruction -> expression SEMICOLON .

    MINUS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_R_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 6 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 6 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    EYE             reduce using rule 6 (instruction -> expression SEMICOLON .)
    ZEROS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    ONES            reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_S_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    INTEGER         reduce using rule 6 (instruction -> expression SEMICOLON .)
    FLOAT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 6 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    CONTINUE        reduce using rule 6 (instruction -> expression SEMICOLON .)
    BREAK           reduce using rule 6 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 6 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 6 (instruction -> expression SEMICOLON .)
    $end            reduce using rule 6 (instruction -> expression SEMICOLON .)
    R_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 6 (instruction -> expression SEMICOLON .)


state 46

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 81
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 47

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 82
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 48

    (30) expression -> expression MAT_PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 83
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 49

    (31) expression -> expression MAT_MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 84
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 50

    (32) expression -> expression TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 85
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 51

    (33) expression -> expression DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 86
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 52

    (34) expression -> expression MAT_TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 87
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 53

    (35) expression -> expression MAT_DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 88
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 54

    (37) expression -> expression TRANSPOSE .

    SEMICOLON       reduce using rule 37 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 37 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_PLUS        reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_MINUS       reduce using rule 37 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 37 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_TIMES       reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_DIVIDE      reduce using rule 37 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_S_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    R_R_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    COMMA           reduce using rule 37 (expression -> expression TRANSPOSE .)
    R_S_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    EQUAL           reduce using rule 37 (expression -> expression TRANSPOSE .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression TRANSPOSE .)
    GREATER         reduce using rule 37 (expression -> expression TRANSPOSE .)
    LESS            reduce using rule 37 (expression -> expression TRANSPOSE .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression TRANSPOSE .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression TRANSPOSE .)
    COLON           reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_R_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 37 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 37 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_C_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 37 (expression -> expression TRANSPOSE .)
    ZEROS           reduce using rule 37 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 37 (expression -> expression TRANSPOSE .)
    INTEGER         reduce using rule 37 (expression -> expression TRANSPOSE .)
    FLOAT           reduce using rule 37 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 37 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 37 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 37 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 37 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 37 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 37 (expression -> expression TRANSPOSE .)


state 55

    (38) expression -> expression L_S_BRACKET . expression COMMA expression R_S_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 89
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 56

    (7) instruction -> assignment SEMICOLON .

    MINUS           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_R_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    RETURN          reduce using rule 7 (instruction -> assignment SEMICOLON .)
    WHILE           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    FOR             reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_C_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    EYE             reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ZEROS           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ONES            reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_S_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    INTEGER         reduce using rule 7 (instruction -> assignment SEMICOLON .)
    FLOAT           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    STRING          reduce using rule 7 (instruction -> assignment SEMICOLON .)
    PRINT           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    CONTINUE        reduce using rule 7 (instruction -> assignment SEMICOLON .)
    BREAK           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    IF              reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ID              reduce using rule 7 (instruction -> assignment SEMICOLON .)
    $end            reduce using rule 7 (instruction -> assignment SEMICOLON .)
    R_C_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ELSE            reduce using rule 7 (instruction -> assignment SEMICOLON .)


state 57

    (8) instruction -> command SEMICOLON .

    MINUS           reduce using rule 8 (instruction -> command SEMICOLON .)
    L_R_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    RETURN          reduce using rule 8 (instruction -> command SEMICOLON .)
    WHILE           reduce using rule 8 (instruction -> command SEMICOLON .)
    FOR             reduce using rule 8 (instruction -> command SEMICOLON .)
    L_C_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    EYE             reduce using rule 8 (instruction -> command SEMICOLON .)
    ZEROS           reduce using rule 8 (instruction -> command SEMICOLON .)
    ONES            reduce using rule 8 (instruction -> command SEMICOLON .)
    L_S_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    INTEGER         reduce using rule 8 (instruction -> command SEMICOLON .)
    FLOAT           reduce using rule 8 (instruction -> command SEMICOLON .)
    STRING          reduce using rule 8 (instruction -> command SEMICOLON .)
    PRINT           reduce using rule 8 (instruction -> command SEMICOLON .)
    CONTINUE        reduce using rule 8 (instruction -> command SEMICOLON .)
    BREAK           reduce using rule 8 (instruction -> command SEMICOLON .)
    IF              reduce using rule 8 (instruction -> command SEMICOLON .)
    ID              reduce using rule 8 (instruction -> command SEMICOLON .)
    $end            reduce using rule 8 (instruction -> command SEMICOLON .)
    R_C_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    ELSE            reduce using rule 8 (instruction -> command SEMICOLON .)


state 58

    (36) expression -> MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 36 (expression -> MINUS expression .)
    PLUS            reduce using rule 36 (expression -> MINUS expression .)
    MINUS           reduce using rule 36 (expression -> MINUS expression .)
    MAT_PLUS        reduce using rule 36 (expression -> MINUS expression .)
    MAT_MINUS       reduce using rule 36 (expression -> MINUS expression .)
    TIMES           reduce using rule 36 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 36 (expression -> MINUS expression .)
    MAT_TIMES       reduce using rule 36 (expression -> MINUS expression .)
    MAT_DIVIDE      reduce using rule 36 (expression -> MINUS expression .)
    R_R_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    COMMA           reduce using rule 36 (expression -> MINUS expression .)
    R_S_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    EQUAL           reduce using rule 36 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> MINUS expression .)
    GREATER         reduce using rule 36 (expression -> MINUS expression .)
    LESS            reduce using rule 36 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> MINUS expression .)
    COLON           reduce using rule 36 (expression -> MINUS expression .)
    L_R_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    RETURN          reduce using rule 36 (expression -> MINUS expression .)
    WHILE           reduce using rule 36 (expression -> MINUS expression .)
    FOR             reduce using rule 36 (expression -> MINUS expression .)
    L_C_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    EYE             reduce using rule 36 (expression -> MINUS expression .)
    ZEROS           reduce using rule 36 (expression -> MINUS expression .)
    ONES            reduce using rule 36 (expression -> MINUS expression .)
    INTEGER         reduce using rule 36 (expression -> MINUS expression .)
    FLOAT           reduce using rule 36 (expression -> MINUS expression .)
    STRING          reduce using rule 36 (expression -> MINUS expression .)
    PRINT           reduce using rule 36 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 36 (expression -> MINUS expression .)
    BREAK           reduce using rule 36 (expression -> MINUS expression .)
    IF              reduce using rule 36 (expression -> MINUS expression .)
    ID              reduce using rule 36 (expression -> MINUS expression .)
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 36 (expression -> MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 36 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! MAT_TIMES       [ shift and go to state 52 ]
  ! MAT_DIVIDE      [ shift and go to state 53 ]


state 59

    (43) expression -> changeable .

    PLUS            reduce using rule 43 (expression -> changeable .)
    MINUS           reduce using rule 43 (expression -> changeable .)
    MAT_PLUS        reduce using rule 43 (expression -> changeable .)
    MAT_MINUS       reduce using rule 43 (expression -> changeable .)
    TIMES           reduce using rule 43 (expression -> changeable .)
    DIVIDE          reduce using rule 43 (expression -> changeable .)
    MAT_TIMES       reduce using rule 43 (expression -> changeable .)
    MAT_DIVIDE      reduce using rule 43 (expression -> changeable .)
    TRANSPOSE       reduce using rule 43 (expression -> changeable .)
    L_S_BRACKET     reduce using rule 43 (expression -> changeable .)
    SEMICOLON       reduce using rule 43 (expression -> changeable .)
    R_R_BRACKET     reduce using rule 43 (expression -> changeable .)
    COMMA           reduce using rule 43 (expression -> changeable .)
    R_S_BRACKET     reduce using rule 43 (expression -> changeable .)
    EQUAL           reduce using rule 43 (expression -> changeable .)
    NOT_EQUAL       reduce using rule 43 (expression -> changeable .)
    GREATER         reduce using rule 43 (expression -> changeable .)
    LESS            reduce using rule 43 (expression -> changeable .)
    GREATER_EQUAL   reduce using rule 43 (expression -> changeable .)
    LESS_EQUAL      reduce using rule 43 (expression -> changeable .)
    COLON           reduce using rule 43 (expression -> changeable .)
    L_R_BRACKET     reduce using rule 43 (expression -> changeable .)
    RETURN          reduce using rule 43 (expression -> changeable .)
    WHILE           reduce using rule 43 (expression -> changeable .)
    FOR             reduce using rule 43 (expression -> changeable .)
    L_C_BRACKET     reduce using rule 43 (expression -> changeable .)
    EYE             reduce using rule 43 (expression -> changeable .)
    ZEROS           reduce using rule 43 (expression -> changeable .)
    ONES            reduce using rule 43 (expression -> changeable .)
    INTEGER         reduce using rule 43 (expression -> changeable .)
    FLOAT           reduce using rule 43 (expression -> changeable .)
    STRING          reduce using rule 43 (expression -> changeable .)
    PRINT           reduce using rule 43 (expression -> changeable .)
    CONTINUE        reduce using rule 43 (expression -> changeable .)
    BREAK           reduce using rule 43 (expression -> changeable .)
    IF              reduce using rule 43 (expression -> changeable .)
    ID              reduce using rule 43 (expression -> changeable .)


state 60

    (72) row -> L_S_BRACKET . sequence R_S_BRACKET
    (73) sequence -> . expression COMMA sequence
    (74) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    sequence                       shift and go to state 90
    expression                     shift and go to state 79
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 61

    (69) matrix -> L_S_BRACKET row_sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 91


state 62

    (70) row_sequence -> row . COMMA row_sequence
    (71) row_sequence -> row .

    COMMA           shift and go to state 92
    R_S_BRACKET     reduce using rule 71 (row_sequence -> row .)


state 63

    (42) expression -> L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     shift and go to state 93
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 64

    (51) assignment -> changeable ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    changeable                     shift and go to state 59
    expression                     shift and go to state 94
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 65

    (52) assignment -> changeable PLUS_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    changeable                     shift and go to state 59
    expression                     shift and go to state 95
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 66

    (53) assignment -> changeable MINUS_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    changeable                     shift and go to state 59
    expression                     shift and go to state 96
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 67

    (54) assignment -> changeable TIMES_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    changeable                     shift and go to state 59
    expression                     shift and go to state 97
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 68

    (55) assignment -> changeable DIVIDE_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    changeable                     shift and go to state 59
    expression                     shift and go to state 98
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 69

    (63) command -> RETURN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 63 (command -> RETURN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 70

    (14) conditional_statement -> if_statement ELSE . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    if_statement                   shift and go to state 28
    body                           shift and go to state 99
    instruction                    shift and go to state 100
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    id                             shift and go to state 36

state 71

    (17) while_statement -> WHILE L_R_BRACKET . sentence R_R_BRACKET body
    (22) sentence -> . expression EQUAL expression
    (23) sentence -> . expression NOT_EQUAL expression
    (24) sentence -> . expression GREATER expression
    (25) sentence -> . expression LESS expression
    (26) sentence -> . expression GREATER_EQUAL expression
    (27) sentence -> . expression LESS_EQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    sentence                       shift and go to state 101
    expression                     shift and go to state 102
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 72

    (18) for_statement -> FOR ID . ASSIGN range body

    ASSIGN          shift and go to state 103


state 73

    (20) instruction_block -> L_C_BRACKET instructions_opt . R_C_BRACKET

    R_C_BRACKET     shift and go to state 104


state 74

    (48) eye -> EYE L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 105
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 75

    (49) zeros -> ZEROS L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 106
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 76

    (50) ones -> ONES L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 107
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 77

    (57) changeable -> id L_S_BRACKET . expression COMMA expression R_S_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    id                             shift and go to state 36
    expression                     shift and go to state 108
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23

state 78

    (68) print_command -> PRINT sequence .

    SEMICOLON       reduce using rule 68 (print_command -> PRINT sequence .)


state 79

    (73) sequence -> expression . COMMA sequence
    (74) sequence -> expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    COMMA           shift and go to state 109
    SEMICOLON       reduce using rule 74 (sequence -> expression .)
    R_S_BRACKET     reduce using rule 74 (sequence -> expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 80

    (16) if_statement -> IF L_R_BRACKET . sentence R_R_BRACKET body
    (22) sentence -> . expression EQUAL expression
    (23) sentence -> . expression NOT_EQUAL expression
    (24) sentence -> . expression GREATER expression
    (25) sentence -> . expression LESS expression
    (26) sentence -> . expression GREATER_EQUAL expression
    (27) sentence -> . expression LESS_EQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    sentence                       shift and go to state 110
    expression                     shift and go to state 102
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 81

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    MAT_PLUS        reduce using rule 28 (expression -> expression PLUS expression .)
    MAT_MINUS       reduce using rule 28 (expression -> expression PLUS expression .)
    R_R_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    R_S_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 28 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 28 (expression -> expression PLUS expression .)
    LESS            reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression PLUS expression .)
    COLON           reduce using rule 28 (expression -> expression PLUS expression .)
    L_R_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 28 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 28 (expression -> expression PLUS expression .)
    FOR             reduce using rule 28 (expression -> expression PLUS expression .)
    L_C_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    EYE             reduce using rule 28 (expression -> expression PLUS expression .)
    ZEROS           reduce using rule 28 (expression -> expression PLUS expression .)
    ONES            reduce using rule 28 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 28 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 28 (expression -> expression PLUS expression .)
    STRING          reduce using rule 28 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 28 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 28 (expression -> expression PLUS expression .)
    IF              reduce using rule 28 (expression -> expression PLUS expression .)
    ID              reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]


state 82

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    MAT_PLUS        reduce using rule 29 (expression -> expression MINUS expression .)
    MAT_MINUS       reduce using rule 29 (expression -> expression MINUS expression .)
    R_R_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    R_S_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 29 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 29 (expression -> expression MINUS expression .)
    LESS            reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression MINUS expression .)
    COLON           reduce using rule 29 (expression -> expression MINUS expression .)
    L_R_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 29 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 29 (expression -> expression MINUS expression .)
    FOR             reduce using rule 29 (expression -> expression MINUS expression .)
    L_C_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    EYE             reduce using rule 29 (expression -> expression MINUS expression .)
    ZEROS           reduce using rule 29 (expression -> expression MINUS expression .)
    ONES            reduce using rule 29 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 29 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 29 (expression -> expression MINUS expression .)
    STRING          reduce using rule 29 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 29 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 29 (expression -> expression MINUS expression .)
    IF              reduce using rule 29 (expression -> expression MINUS expression .)
    ID              reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]


state 83

    (30) expression -> expression MAT_PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MAT_PLUS        reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MAT_MINUS       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    R_R_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    R_S_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    EQUAL           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    LESS            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    GREATER_EQUAL   reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    LESS_EQUAL      reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    COLON           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    L_R_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    RETURN          reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    WHILE           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    FOR             reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    L_C_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    EYE             reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ZEROS           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ONES            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    INTEGER         reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    FLOAT           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    STRING          reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    PRINT           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    CONTINUE        reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    BREAK           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    IF              reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ID              reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TIMES           [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]


state 84

    (31) expression -> expression MAT_MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MAT_PLUS        reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MAT_MINUS       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    R_R_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    R_S_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    EQUAL           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    GREATER         reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    LESS            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    COLON           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    L_R_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    RETURN          reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    WHILE           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    FOR             reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    L_C_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    EYE             reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ZEROS           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ONES            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    INTEGER         reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    FLOAT           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    STRING          reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    PRINT           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    BREAK           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    IF              reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ID              reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TIMES           [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]


state 85

    (32) expression -> expression TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_PLUS        reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_MINUS       reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_TIMES       reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_DIVIDE      reduce using rule 32 (expression -> expression TIMES expression .)
    R_R_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)
    R_S_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 32 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 32 (expression -> expression TIMES expression .)
    LESS            reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression TIMES expression .)
    COLON           reduce using rule 32 (expression -> expression TIMES expression .)
    L_R_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 32 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 32 (expression -> expression TIMES expression .)
    FOR             reduce using rule 32 (expression -> expression TIMES expression .)
    L_C_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    EYE             reduce using rule 32 (expression -> expression TIMES expression .)
    ZEROS           reduce using rule 32 (expression -> expression TIMES expression .)
    ONES            reduce using rule 32 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 32 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 32 (expression -> expression TIMES expression .)
    STRING          reduce using rule 32 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 32 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 32 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 32 (expression -> expression TIMES expression .)
    IF              reduce using rule 32 (expression -> expression TIMES expression .)
    ID              reduce using rule 32 (expression -> expression TIMES expression .)
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! L_S_BRACKET     [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! MAT_TIMES       [ shift and go to state 52 ]
  ! MAT_DIVIDE      [ shift and go to state 53 ]


state 86

    (33) expression -> expression DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_PLUS        reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_MINUS       reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_TIMES       reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 33 (expression -> expression DIVIDE expression .)
    R_R_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)
    R_S_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 33 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 33 (expression -> expression DIVIDE expression .)
    L_R_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 33 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 33 (expression -> expression DIVIDE expression .)
    L_C_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    EYE             reduce using rule 33 (expression -> expression DIVIDE expression .)
    ZEROS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    ONES            reduce using rule 33 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 33 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 33 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 33 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 33 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 33 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 33 (expression -> expression DIVIDE expression .)
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! L_S_BRACKET     [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! MAT_TIMES       [ shift and go to state 52 ]
  ! MAT_DIVIDE      [ shift and go to state 53 ]


state 87

    (34) expression -> expression MAT_TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    PLUS            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MINUS           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_PLUS        reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_MINUS       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    TIMES           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_TIMES       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_DIVIDE      reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    R_R_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    COMMA           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    R_S_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    EQUAL           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    GREATER         reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    LESS            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    COLON           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    L_R_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    RETURN          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    WHILE           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    FOR             reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    L_C_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    EYE             reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ZEROS           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ONES            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    INTEGER         reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    FLOAT           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    STRING          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    PRINT           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    CONTINUE        reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    BREAK           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    IF              reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ID              reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 34 (expression -> expression MAT_TIMES expression .) ]
  ! L_S_BRACKET     [ reduce using rule 34 (expression -> expression MAT_TIMES expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! MAT_TIMES       [ shift and go to state 52 ]
  ! MAT_DIVIDE      [ shift and go to state 53 ]


state 88

    (35) expression -> expression MAT_DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_PLUS        reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_MINUS       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_TIMES       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    R_R_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    COMMA           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    R_S_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    EQUAL           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    GREATER         reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    LESS            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    COLON           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    L_R_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    RETURN          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    WHILE           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    FOR             reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    L_C_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    EYE             reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ZEROS           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ONES            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    INTEGER         reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    FLOAT           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    STRING          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    PRINT           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    CONTINUE        reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    BREAK           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    IF              reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ID              reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 35 (expression -> expression MAT_DIVIDE expression .) ]
  ! L_S_BRACKET     [ reduce using rule 35 (expression -> expression MAT_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MAT_PLUS        [ shift and go to state 48 ]
  ! MAT_MINUS       [ shift and go to state 49 ]
  ! TIMES           [ shift and go to state 50 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! MAT_TIMES       [ shift and go to state 52 ]
  ! MAT_DIVIDE      [ shift and go to state 53 ]


state 89

    (38) expression -> expression L_S_BRACKET expression . COMMA expression R_S_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    COMMA           shift and go to state 111
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 90

    (72) row -> L_S_BRACKET sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 112


state 91

    (69) matrix -> L_S_BRACKET row_sequence R_S_BRACKET .

    SEMICOLON       reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PLUS            reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MINUS           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_PLUS        reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_MINUS       reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TIMES           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    DIVIDE          reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_TIMES       reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TRANSPOSE       reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COMMA           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EQUAL           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER         reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS            reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COLON           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    RETURN          reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    WHILE           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FOR             reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EYE             reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ZEROS           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ONES            reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    INTEGER         reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FLOAT           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    STRING          reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PRINT           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    CONTINUE        reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    BREAK           reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    IF              reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ID              reduce using rule 69 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)


state 92

    (70) row_sequence -> row COMMA . row_sequence
    (70) row_sequence -> . row COMMA row_sequence
    (71) row_sequence -> . row
    (72) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 60

    row                            shift and go to state 62
    row_sequence                   shift and go to state 113

state 93

    (42) expression -> L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 42 (expression -> L_R_BRACKET expression R_R_BRACKET .)


state 94

    (51) assignment -> changeable ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 51 (assignment -> changeable ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 95

    (52) assignment -> changeable PLUS_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 52 (assignment -> changeable PLUS_ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 96

    (53) assignment -> changeable MINUS_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 53 (assignment -> changeable MINUS_ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 97

    (54) assignment -> changeable TIMES_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 54 (assignment -> changeable TIMES_ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 98

    (55) assignment -> changeable DIVIDE_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    SEMICOLON       reduce using rule 55 (assignment -> changeable DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 99

    (14) conditional_statement -> if_statement ELSE body .

    MINUS           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_R_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    RETURN          reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    WHILE           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    FOR             reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    EYE             reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ZEROS           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ONES            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_S_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    INTEGER         reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    FLOAT           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    STRING          reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    PRINT           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    CONTINUE        reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    BREAK           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    IF              reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ID              reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    $end            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    R_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ELSE            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)


state 100

    (19) body -> instruction .

    MINUS           reduce using rule 19 (body -> instruction .)
    L_R_BRACKET     reduce using rule 19 (body -> instruction .)
    RETURN          reduce using rule 19 (body -> instruction .)
    WHILE           reduce using rule 19 (body -> instruction .)
    FOR             reduce using rule 19 (body -> instruction .)
    L_C_BRACKET     reduce using rule 19 (body -> instruction .)
    EYE             reduce using rule 19 (body -> instruction .)
    ZEROS           reduce using rule 19 (body -> instruction .)
    ONES            reduce using rule 19 (body -> instruction .)
    L_S_BRACKET     reduce using rule 19 (body -> instruction .)
    INTEGER         reduce using rule 19 (body -> instruction .)
    FLOAT           reduce using rule 19 (body -> instruction .)
    STRING          reduce using rule 19 (body -> instruction .)
    PRINT           reduce using rule 19 (body -> instruction .)
    CONTINUE        reduce using rule 19 (body -> instruction .)
    BREAK           reduce using rule 19 (body -> instruction .)
    IF              reduce using rule 19 (body -> instruction .)
    ID              reduce using rule 19 (body -> instruction .)
    $end            reduce using rule 19 (body -> instruction .)
    R_C_BRACKET     reduce using rule 19 (body -> instruction .)
    ELSE            reduce using rule 19 (body -> instruction .)


state 101

    (17) while_statement -> WHILE L_R_BRACKET sentence . R_R_BRACKET body

    R_R_BRACKET     shift and go to state 114


state 102

    (22) sentence -> expression . EQUAL expression
    (23) sentence -> expression . NOT_EQUAL expression
    (24) sentence -> expression . GREATER expression
    (25) sentence -> expression . LESS expression
    (26) sentence -> expression . GREATER_EQUAL expression
    (27) sentence -> expression . LESS_EQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    EQUAL           shift and go to state 115
    NOT_EQUAL       shift and go to state 116
    GREATER         shift and go to state 117
    LESS            shift and go to state 118
    GREATER_EQUAL   shift and go to state 119
    LESS_EQUAL      shift and go to state 120
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 103

    (18) for_statement -> FOR ID ASSIGN . range body
    (21) range -> . expression COLON expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    range                          shift and go to state 121
    expression                     shift and go to state 122
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 104

    (20) instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .

    MINUS           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_R_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    RETURN          reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    WHILE           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FOR             reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_C_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    EYE             reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ZEROS           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ONES            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_S_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    INTEGER         reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FLOAT           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    STRING          reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    PRINT           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    CONTINUE        reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    BREAK           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    IF              reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ID              reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    $end            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    R_C_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ELSE            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)


state 105

    (48) eye -> EYE L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     shift and go to state 123
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 106

    (49) zeros -> ZEROS L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     shift and go to state 124
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 107

    (50) ones -> ONES L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     shift and go to state 125
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 108

    (57) changeable -> id L_S_BRACKET expression . COMMA expression R_S_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    COMMA           shift and go to state 126
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 109

    (73) sequence -> expression COMMA . sequence
    (73) sequence -> . expression COMMA sequence
    (74) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 79
    sequence                       shift and go to state 127
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 110

    (16) if_statement -> IF L_R_BRACKET sentence . R_R_BRACKET body

    R_R_BRACKET     shift and go to state 128


state 111

    (38) expression -> expression L_S_BRACKET expression COMMA . expression R_S_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 129
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 112

    (72) row -> L_S_BRACKET sequence R_S_BRACKET .

    COMMA           reduce using rule 72 (row -> L_S_BRACKET sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 72 (row -> L_S_BRACKET sequence R_S_BRACKET .)


state 113

    (70) row_sequence -> row COMMA row_sequence .

    R_S_BRACKET     reduce using rule 70 (row_sequence -> row COMMA row_sequence .)


state 114

    (17) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    body                           shift and go to state 130
    instruction                    shift and go to state 100
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 115

    (22) sentence -> expression EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 131
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 116

    (23) sentence -> expression NOT_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 132
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 117

    (24) sentence -> expression GREATER . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 133
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 118

    (25) sentence -> expression LESS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 134
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 119

    (26) sentence -> expression GREATER_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 135
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 120

    (27) sentence -> expression LESS_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 136
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 121

    (18) for_statement -> FOR ID ASSIGN range . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    body                           shift and go to state 137
    instruction                    shift and go to state 100
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 122

    (21) range -> expression . COLON expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    COLON           shift and go to state 138
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 123

    (48) eye -> EYE L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 48 (eye -> EYE L_R_BRACKET expression R_R_BRACKET .)


state 124

    (49) zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 49 (zeros -> ZEROS L_R_BRACKET expression R_R_BRACKET .)


state 125

    (50) ones -> ONES L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 50 (ones -> ONES L_R_BRACKET expression R_R_BRACKET .)


state 126

    (57) changeable -> id L_S_BRACKET expression COMMA . expression R_S_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    id                             shift and go to state 36
    expression                     shift and go to state 139
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23

state 127

    (73) sequence -> expression COMMA sequence .

    SEMICOLON       reduce using rule 73 (sequence -> expression COMMA sequence .)
    R_S_BRACKET     reduce using rule 73 (sequence -> expression COMMA sequence .)


state 128

    (16) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (51) assignment -> . changeable ASSIGN expression
    (52) assignment -> . changeable PLUS_ASSIGN expression
    (53) assignment -> . changeable MINUS_ASSIGN expression
    (54) assignment -> . changeable TIMES_ASSIGN expression
    (55) assignment -> . changeable DIVIDE_ASSIGN expression
    (62) command -> . print_command
    (63) command -> . RETURN expression
    (64) command -> . continue
    (65) command -> . break
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (68) print_command -> . PRINT sequence
    (67) continue -> . CONTINUE
    (66) break -> . BREAK
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    RETURN          shift and go to state 25
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    L_C_BRACKET     shift and go to state 32
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40
    CONTINUE        shift and go to state 41
    BREAK           shift and go to state 42
    IF              shift and go to state 43
    ID              shift and go to state 31

    body                           shift and go to state 140
    instruction                    shift and go to state 100
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 19
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    print_command                  shift and go to state 24
    continue                       shift and go to state 26
    break                          shift and go to state 27
    if_statement                   shift and go to state 28
    id                             shift and go to state 36

state 129

    (38) expression -> expression L_S_BRACKET expression COMMA expression . R_S_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_S_BRACKET     shift and go to state 141
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 130

    (17) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .

    MINUS           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ELSE            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)


state 131

    (22) sentence -> expression EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 22 (sentence -> expression EQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 132

    (23) sentence -> expression NOT_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 23 (sentence -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 133

    (24) sentence -> expression GREATER expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 24 (sentence -> expression GREATER expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 134

    (25) sentence -> expression LESS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 25 (sentence -> expression LESS expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 135

    (26) sentence -> expression GREATER_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 26 (sentence -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 136

    (27) sentence -> expression LESS_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_R_BRACKET     reduce using rule 27 (sentence -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 137

    (18) for_statement -> FOR ID ASSIGN range body .

    MINUS           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_R_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    RETURN          reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    WHILE           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    FOR             reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_C_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    EYE             reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ZEROS           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ONES            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_S_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    INTEGER         reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    FLOAT           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    STRING          reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    PRINT           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    CONTINUE        reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    BREAK           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    IF              reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ID              reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    $end            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    R_C_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ELSE            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)


state 138

    (21) range -> expression COLON . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . expression L_S_BRACKET expression COMMA expression R_S_BRACKET
    (39) expression -> . eye
    (40) expression -> . zeros
    (41) expression -> . ones
    (42) expression -> . L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . changeable
    (44) expression -> . matrix
    (45) expression -> . integer
    (46) expression -> . float
    (47) expression -> . string
    (48) eye -> . EYE L_R_BRACKET expression R_R_BRACKET
    (49) zeros -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (50) ones -> . ONES L_R_BRACKET expression R_R_BRACKET
    (56) changeable -> . id
    (57) changeable -> . id L_S_BRACKET expression COMMA expression R_S_BRACKET
    (69) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) integer -> . INTEGER
    (59) float -> . FLOAT
    (60) string -> . STRING
    (61) id -> . ID

    MINUS           shift and go to state 13
    L_R_BRACKET     shift and go to state 18
    EYE             shift and go to state 33
    ZEROS           shift and go to state 34
    ONES            shift and go to state 35
    L_S_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 31

    expression                     shift and go to state 142
    eye                            shift and go to state 15
    zeros                          shift and go to state 16
    ones                           shift and go to state 17
    changeable                     shift and go to state 59
    matrix                         shift and go to state 20
    integer                        shift and go to state 21
    float                          shift and go to state 22
    string                         shift and go to state 23
    id                             shift and go to state 36

state 139

    (57) changeable -> id L_S_BRACKET expression COMMA expression . R_S_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    R_S_BRACKET     shift and go to state 143
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55


state 140

    (16) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .

    ELSE            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    MINUS           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)


state 141

    (38) expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .

    SEMICOLON       reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    PLUS            reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MINUS           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_PLUS        reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_MINUS       reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    TIMES           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    DIVIDE          reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_TIMES       reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    TRANSPOSE       reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    COMMA           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    EQUAL           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    GREATER         reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    LESS            reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    COLON           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    RETURN          reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    WHILE           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    FOR             reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    EYE             reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ZEROS           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ONES            reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    INTEGER         reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    FLOAT           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    STRING          reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    PRINT           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    CONTINUE        reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    BREAK           reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    IF              reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ID              reduce using rule 38 (expression -> expression L_S_BRACKET expression COMMA expression R_S_BRACKET .)


state 142

    (21) range -> expression COLON expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (38) expression -> expression . L_S_BRACKET expression COMMA expression R_S_BRACKET

    L_R_BRACKET     reduce using rule 21 (range -> expression COLON expression .)
    RETURN          reduce using rule 21 (range -> expression COLON expression .)
    WHILE           reduce using rule 21 (range -> expression COLON expression .)
    FOR             reduce using rule 21 (range -> expression COLON expression .)
    L_C_BRACKET     reduce using rule 21 (range -> expression COLON expression .)
    EYE             reduce using rule 21 (range -> expression COLON expression .)
    ZEROS           reduce using rule 21 (range -> expression COLON expression .)
    ONES            reduce using rule 21 (range -> expression COLON expression .)
    INTEGER         reduce using rule 21 (range -> expression COLON expression .)
    FLOAT           reduce using rule 21 (range -> expression COLON expression .)
    STRING          reduce using rule 21 (range -> expression COLON expression .)
    PRINT           reduce using rule 21 (range -> expression COLON expression .)
    CONTINUE        reduce using rule 21 (range -> expression COLON expression .)
    BREAK           reduce using rule 21 (range -> expression COLON expression .)
    IF              reduce using rule 21 (range -> expression COLON expression .)
    ID              reduce using rule 21 (range -> expression COLON expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MAT_PLUS        shift and go to state 48
    MAT_MINUS       shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MAT_TIMES       shift and go to state 52
    MAT_DIVIDE      shift and go to state 53
    TRANSPOSE       shift and go to state 54
    L_S_BRACKET     shift and go to state 55

  ! MINUS           [ reduce using rule 21 (range -> expression COLON expression .) ]
  ! L_S_BRACKET     [ reduce using rule 21 (range -> expression COLON expression .) ]


state 143

    (57) changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .

    ASSIGN          reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    PLUS_ASSIGN     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MINUS_ASSIGN    reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    TIMES_ASSIGN    reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    SEMICOLON       reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    PLUS            reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MINUS           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_PLUS        reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_MINUS       reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    TIMES           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    DIVIDE          reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_TIMES       reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    TRANSPOSE       reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    COMMA           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    EQUAL           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    GREATER         reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    LESS            reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    COLON           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    RETURN          reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    WHILE           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    FOR             reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    EYE             reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ZEROS           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ONES            reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    INTEGER         reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    FLOAT           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    STRING          reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    PRINT           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    CONTINUE        reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    BREAK           reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    IF              reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)
    ID              reduce using rule 57 (changeable -> id L_S_BRACKET expression COMMA expression R_S_BRACKET .)

