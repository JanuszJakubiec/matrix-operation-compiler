
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIFXnonassocELSErightCOLONleftPLUSMINUSMAT_PLUSMAT_MINUSleftTIMESDIVIDEMAT_TIMESMAT_DIVIDErightUNARY_MINUSnonassocMAT_ELEMENTleftTRANSPOSEASSIGN BREAK COLON COMMA CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER GREATER_EQUAL ID IF INTEGER LESS LESS_EQUAL L_C_BRACKET L_R_BRACKET L_S_BRACKET MAT_DIVIDE MAT_MINUS MAT_PLUS MAT_TIMES MINUS MINUS_ASSIGN NOT_EQUAL ONES PLUS PLUS_ASSIGN PRINT RETURN R_C_BRACKET R_R_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TIMES_ASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_opt instructions_opt : instructions\n                        | epsilon instructions : instructions instruction\n                    | instruction instruction : expression SEMICOLON\n                   | assignment SEMICOLON\n                   | command SEMICOLON\n                   | conditional_statement\n                   | while_statement\n                   | for_statement\n                   | instruction_block epsilon : conditional_statement : if_statement ELSE body\n                             | if_statement %prec IFX if_statement : IF L_R_BRACKET sentence R_R_BRACKET body while_statement : WHILE L_R_BRACKET sentence R_R_BRACKET body for_statement : FOR ID ASSIGN range body body : instruction instruction_block : L_C_BRACKET instructions_opt R_C_BRACKET range : expression COLON expression sentence : expression EQUAL expression\n                | expression NOT_EQUAL expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression GREATER_EQUAL expression\n                | expression LESS_EQUAL expression expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MAT_PLUS expression\n                  | expression MAT_MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MAT_TIMES expression\n                  | expression MAT_DIVIDE expression\n                  | MINUS expression %prec UNARY_MINUS\n                  | expression TRANSPOSE\n                  | EYE L_R_BRACKET expression R_R_BRACKET\n                  | ZEROS L_R_BRACKET expression R_R_BRACKET\n                  | ONES L_R_BRACKET expression R_R_BRACKET\n                  | L_R_BRACKET expression R_R_BRACKET\n                  | changeable\n                  | matrix\n                  | INTEGER\n                  | FLOAT\n                  | STRING assignment : changeable ASSIGN expression\n                  | changeable PLUS_ASSIGN expression\n                  | changeable MINUS_ASSIGN expression\n                  | changeable TIMES_ASSIGN expression\n                  | changeable DIVIDE_ASSIGN expression changeable : ID\n                  | expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET %prec MAT_ELEMENT command : print_command\n               | RETURN expression\n               | CONTINUE\n               | BREAK print_command : PRINT sequence matrix : L_S_BRACKET row_sequence R_S_BRACKET row_sequence : row COMMA row_sequence\n                    | row row : L_S_BRACKET sequence R_S_BRACKET sequence : expression COMMA sequence\n                | expression '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,9,10,11,12,27,35,36,47,48,89,90,94,118,125,127,],[-13,0,-1,-2,-3,-5,-9,-10,-11,-12,-15,-4,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'MINUS':([0,3,5,6,9,10,11,12,13,15,18,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,112,116,118,119,120,121,122,123,124,125,126,127,128,129,],[13,13,-5,38,-9,-10,-11,-12,13,13,-42,-43,-44,-45,-46,13,-15,-52,13,13,-4,-6,13,13,13,13,13,13,13,13,-37,-7,-8,-36,-42,13,38,13,13,13,13,13,13,13,38,13,13,13,38,13,-28,-29,-30,-31,-32,-33,-34,-35,38,-41,38,38,38,38,38,38,38,-14,-19,38,13,-20,-59,13,-38,-39,-40,13,13,13,13,13,13,13,13,38,13,-17,38,38,38,38,38,38,-18,13,-16,-53,38,]),'EYE':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[14,14,-5,-9,-10,-11,-12,14,14,-43,-44,-45,-46,14,-15,-52,14,14,-4,-6,14,14,14,14,14,14,14,14,-37,-7,-8,-36,-42,14,14,14,14,14,14,14,14,14,14,14,14,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,14,-20,-59,14,-38,-39,-40,14,14,14,14,14,14,14,14,14,-17,-18,14,-16,-53,-21,]),'ZEROS':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[16,16,-5,-9,-10,-11,-12,16,16,-43,-44,-45,-46,16,-15,-52,16,16,-4,-6,16,16,16,16,16,16,16,16,-37,-7,-8,-36,-42,16,16,16,16,16,16,16,16,16,16,16,16,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,16,-20,-59,16,-38,-39,-40,16,16,16,16,16,16,16,16,16,-17,-18,16,-16,-53,-21,]),'ONES':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[17,17,-5,-9,-10,-11,-12,17,17,-43,-44,-45,-46,17,-15,-52,17,17,-4,-6,17,17,17,17,17,17,17,17,-37,-7,-8,-36,-42,17,17,17,17,17,17,17,17,17,17,17,17,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,17,-20,-59,17,-38,-39,-40,17,17,17,17,17,17,17,17,17,-17,-18,17,-16,-53,-21,]),'L_R_BRACKET':([0,3,5,9,10,11,12,13,14,15,16,17,19,20,21,22,24,27,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[15,15,-5,-9,-10,-11,-12,15,51,15,53,54,-43,-44,-45,-46,15,-15,62,-52,15,15,70,-4,-6,15,15,15,15,15,15,15,15,-37,-7,-8,-36,-42,15,15,15,15,15,15,15,15,15,15,15,15,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,15,-20,-59,15,-38,-39,-40,15,15,15,15,15,15,15,15,15,-17,-18,15,-16,-53,-21,]),'INTEGER':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,100,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[20,20,-5,-9,-10,-11,-12,20,20,-43,-44,-45,-46,20,-15,-52,20,20,-4,-6,20,20,20,20,20,20,20,20,-37,79,-7,-8,-36,-42,20,20,20,20,20,20,20,20,20,20,20,20,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,20,-20,-59,20,117,-38,-39,-40,20,20,20,20,20,20,20,20,20,-17,-18,20,-16,-53,-21,]),'FLOAT':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[21,21,-5,-9,-10,-11,-12,21,21,-43,-44,-45,-46,21,-15,-52,21,21,-4,-6,21,21,21,21,21,21,21,21,-37,-7,-8,-36,-42,21,21,21,21,21,21,21,21,21,21,21,21,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,21,-20,-59,21,-38,-39,-40,21,21,21,21,21,21,21,21,21,-17,-18,21,-16,-53,-21,]),'STRING':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[22,22,-5,-9,-10,-11,-12,22,22,-43,-44,-45,-46,22,-15,-52,22,22,-4,-6,22,22,22,22,22,22,22,22,-37,-7,-8,-36,-42,22,22,22,22,22,22,22,22,22,22,22,22,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,22,-20,-59,22,-38,-39,-40,22,22,22,22,22,22,22,22,22,-17,-18,22,-16,-53,-21,]),'RETURN':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[24,24,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,24,-4,-6,-37,-7,-8,-36,-42,24,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,24,24,24,-17,-18,-16,-53,-21,]),'CONTINUE':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[25,25,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,25,-4,-6,-37,-7,-8,-36,-42,25,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,25,25,25,-17,-18,-16,-53,-21,]),'BREAK':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[26,26,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,26,-4,-6,-37,-7,-8,-36,-42,26,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,26,26,26,-17,-18,-16,-53,-21,]),'WHILE':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[28,28,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,28,-4,-6,-37,-7,-8,-36,-42,28,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,28,28,28,-17,-18,-16,-53,-21,]),'FOR':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[29,29,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,29,-4,-6,-37,-7,-8,-36,-42,29,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,29,29,29,-17,-18,-16,-53,-21,]),'L_C_BRACKET':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[31,31,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,31,-4,-6,-37,-7,-8,-36,-42,31,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,31,31,31,-17,-18,-16,-53,-21,]),'ID':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,61,62,65,70,71,72,73,74,75,76,77,78,81,89,90,93,94,96,98,101,102,103,104,105,106,107,108,109,110,111,116,118,125,126,127,128,129,],[30,30,-5,-9,-10,-11,-12,30,30,-43,-44,-45,-46,30,-15,63,-52,30,30,-4,-6,30,30,30,30,30,30,30,30,-37,-7,-8,-36,-42,30,30,30,30,30,30,30,30,30,30,30,30,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,30,-20,-59,30,-38,-39,-40,30,30,30,30,30,30,30,30,30,-17,-18,30,-16,-53,-21,]),'L_S_BRACKET':([0,3,5,6,9,10,11,12,13,15,18,19,20,21,22,24,27,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,116,118,119,120,121,122,123,124,125,126,127,128,129,],[32,32,-5,46,-9,-10,-11,-12,32,32,-42,-43,-44,-45,-46,32,-15,-52,32,65,32,-4,-6,32,32,32,32,32,32,32,32,-37,-7,-8,-36,-42,32,46,32,32,32,32,32,32,32,46,32,32,32,46,32,-28,-29,-30,-31,-32,-33,-34,-35,46,-41,46,46,46,46,46,46,46,-14,-19,46,32,-20,-59,65,32,-38,-39,-40,32,32,32,32,32,32,32,32,46,32,-17,46,46,46,46,46,46,-18,32,-16,-53,-21,]),'PRINT':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[33,33,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,33,-4,-6,-37,-7,-8,-36,-42,33,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,33,33,33,-17,-18,-16,-53,-21,]),'IF':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,35,36,45,47,48,49,50,61,71,72,73,74,75,76,77,78,81,89,90,94,96,101,102,103,104,111,116,118,125,127,128,129,],[34,34,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-52,34,-4,-6,-37,-7,-8,-36,-42,34,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-59,-38,-39,-40,34,34,34,-17,-18,-16,-53,-21,]),'R_C_BRACKET':([3,4,5,9,10,11,12,27,31,35,36,47,48,64,89,90,94,118,125,127,],[-2,-3,-5,-9,-10,-11,-12,-15,-13,-4,-6,-7,-8,94,-14,-19,-20,-17,-18,-16,]),'SEMICOLON':([6,7,8,18,19,20,21,22,23,25,26,30,45,49,50,60,68,69,71,72,73,74,75,76,77,78,81,84,85,86,87,88,96,101,102,103,115,128,],[36,47,48,-42,-43,-44,-45,-46,-54,-56,-57,-52,-37,-36,-42,-55,-58,-64,-28,-29,-30,-31,-32,-33,-34,-35,-41,-47,-48,-49,-50,-51,-59,-38,-39,-40,-63,-53,]),'PLUS':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[37,-42,-43,-44,-45,-46,-52,-37,-36,-42,37,37,37,-28,-29,-30,-31,-32,-33,-34,-35,37,-41,37,37,37,37,37,37,37,37,-59,-38,-39,-40,37,37,37,37,37,37,37,-53,37,]),'MAT_PLUS':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[39,-42,-43,-44,-45,-46,-52,-37,-36,-42,39,39,39,-28,-29,-30,-31,-32,-33,-34,-35,39,-41,39,39,39,39,39,39,39,39,-59,-38,-39,-40,39,39,39,39,39,39,39,-53,39,]),'MAT_MINUS':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[40,-42,-43,-44,-45,-46,-52,-37,-36,-42,40,40,40,-28,-29,-30,-31,-32,-33,-34,-35,40,-41,40,40,40,40,40,40,40,40,-59,-38,-39,-40,40,40,40,40,40,40,40,-53,40,]),'TIMES':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[41,-42,-43,-44,-45,-46,-52,-37,-36,-42,41,41,41,41,41,41,41,-32,-33,-34,-35,41,-41,41,41,41,41,41,41,41,41,-59,-38,-39,-40,41,41,41,41,41,41,41,-53,41,]),'DIVIDE':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[42,-42,-43,-44,-45,-46,-52,-37,-36,-42,42,42,42,42,42,42,42,-32,-33,-34,-35,42,-41,42,42,42,42,42,42,42,42,-59,-38,-39,-40,42,42,42,42,42,42,42,-53,42,]),'MAT_TIMES':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[43,-42,-43,-44,-45,-46,-52,-37,-36,-42,43,43,43,43,43,43,43,-32,-33,-34,-35,43,-41,43,43,43,43,43,43,43,43,-59,-38,-39,-40,43,43,43,43,43,43,43,-53,43,]),'MAT_DIVIDE':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[44,-42,-43,-44,-45,-46,-52,-37,-36,-42,44,44,44,44,44,44,44,-32,-33,-34,-35,44,-41,44,44,44,44,44,44,44,44,-59,-38,-39,-40,44,44,44,44,44,44,44,-53,44,]),'TRANSPOSE':([6,18,19,20,21,22,30,45,49,50,52,60,69,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,92,96,101,102,103,112,119,120,121,122,123,124,128,129,],[45,-42,-43,-44,-45,-46,-52,-37,45,-42,45,45,45,45,45,45,45,45,45,45,45,45,-41,45,45,45,45,45,45,45,45,-59,-38,-39,-40,45,45,45,45,45,45,45,-53,45,]),'ELSE':([9,10,11,12,27,36,47,48,89,90,94,118,125,127,],[-9,-10,-11,-12,61,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'ASSIGN':([18,30,63,128,],[55,-52,93,-53,]),'PLUS_ASSIGN':([18,30,128,],[56,-52,-53,]),'MINUS_ASSIGN':([18,30,128,],[57,-52,-53,]),'TIMES_ASSIGN':([18,30,128,],[58,-52,-53,]),'DIVIDE_ASSIGN':([18,30,128,],[59,-52,-53,]),'R_R_BRACKET':([19,20,21,22,30,45,49,50,52,71,72,73,74,75,76,77,78,80,81,82,83,91,96,99,101,102,103,119,120,121,122,123,124,128,],[-43,-44,-45,-46,-52,-37,-36,-42,81,-28,-29,-30,-31,-32,-33,-34,-35,101,-41,102,103,104,-59,116,-38,-39,-40,-22,-23,-24,-25,-26,-27,-53,]),'COMMA':([19,20,21,22,30,45,49,50,67,69,71,72,73,74,75,76,77,78,79,81,96,101,102,103,113,128,],[-43,-44,-45,-46,-52,-37,-36,-42,97,98,-28,-29,-30,-31,-32,-33,-34,-35,100,-41,-59,-38,-39,-40,-62,-53,]),'EQUAL':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,105,-59,-38,-39,-40,-53,]),'NOT_EQUAL':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,106,-59,-38,-39,-40,-53,]),'GREATER':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,107,-59,-38,-39,-40,-53,]),'LESS':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,108,-59,-38,-39,-40,-53,]),'GREATER_EQUAL':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,109,-59,-38,-39,-40,-53,]),'LESS_EQUAL':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,92,96,101,102,103,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,110,-59,-38,-39,-40,-53,]),'R_S_BRACKET':([19,20,21,22,30,45,49,50,66,67,69,71,72,73,74,75,76,77,78,81,95,96,101,102,103,113,114,115,117,128,],[-43,-44,-45,-46,-52,-37,-36,-42,96,-61,-64,-28,-29,-30,-31,-32,-33,-34,-35,-41,113,-59,-38,-39,-40,-62,-60,-63,128,-53,]),'COLON':([19,20,21,22,30,45,49,50,71,72,73,74,75,76,77,78,81,96,101,102,103,112,128,],[-43,-44,-45,-46,-52,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,-59,-38,-39,-40,126,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,31,],[2,64,]),'instructions':([0,31,],[3,3,]),'epsilon':([0,31,],[4,4,]),'instruction':([0,3,31,61,104,111,116,],[5,35,5,90,90,90,90,]),'expression':([0,3,13,15,24,31,33,37,38,39,40,41,42,43,44,51,53,54,55,56,57,58,59,61,62,65,70,93,98,104,105,106,107,108,109,110,111,116,126,],[6,6,49,52,60,6,69,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,88,6,92,69,92,112,69,6,119,120,121,122,123,124,6,6,129,]),'assignment':([0,3,31,61,104,111,116,],[7,7,7,7,7,7,7,]),'command':([0,3,31,61,104,111,116,],[8,8,8,8,8,8,8,]),'conditional_statement':([0,3,31,61,104,111,116,],[9,9,9,9,9,9,9,]),'while_statement':([0,3,31,61,104,111,116,],[10,10,10,10,10,10,10,]),'for_statement':([0,3,31,61,104,111,116,],[11,11,11,11,11,11,11,]),'instruction_block':([0,3,31,61,104,111,116,],[12,12,12,12,12,12,12,]),'changeable':([0,3,13,15,24,31,33,37,38,39,40,41,42,43,44,51,53,54,55,56,57,58,59,61,62,65,70,93,98,104,105,106,107,108,109,110,111,116,126,],[18,18,50,50,50,18,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,18,50,50,50,50,50,18,50,50,50,50,50,50,18,18,50,]),'matrix':([0,3,13,15,24,31,33,37,38,39,40,41,42,43,44,51,53,54,55,56,57,58,59,61,62,65,70,93,98,104,105,106,107,108,109,110,111,116,126,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'print_command':([0,3,31,61,104,111,116,],[23,23,23,23,23,23,23,]),'if_statement':([0,3,31,61,104,111,116,],[27,27,27,27,27,27,27,]),'row_sequence':([32,97,],[66,114,]),'row':([32,97,],[67,67,]),'sequence':([33,65,98,],[68,95,115,]),'body':([61,104,111,116,],[89,118,125,127,]),'sentence':([62,70,],[91,99,]),'range':([93,],[111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','matrix_parser.py',36),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','matrix_parser.py',41),
  ('instructions_opt -> epsilon','instructions_opt',1,'p_instructions_opt','matrix_parser.py',42),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','matrix_parser.py',50),
  ('instructions -> instruction','instructions',1,'p_instructions','matrix_parser.py',51),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',59),
  ('instruction -> assignment SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',60),
  ('instruction -> command SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',61),
  ('instruction -> conditional_statement','instruction',1,'p_instruction','matrix_parser.py',62),
  ('instruction -> while_statement','instruction',1,'p_instruction','matrix_parser.py',63),
  ('instruction -> for_statement','instruction',1,'p_instruction','matrix_parser.py',64),
  ('instruction -> instruction_block','instruction',1,'p_instruction','matrix_parser.py',65),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','matrix_parser.py',70),
  ('conditional_statement -> if_statement ELSE body','conditional_statement',3,'p_conditional_statement','matrix_parser.py',79),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','matrix_parser.py',80),
  ('if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body','if_statement',5,'p_if_statement','matrix_parser.py',88),
  ('while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body','while_statement',5,'p_while_statement','matrix_parser.py',93),
  ('for_statement -> FOR ID ASSIGN range body','for_statement',5,'p_for_statement','matrix_parser.py',98),
  ('body -> instruction','body',1,'p_body','matrix_parser.py',103),
  ('instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET','instruction_block',3,'p_instruction_block','matrix_parser.py',108),
  ('range -> expression COLON expression','range',3,'p_range','matrix_parser.py',113),
  ('sentence -> expression EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',122),
  ('sentence -> expression NOT_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',123),
  ('sentence -> expression GREATER expression','sentence',3,'p_sentence','matrix_parser.py',124),
  ('sentence -> expression LESS expression','sentence',3,'p_sentence','matrix_parser.py',125),
  ('sentence -> expression GREATER_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',126),
  ('sentence -> expression LESS_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',127),
  ('expression -> expression PLUS expression','expression',3,'p_expression','matrix_parser.py',139),
  ('expression -> expression MINUS expression','expression',3,'p_expression','matrix_parser.py',140),
  ('expression -> expression MAT_PLUS expression','expression',3,'p_expression','matrix_parser.py',141),
  ('expression -> expression MAT_MINUS expression','expression',3,'p_expression','matrix_parser.py',142),
  ('expression -> expression TIMES expression','expression',3,'p_expression','matrix_parser.py',143),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','matrix_parser.py',144),
  ('expression -> expression MAT_TIMES expression','expression',3,'p_expression','matrix_parser.py',145),
  ('expression -> expression MAT_DIVIDE expression','expression',3,'p_expression','matrix_parser.py',146),
  ('expression -> MINUS expression','expression',2,'p_expression','matrix_parser.py',147),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression','matrix_parser.py',148),
  ('expression -> EYE L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',149),
  ('expression -> ZEROS L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',150),
  ('expression -> ONES L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',151),
  ('expression -> L_R_BRACKET expression R_R_BRACKET','expression',3,'p_expression','matrix_parser.py',152),
  ('expression -> changeable','expression',1,'p_expression','matrix_parser.py',153),
  ('expression -> matrix','expression',1,'p_expression','matrix_parser.py',154),
  ('expression -> INTEGER','expression',1,'p_expression','matrix_parser.py',155),
  ('expression -> FLOAT','expression',1,'p_expression','matrix_parser.py',156),
  ('expression -> STRING','expression',1,'p_expression','matrix_parser.py',157),
  ('assignment -> changeable ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',172),
  ('assignment -> changeable PLUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',173),
  ('assignment -> changeable MINUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',174),
  ('assignment -> changeable TIMES_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',175),
  ('assignment -> changeable DIVIDE_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',176),
  ('changeable -> ID','changeable',1,'p_changeable','matrix_parser.py',181),
  ('changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET','changeable',6,'p_changeable','matrix_parser.py',182),
  ('command -> print_command','command',1,'p_command','matrix_parser.py',194),
  ('command -> RETURN expression','command',2,'p_command','matrix_parser.py',195),
  ('command -> CONTINUE','command',1,'p_command','matrix_parser.py',196),
  ('command -> BREAK','command',1,'p_command','matrix_parser.py',197),
  ('print_command -> PRINT sequence','print_command',2,'p_print_command','matrix_parser.py',205),
  ('matrix -> L_S_BRACKET row_sequence R_S_BRACKET','matrix',3,'p_matrix','matrix_parser.py',214),
  ('row_sequence -> row COMMA row_sequence','row_sequence',3,'p_row_sequence','matrix_parser.py',219),
  ('row_sequence -> row','row_sequence',1,'p_row_sequence','matrix_parser.py',220),
  ('row -> L_S_BRACKET sequence R_S_BRACKET','row',3,'p_row','matrix_parser.py',228),
  ('sequence -> expression COMMA sequence','sequence',3,'p_sequence','matrix_parser.py',233),
  ('sequence -> expression','sequence',1,'p_sequence','matrix_parser.py',234),
]
