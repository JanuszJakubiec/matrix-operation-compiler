Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> epsilon
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> expression SEMICOLON
Rule 7     instruction -> command SEMICOLON
Rule 8     instruction -> conditional_statement
Rule 9     instruction -> while_statement
Rule 10    instruction -> for_statement
Rule 11    instruction -> instruction_block
Rule 12    epsilon -> <empty>
Rule 13    conditional_statement -> if_statement ELSE body
Rule 14    conditional_statement -> if_statement
Rule 15    if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body
Rule 16    while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body
Rule 17    for_statement -> FOR ID ASSIGN range body
Rule 18    body -> instruction
Rule 19    instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET
Rule 20    range -> expression COLON expression
Rule 21    sentence -> sentence OR sentence
Rule 22    sentence -> sentence AND sentence
Rule 23    sentence -> NOT sentence
Rule 24    sentence -> expression EQUAL expression
Rule 25    sentence -> expression NOT_EQUAL expression
Rule 26    sentence -> expression GREATER expression
Rule 27    sentence -> expression LESS expression
Rule 28    sentence -> expression GREATER_EQUAL expression
Rule 29    sentence -> expression LESS_EQUAL expression
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression MAT_PLUS expression
Rule 33    expression -> expression MAT_MINUS expression
Rule 34    expression -> expression TIMES expression
Rule 35    expression -> expression DIVIDE expression
Rule 36    expression -> expression MAT_TIMES expression
Rule 37    expression -> expression MAT_DIVIDE expression
Rule 38    expression -> MINUS expression
Rule 39    expression -> expression TRANSPOSE
Rule 40    expression -> EYE L_R_BRACKET expression R_R_BRACKET
Rule 41    expression -> ZEROS L_R_BRACKET expression R_R_BRACKET
Rule 42    expression -> ONES L_R_BRACKET expression R_R_BRACKET
Rule 43    expression -> L_R_BRACKET expression R_R_BRACKET
Rule 44    expression -> assignment
Rule 45    expression -> changeable
Rule 46    expression -> INTEGER
Rule 47    expression -> FLOAT
Rule 48    expression -> STRING
Rule 49    assignment -> changeable ASSIGN expression
Rule 50    assignment -> changeable PLUS_ASSIGN expression
Rule 51    assignment -> changeable MINUS_ASSIGN expression
Rule 52    assignment -> changeable TIMES_ASSIGN expression
Rule 53    assignment -> changeable DIVIDE_ASSIGN expression
Rule 54    changeable -> ID
Rule 55    changeable -> matrix
Rule 56    changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
Rule 57    command -> print_command
Rule 58    command -> RETURN expression
Rule 59    command -> CONTINUE
Rule 60    command -> BREAK
Rule 61    print_command -> PRINT sequence
Rule 62    matrix -> L_S_BRACKET row_sequence R_S_BRACKET
Rule 63    row_sequence -> row COMMA row_sequence
Rule 64    row_sequence -> row
Rule 65    row -> L_S_BRACKET sequence R_S_BRACKET
Rule 66    sequence -> expression COMMA sequence
Rule 67    sequence -> expression

Terminals, with rules where they appear

AND                  : 22
ASSIGN               : 17 49
BREAK                : 60
COLON                : 20
COMMA                : 56 63 66
COMMENT              : 
CONTINUE             : 59
DIVIDE               : 35
DIVIDE_ASSIGN        : 53
ELSE                 : 13
EQUAL                : 24
EYE                  : 40
FLOAT                : 47
FOR                  : 17
GREATER              : 26
GREATER_EQUAL        : 28
ID                   : 17 54
IF                   : 15
INTEGER              : 46 56 56
LESS                 : 27
LESS_EQUAL           : 29
L_C_BRACKET          : 19
L_R_BRACKET          : 15 16 40 41 42 43
L_S_BRACKET          : 56 62 65
MAT_DIVIDE           : 37
MAT_MINUS            : 33
MAT_PLUS             : 32
MAT_TIMES            : 36
MINUS                : 31 38
MINUS_ASSIGN         : 51
NOT                  : 23
NOT_EQUAL            : 25
ONES                 : 42
OR                   : 21
PLUS                 : 30
PLUS_ASSIGN          : 50
PRINT                : 61
RETURN               : 58
R_C_BRACKET          : 19
R_R_BRACKET          : 15 16 40 41 42 43
R_S_BRACKET          : 56 62 65
SEMICOLON            : 6 7
STRING               : 48
TIMES                : 34
TIMES_ASSIGN         : 52
TRANSPOSE            : 39
WHILE                : 16
ZEROS                : 41
error                : 

Nonterminals, with rules where they appear

assignment           : 44
body                 : 13 15 16 17
changeable           : 45 49 50 51 52 53
command              : 7
conditional_statement : 8
epsilon              : 3
expression           : 6 20 20 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 40 41 42 43 49 50 51 52 53 56 58 66 67
for_statement        : 10
if_statement         : 13 14
instruction          : 4 5 18
instruction_block    : 11
instructions         : 2 4
instructions_opt     : 1 19
matrix               : 55
print_command        : 57
program              : 0
range                : 17
row                  : 63 64
row_sequence         : 62 63
sentence             : 15 16 21 21 22 22 23
sequence             : 61 65 66
while_statement      : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (12) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    $end            reduce using rule 12 (epsilon -> .)
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    R_C_BRACKET     reduce using rule 2 (instructions_opt -> instructions .)
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    instruction                    shift and go to state 35
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 4

    (3) instructions_opt -> epsilon .

    $end            reduce using rule 3 (instructions_opt -> epsilon .)
    R_C_BRACKET     reduce using rule 3 (instructions_opt -> epsilon .)


state 5

    (5) instructions -> instruction .

    MINUS           reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    L_R_BRACKET     reduce using rule 5 (instructions -> instruction .)
    INTEGER         reduce using rule 5 (instructions -> instruction .)
    FLOAT           reduce using rule 5 (instructions -> instruction .)
    STRING          reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    L_C_BRACKET     reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    L_S_BRACKET     reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    R_C_BRACKET     reduce using rule 5 (instructions -> instruction .)


state 6

    (6) instruction -> expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 7

    (7) instruction -> command . SEMICOLON

    SEMICOLON       shift and go to state 47


state 8

    (8) instruction -> conditional_statement .

    MINUS           reduce using rule 8 (instruction -> conditional_statement .)
    EYE             reduce using rule 8 (instruction -> conditional_statement .)
    ZEROS           reduce using rule 8 (instruction -> conditional_statement .)
    ONES            reduce using rule 8 (instruction -> conditional_statement .)
    L_R_BRACKET     reduce using rule 8 (instruction -> conditional_statement .)
    INTEGER         reduce using rule 8 (instruction -> conditional_statement .)
    FLOAT           reduce using rule 8 (instruction -> conditional_statement .)
    STRING          reduce using rule 8 (instruction -> conditional_statement .)
    RETURN          reduce using rule 8 (instruction -> conditional_statement .)
    CONTINUE        reduce using rule 8 (instruction -> conditional_statement .)
    BREAK           reduce using rule 8 (instruction -> conditional_statement .)
    WHILE           reduce using rule 8 (instruction -> conditional_statement .)
    FOR             reduce using rule 8 (instruction -> conditional_statement .)
    L_C_BRACKET     reduce using rule 8 (instruction -> conditional_statement .)
    ID              reduce using rule 8 (instruction -> conditional_statement .)
    PRINT           reduce using rule 8 (instruction -> conditional_statement .)
    IF              reduce using rule 8 (instruction -> conditional_statement .)
    L_S_BRACKET     reduce using rule 8 (instruction -> conditional_statement .)
    $end            reduce using rule 8 (instruction -> conditional_statement .)
    R_C_BRACKET     reduce using rule 8 (instruction -> conditional_statement .)
    ELSE            reduce using rule 8 (instruction -> conditional_statement .)


state 9

    (9) instruction -> while_statement .

    MINUS           reduce using rule 9 (instruction -> while_statement .)
    EYE             reduce using rule 9 (instruction -> while_statement .)
    ZEROS           reduce using rule 9 (instruction -> while_statement .)
    ONES            reduce using rule 9 (instruction -> while_statement .)
    L_R_BRACKET     reduce using rule 9 (instruction -> while_statement .)
    INTEGER         reduce using rule 9 (instruction -> while_statement .)
    FLOAT           reduce using rule 9 (instruction -> while_statement .)
    STRING          reduce using rule 9 (instruction -> while_statement .)
    RETURN          reduce using rule 9 (instruction -> while_statement .)
    CONTINUE        reduce using rule 9 (instruction -> while_statement .)
    BREAK           reduce using rule 9 (instruction -> while_statement .)
    WHILE           reduce using rule 9 (instruction -> while_statement .)
    FOR             reduce using rule 9 (instruction -> while_statement .)
    L_C_BRACKET     reduce using rule 9 (instruction -> while_statement .)
    ID              reduce using rule 9 (instruction -> while_statement .)
    PRINT           reduce using rule 9 (instruction -> while_statement .)
    IF              reduce using rule 9 (instruction -> while_statement .)
    L_S_BRACKET     reduce using rule 9 (instruction -> while_statement .)
    $end            reduce using rule 9 (instruction -> while_statement .)
    R_C_BRACKET     reduce using rule 9 (instruction -> while_statement .)
    ELSE            reduce using rule 9 (instruction -> while_statement .)


state 10

    (10) instruction -> for_statement .

    MINUS           reduce using rule 10 (instruction -> for_statement .)
    EYE             reduce using rule 10 (instruction -> for_statement .)
    ZEROS           reduce using rule 10 (instruction -> for_statement .)
    ONES            reduce using rule 10 (instruction -> for_statement .)
    L_R_BRACKET     reduce using rule 10 (instruction -> for_statement .)
    INTEGER         reduce using rule 10 (instruction -> for_statement .)
    FLOAT           reduce using rule 10 (instruction -> for_statement .)
    STRING          reduce using rule 10 (instruction -> for_statement .)
    RETURN          reduce using rule 10 (instruction -> for_statement .)
    CONTINUE        reduce using rule 10 (instruction -> for_statement .)
    BREAK           reduce using rule 10 (instruction -> for_statement .)
    WHILE           reduce using rule 10 (instruction -> for_statement .)
    FOR             reduce using rule 10 (instruction -> for_statement .)
    L_C_BRACKET     reduce using rule 10 (instruction -> for_statement .)
    ID              reduce using rule 10 (instruction -> for_statement .)
    PRINT           reduce using rule 10 (instruction -> for_statement .)
    IF              reduce using rule 10 (instruction -> for_statement .)
    L_S_BRACKET     reduce using rule 10 (instruction -> for_statement .)
    $end            reduce using rule 10 (instruction -> for_statement .)
    R_C_BRACKET     reduce using rule 10 (instruction -> for_statement .)
    ELSE            reduce using rule 10 (instruction -> for_statement .)


state 11

    (11) instruction -> instruction_block .

    MINUS           reduce using rule 11 (instruction -> instruction_block .)
    EYE             reduce using rule 11 (instruction -> instruction_block .)
    ZEROS           reduce using rule 11 (instruction -> instruction_block .)
    ONES            reduce using rule 11 (instruction -> instruction_block .)
    L_R_BRACKET     reduce using rule 11 (instruction -> instruction_block .)
    INTEGER         reduce using rule 11 (instruction -> instruction_block .)
    FLOAT           reduce using rule 11 (instruction -> instruction_block .)
    STRING          reduce using rule 11 (instruction -> instruction_block .)
    RETURN          reduce using rule 11 (instruction -> instruction_block .)
    CONTINUE        reduce using rule 11 (instruction -> instruction_block .)
    BREAK           reduce using rule 11 (instruction -> instruction_block .)
    WHILE           reduce using rule 11 (instruction -> instruction_block .)
    FOR             reduce using rule 11 (instruction -> instruction_block .)
    L_C_BRACKET     reduce using rule 11 (instruction -> instruction_block .)
    ID              reduce using rule 11 (instruction -> instruction_block .)
    PRINT           reduce using rule 11 (instruction -> instruction_block .)
    IF              reduce using rule 11 (instruction -> instruction_block .)
    L_S_BRACKET     reduce using rule 11 (instruction -> instruction_block .)
    $end            reduce using rule 11 (instruction -> instruction_block .)
    R_C_BRACKET     reduce using rule 11 (instruction -> instruction_block .)
    ELSE            reduce using rule 11 (instruction -> instruction_block .)


state 12

    (38) expression -> MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 48
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 13

    (40) expression -> EYE . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 49


state 14

    (43) expression -> L_R_BRACKET . expression R_R_BRACKET
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 50
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 15

    (41) expression -> ZEROS . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 51


state 16

    (42) expression -> ONES . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 52


state 17

    (44) expression -> assignment .

    SEMICOLON       reduce using rule 44 (expression -> assignment .)
    PLUS            reduce using rule 44 (expression -> assignment .)
    MINUS           reduce using rule 44 (expression -> assignment .)
    MAT_PLUS        reduce using rule 44 (expression -> assignment .)
    MAT_MINUS       reduce using rule 44 (expression -> assignment .)
    TIMES           reduce using rule 44 (expression -> assignment .)
    DIVIDE          reduce using rule 44 (expression -> assignment .)
    MAT_TIMES       reduce using rule 44 (expression -> assignment .)
    MAT_DIVIDE      reduce using rule 44 (expression -> assignment .)
    TRANSPOSE       reduce using rule 44 (expression -> assignment .)
    L_S_BRACKET     reduce using rule 44 (expression -> assignment .)
    R_R_BRACKET     reduce using rule 44 (expression -> assignment .)
    COMMA           reduce using rule 44 (expression -> assignment .)
    EQUAL           reduce using rule 44 (expression -> assignment .)
    NOT_EQUAL       reduce using rule 44 (expression -> assignment .)
    GREATER         reduce using rule 44 (expression -> assignment .)
    LESS            reduce using rule 44 (expression -> assignment .)
    GREATER_EQUAL   reduce using rule 44 (expression -> assignment .)
    LESS_EQUAL      reduce using rule 44 (expression -> assignment .)
    R_S_BRACKET     reduce using rule 44 (expression -> assignment .)
    COLON           reduce using rule 44 (expression -> assignment .)
    OR              reduce using rule 44 (expression -> assignment .)
    AND             reduce using rule 44 (expression -> assignment .)
    EYE             reduce using rule 44 (expression -> assignment .)
    ZEROS           reduce using rule 44 (expression -> assignment .)
    ONES            reduce using rule 44 (expression -> assignment .)
    L_R_BRACKET     reduce using rule 44 (expression -> assignment .)
    INTEGER         reduce using rule 44 (expression -> assignment .)
    FLOAT           reduce using rule 44 (expression -> assignment .)
    STRING          reduce using rule 44 (expression -> assignment .)
    RETURN          reduce using rule 44 (expression -> assignment .)
    CONTINUE        reduce using rule 44 (expression -> assignment .)
    BREAK           reduce using rule 44 (expression -> assignment .)
    WHILE           reduce using rule 44 (expression -> assignment .)
    FOR             reduce using rule 44 (expression -> assignment .)
    L_C_BRACKET     reduce using rule 44 (expression -> assignment .)
    ID              reduce using rule 44 (expression -> assignment .)
    PRINT           reduce using rule 44 (expression -> assignment .)
    IF              reduce using rule 44 (expression -> assignment .)


state 18

    (45) expression -> changeable .
    (49) assignment -> changeable . ASSIGN expression
    (50) assignment -> changeable . PLUS_ASSIGN expression
    (51) assignment -> changeable . MINUS_ASSIGN expression
    (52) assignment -> changeable . TIMES_ASSIGN expression
    (53) assignment -> changeable . DIVIDE_ASSIGN expression

    SEMICOLON       reduce using rule 45 (expression -> changeable .)
    PLUS            reduce using rule 45 (expression -> changeable .)
    MINUS           reduce using rule 45 (expression -> changeable .)
    MAT_PLUS        reduce using rule 45 (expression -> changeable .)
    MAT_MINUS       reduce using rule 45 (expression -> changeable .)
    TIMES           reduce using rule 45 (expression -> changeable .)
    DIVIDE          reduce using rule 45 (expression -> changeable .)
    MAT_TIMES       reduce using rule 45 (expression -> changeable .)
    MAT_DIVIDE      reduce using rule 45 (expression -> changeable .)
    TRANSPOSE       reduce using rule 45 (expression -> changeable .)
    L_S_BRACKET     reduce using rule 45 (expression -> changeable .)
    R_R_BRACKET     reduce using rule 45 (expression -> changeable .)
    COMMA           reduce using rule 45 (expression -> changeable .)
    EQUAL           reduce using rule 45 (expression -> changeable .)
    NOT_EQUAL       reduce using rule 45 (expression -> changeable .)
    GREATER         reduce using rule 45 (expression -> changeable .)
    LESS            reduce using rule 45 (expression -> changeable .)
    GREATER_EQUAL   reduce using rule 45 (expression -> changeable .)
    LESS_EQUAL      reduce using rule 45 (expression -> changeable .)
    R_S_BRACKET     reduce using rule 45 (expression -> changeable .)
    COLON           reduce using rule 45 (expression -> changeable .)
    OR              reduce using rule 45 (expression -> changeable .)
    AND             reduce using rule 45 (expression -> changeable .)
    EYE             reduce using rule 45 (expression -> changeable .)
    ZEROS           reduce using rule 45 (expression -> changeable .)
    ONES            reduce using rule 45 (expression -> changeable .)
    L_R_BRACKET     reduce using rule 45 (expression -> changeable .)
    INTEGER         reduce using rule 45 (expression -> changeable .)
    FLOAT           reduce using rule 45 (expression -> changeable .)
    STRING          reduce using rule 45 (expression -> changeable .)
    RETURN          reduce using rule 45 (expression -> changeable .)
    CONTINUE        reduce using rule 45 (expression -> changeable .)
    BREAK           reduce using rule 45 (expression -> changeable .)
    WHILE           reduce using rule 45 (expression -> changeable .)
    FOR             reduce using rule 45 (expression -> changeable .)
    L_C_BRACKET     reduce using rule 45 (expression -> changeable .)
    ID              reduce using rule 45 (expression -> changeable .)
    PRINT           reduce using rule 45 (expression -> changeable .)
    IF              reduce using rule 45 (expression -> changeable .)
    ASSIGN          shift and go to state 53
    PLUS_ASSIGN     shift and go to state 54
    MINUS_ASSIGN    shift and go to state 55
    TIMES_ASSIGN    shift and go to state 56
    DIVIDE_ASSIGN   shift and go to state 57


state 19

    (46) expression -> INTEGER .

    SEMICOLON       reduce using rule 46 (expression -> INTEGER .)
    PLUS            reduce using rule 46 (expression -> INTEGER .)
    MINUS           reduce using rule 46 (expression -> INTEGER .)
    MAT_PLUS        reduce using rule 46 (expression -> INTEGER .)
    MAT_MINUS       reduce using rule 46 (expression -> INTEGER .)
    TIMES           reduce using rule 46 (expression -> INTEGER .)
    DIVIDE          reduce using rule 46 (expression -> INTEGER .)
    MAT_TIMES       reduce using rule 46 (expression -> INTEGER .)
    MAT_DIVIDE      reduce using rule 46 (expression -> INTEGER .)
    TRANSPOSE       reduce using rule 46 (expression -> INTEGER .)
    L_S_BRACKET     reduce using rule 46 (expression -> INTEGER .)
    R_R_BRACKET     reduce using rule 46 (expression -> INTEGER .)
    COMMA           reduce using rule 46 (expression -> INTEGER .)
    EQUAL           reduce using rule 46 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 46 (expression -> INTEGER .)
    GREATER         reduce using rule 46 (expression -> INTEGER .)
    LESS            reduce using rule 46 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 46 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 46 (expression -> INTEGER .)
    R_S_BRACKET     reduce using rule 46 (expression -> INTEGER .)
    COLON           reduce using rule 46 (expression -> INTEGER .)
    OR              reduce using rule 46 (expression -> INTEGER .)
    AND             reduce using rule 46 (expression -> INTEGER .)
    EYE             reduce using rule 46 (expression -> INTEGER .)
    ZEROS           reduce using rule 46 (expression -> INTEGER .)
    ONES            reduce using rule 46 (expression -> INTEGER .)
    L_R_BRACKET     reduce using rule 46 (expression -> INTEGER .)
    INTEGER         reduce using rule 46 (expression -> INTEGER .)
    FLOAT           reduce using rule 46 (expression -> INTEGER .)
    STRING          reduce using rule 46 (expression -> INTEGER .)
    RETURN          reduce using rule 46 (expression -> INTEGER .)
    CONTINUE        reduce using rule 46 (expression -> INTEGER .)
    BREAK           reduce using rule 46 (expression -> INTEGER .)
    WHILE           reduce using rule 46 (expression -> INTEGER .)
    FOR             reduce using rule 46 (expression -> INTEGER .)
    L_C_BRACKET     reduce using rule 46 (expression -> INTEGER .)
    ID              reduce using rule 46 (expression -> INTEGER .)
    PRINT           reduce using rule 46 (expression -> INTEGER .)
    IF              reduce using rule 46 (expression -> INTEGER .)


state 20

    (47) expression -> FLOAT .

    SEMICOLON       reduce using rule 47 (expression -> FLOAT .)
    PLUS            reduce using rule 47 (expression -> FLOAT .)
    MINUS           reduce using rule 47 (expression -> FLOAT .)
    MAT_PLUS        reduce using rule 47 (expression -> FLOAT .)
    MAT_MINUS       reduce using rule 47 (expression -> FLOAT .)
    TIMES           reduce using rule 47 (expression -> FLOAT .)
    DIVIDE          reduce using rule 47 (expression -> FLOAT .)
    MAT_TIMES       reduce using rule 47 (expression -> FLOAT .)
    MAT_DIVIDE      reduce using rule 47 (expression -> FLOAT .)
    TRANSPOSE       reduce using rule 47 (expression -> FLOAT .)
    L_S_BRACKET     reduce using rule 47 (expression -> FLOAT .)
    R_R_BRACKET     reduce using rule 47 (expression -> FLOAT .)
    COMMA           reduce using rule 47 (expression -> FLOAT .)
    EQUAL           reduce using rule 47 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 47 (expression -> FLOAT .)
    GREATER         reduce using rule 47 (expression -> FLOAT .)
    LESS            reduce using rule 47 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 47 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 47 (expression -> FLOAT .)
    R_S_BRACKET     reduce using rule 47 (expression -> FLOAT .)
    COLON           reduce using rule 47 (expression -> FLOAT .)
    OR              reduce using rule 47 (expression -> FLOAT .)
    AND             reduce using rule 47 (expression -> FLOAT .)
    EYE             reduce using rule 47 (expression -> FLOAT .)
    ZEROS           reduce using rule 47 (expression -> FLOAT .)
    ONES            reduce using rule 47 (expression -> FLOAT .)
    L_R_BRACKET     reduce using rule 47 (expression -> FLOAT .)
    INTEGER         reduce using rule 47 (expression -> FLOAT .)
    FLOAT           reduce using rule 47 (expression -> FLOAT .)
    STRING          reduce using rule 47 (expression -> FLOAT .)
    RETURN          reduce using rule 47 (expression -> FLOAT .)
    CONTINUE        reduce using rule 47 (expression -> FLOAT .)
    BREAK           reduce using rule 47 (expression -> FLOAT .)
    WHILE           reduce using rule 47 (expression -> FLOAT .)
    FOR             reduce using rule 47 (expression -> FLOAT .)
    L_C_BRACKET     reduce using rule 47 (expression -> FLOAT .)
    ID              reduce using rule 47 (expression -> FLOAT .)
    PRINT           reduce using rule 47 (expression -> FLOAT .)
    IF              reduce using rule 47 (expression -> FLOAT .)


state 21

    (48) expression -> STRING .

    SEMICOLON       reduce using rule 48 (expression -> STRING .)
    PLUS            reduce using rule 48 (expression -> STRING .)
    MINUS           reduce using rule 48 (expression -> STRING .)
    MAT_PLUS        reduce using rule 48 (expression -> STRING .)
    MAT_MINUS       reduce using rule 48 (expression -> STRING .)
    TIMES           reduce using rule 48 (expression -> STRING .)
    DIVIDE          reduce using rule 48 (expression -> STRING .)
    MAT_TIMES       reduce using rule 48 (expression -> STRING .)
    MAT_DIVIDE      reduce using rule 48 (expression -> STRING .)
    TRANSPOSE       reduce using rule 48 (expression -> STRING .)
    L_S_BRACKET     reduce using rule 48 (expression -> STRING .)
    R_R_BRACKET     reduce using rule 48 (expression -> STRING .)
    COMMA           reduce using rule 48 (expression -> STRING .)
    EQUAL           reduce using rule 48 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 48 (expression -> STRING .)
    GREATER         reduce using rule 48 (expression -> STRING .)
    LESS            reduce using rule 48 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 48 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 48 (expression -> STRING .)
    R_S_BRACKET     reduce using rule 48 (expression -> STRING .)
    COLON           reduce using rule 48 (expression -> STRING .)
    OR              reduce using rule 48 (expression -> STRING .)
    AND             reduce using rule 48 (expression -> STRING .)
    EYE             reduce using rule 48 (expression -> STRING .)
    ZEROS           reduce using rule 48 (expression -> STRING .)
    ONES            reduce using rule 48 (expression -> STRING .)
    L_R_BRACKET     reduce using rule 48 (expression -> STRING .)
    INTEGER         reduce using rule 48 (expression -> STRING .)
    FLOAT           reduce using rule 48 (expression -> STRING .)
    STRING          reduce using rule 48 (expression -> STRING .)
    RETURN          reduce using rule 48 (expression -> STRING .)
    CONTINUE        reduce using rule 48 (expression -> STRING .)
    BREAK           reduce using rule 48 (expression -> STRING .)
    WHILE           reduce using rule 48 (expression -> STRING .)
    FOR             reduce using rule 48 (expression -> STRING .)
    L_C_BRACKET     reduce using rule 48 (expression -> STRING .)
    ID              reduce using rule 48 (expression -> STRING .)
    PRINT           reduce using rule 48 (expression -> STRING .)
    IF              reduce using rule 48 (expression -> STRING .)


state 22

    (57) command -> print_command .

    SEMICOLON       reduce using rule 57 (command -> print_command .)


state 23

    (58) command -> RETURN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 58
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 24

    (59) command -> CONTINUE .

    SEMICOLON       reduce using rule 59 (command -> CONTINUE .)


state 25

    (60) command -> BREAK .

    SEMICOLON       reduce using rule 60 (command -> BREAK .)


state 26

    (13) conditional_statement -> if_statement . ELSE body
    (14) conditional_statement -> if_statement .

    ELSE            shift and go to state 59
    MINUS           reduce using rule 14 (conditional_statement -> if_statement .)
    EYE             reduce using rule 14 (conditional_statement -> if_statement .)
    ZEROS           reduce using rule 14 (conditional_statement -> if_statement .)
    ONES            reduce using rule 14 (conditional_statement -> if_statement .)
    L_R_BRACKET     reduce using rule 14 (conditional_statement -> if_statement .)
    INTEGER         reduce using rule 14 (conditional_statement -> if_statement .)
    FLOAT           reduce using rule 14 (conditional_statement -> if_statement .)
    STRING          reduce using rule 14 (conditional_statement -> if_statement .)
    RETURN          reduce using rule 14 (conditional_statement -> if_statement .)
    CONTINUE        reduce using rule 14 (conditional_statement -> if_statement .)
    BREAK           reduce using rule 14 (conditional_statement -> if_statement .)
    WHILE           reduce using rule 14 (conditional_statement -> if_statement .)
    FOR             reduce using rule 14 (conditional_statement -> if_statement .)
    L_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement .)
    ID              reduce using rule 14 (conditional_statement -> if_statement .)
    PRINT           reduce using rule 14 (conditional_statement -> if_statement .)
    IF              reduce using rule 14 (conditional_statement -> if_statement .)
    L_S_BRACKET     reduce using rule 14 (conditional_statement -> if_statement .)
    $end            reduce using rule 14 (conditional_statement -> if_statement .)
    R_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement .)

  ! ELSE            [ reduce using rule 14 (conditional_statement -> if_statement .) ]


state 27

    (16) while_statement -> WHILE . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 60


state 28

    (17) for_statement -> FOR . ID ASSIGN range body

    ID              shift and go to state 61


state 29

    (54) changeable -> ID .

    ASSIGN          reduce using rule 54 (changeable -> ID .)
    PLUS_ASSIGN     reduce using rule 54 (changeable -> ID .)
    MINUS_ASSIGN    reduce using rule 54 (changeable -> ID .)
    TIMES_ASSIGN    reduce using rule 54 (changeable -> ID .)
    DIVIDE_ASSIGN   reduce using rule 54 (changeable -> ID .)
    SEMICOLON       reduce using rule 54 (changeable -> ID .)
    PLUS            reduce using rule 54 (changeable -> ID .)
    MINUS           reduce using rule 54 (changeable -> ID .)
    MAT_PLUS        reduce using rule 54 (changeable -> ID .)
    MAT_MINUS       reduce using rule 54 (changeable -> ID .)
    TIMES           reduce using rule 54 (changeable -> ID .)
    DIVIDE          reduce using rule 54 (changeable -> ID .)
    MAT_TIMES       reduce using rule 54 (changeable -> ID .)
    MAT_DIVIDE      reduce using rule 54 (changeable -> ID .)
    TRANSPOSE       reduce using rule 54 (changeable -> ID .)
    L_S_BRACKET     reduce using rule 54 (changeable -> ID .)
    R_R_BRACKET     reduce using rule 54 (changeable -> ID .)
    COMMA           reduce using rule 54 (changeable -> ID .)
    EQUAL           reduce using rule 54 (changeable -> ID .)
    NOT_EQUAL       reduce using rule 54 (changeable -> ID .)
    GREATER         reduce using rule 54 (changeable -> ID .)
    LESS            reduce using rule 54 (changeable -> ID .)
    GREATER_EQUAL   reduce using rule 54 (changeable -> ID .)
    LESS_EQUAL      reduce using rule 54 (changeable -> ID .)
    R_S_BRACKET     reduce using rule 54 (changeable -> ID .)
    COLON           reduce using rule 54 (changeable -> ID .)
    OR              reduce using rule 54 (changeable -> ID .)
    AND             reduce using rule 54 (changeable -> ID .)
    EYE             reduce using rule 54 (changeable -> ID .)
    ZEROS           reduce using rule 54 (changeable -> ID .)
    ONES            reduce using rule 54 (changeable -> ID .)
    L_R_BRACKET     reduce using rule 54 (changeable -> ID .)
    INTEGER         reduce using rule 54 (changeable -> ID .)
    FLOAT           reduce using rule 54 (changeable -> ID .)
    STRING          reduce using rule 54 (changeable -> ID .)
    RETURN          reduce using rule 54 (changeable -> ID .)
    CONTINUE        reduce using rule 54 (changeable -> ID .)
    BREAK           reduce using rule 54 (changeable -> ID .)
    WHILE           reduce using rule 54 (changeable -> ID .)
    FOR             reduce using rule 54 (changeable -> ID .)
    L_C_BRACKET     reduce using rule 54 (changeable -> ID .)
    ID              reduce using rule 54 (changeable -> ID .)
    PRINT           reduce using rule 54 (changeable -> ID .)
    IF              reduce using rule 54 (changeable -> ID .)


state 30

    (19) instruction_block -> L_C_BRACKET . instructions_opt R_C_BRACKET
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (12) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    R_C_BRACKET     reduce using rule 12 (epsilon -> .)
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    instructions_opt               shift and go to state 62
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 31

    (55) changeable -> matrix .

    ASSIGN          reduce using rule 55 (changeable -> matrix .)
    PLUS_ASSIGN     reduce using rule 55 (changeable -> matrix .)
    MINUS_ASSIGN    reduce using rule 55 (changeable -> matrix .)
    TIMES_ASSIGN    reduce using rule 55 (changeable -> matrix .)
    DIVIDE_ASSIGN   reduce using rule 55 (changeable -> matrix .)
    SEMICOLON       reduce using rule 55 (changeable -> matrix .)
    PLUS            reduce using rule 55 (changeable -> matrix .)
    MINUS           reduce using rule 55 (changeable -> matrix .)
    MAT_PLUS        reduce using rule 55 (changeable -> matrix .)
    MAT_MINUS       reduce using rule 55 (changeable -> matrix .)
    TIMES           reduce using rule 55 (changeable -> matrix .)
    DIVIDE          reduce using rule 55 (changeable -> matrix .)
    MAT_TIMES       reduce using rule 55 (changeable -> matrix .)
    MAT_DIVIDE      reduce using rule 55 (changeable -> matrix .)
    TRANSPOSE       reduce using rule 55 (changeable -> matrix .)
    L_S_BRACKET     reduce using rule 55 (changeable -> matrix .)
    R_R_BRACKET     reduce using rule 55 (changeable -> matrix .)
    COMMA           reduce using rule 55 (changeable -> matrix .)
    EQUAL           reduce using rule 55 (changeable -> matrix .)
    NOT_EQUAL       reduce using rule 55 (changeable -> matrix .)
    GREATER         reduce using rule 55 (changeable -> matrix .)
    LESS            reduce using rule 55 (changeable -> matrix .)
    GREATER_EQUAL   reduce using rule 55 (changeable -> matrix .)
    LESS_EQUAL      reduce using rule 55 (changeable -> matrix .)
    R_S_BRACKET     reduce using rule 55 (changeable -> matrix .)
    COLON           reduce using rule 55 (changeable -> matrix .)
    OR              reduce using rule 55 (changeable -> matrix .)
    AND             reduce using rule 55 (changeable -> matrix .)
    EYE             reduce using rule 55 (changeable -> matrix .)
    ZEROS           reduce using rule 55 (changeable -> matrix .)
    ONES            reduce using rule 55 (changeable -> matrix .)
    L_R_BRACKET     reduce using rule 55 (changeable -> matrix .)
    INTEGER         reduce using rule 55 (changeable -> matrix .)
    FLOAT           reduce using rule 55 (changeable -> matrix .)
    STRING          reduce using rule 55 (changeable -> matrix .)
    RETURN          reduce using rule 55 (changeable -> matrix .)
    CONTINUE        reduce using rule 55 (changeable -> matrix .)
    BREAK           reduce using rule 55 (changeable -> matrix .)
    WHILE           reduce using rule 55 (changeable -> matrix .)
    FOR             reduce using rule 55 (changeable -> matrix .)
    L_C_BRACKET     reduce using rule 55 (changeable -> matrix .)
    ID              reduce using rule 55 (changeable -> matrix .)
    PRINT           reduce using rule 55 (changeable -> matrix .)
    IF              reduce using rule 55 (changeable -> matrix .)


state 32

    (62) matrix -> L_S_BRACKET . row_sequence R_S_BRACKET
    (63) row_sequence -> . row COMMA row_sequence
    (64) row_sequence -> . row
    (65) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 63

    row_sequence                   shift and go to state 64
    row                            shift and go to state 65

state 33

    (61) print_command -> PRINT . sequence
    (66) sequence -> . expression COMMA sequence
    (67) sequence -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sequence                       shift and go to state 66
    expression                     shift and go to state 67
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 34

    (15) if_statement -> IF . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 68


state 35

    (4) instructions -> instructions instruction .

    MINUS           reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    L_R_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    INTEGER         reduce using rule 4 (instructions -> instructions instruction .)
    FLOAT           reduce using rule 4 (instructions -> instructions instruction .)
    STRING          reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    L_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    L_S_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    R_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)


state 36

    (6) instruction -> expression SEMICOLON .

    MINUS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    EYE             reduce using rule 6 (instruction -> expression SEMICOLON .)
    ZEROS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    ONES            reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_R_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    INTEGER         reduce using rule 6 (instruction -> expression SEMICOLON .)
    FLOAT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 6 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 6 (instruction -> expression SEMICOLON .)
    CONTINUE        reduce using rule 6 (instruction -> expression SEMICOLON .)
    BREAK           reduce using rule 6 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 6 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 6 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_S_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    $end            reduce using rule 6 (instruction -> expression SEMICOLON .)
    R_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 6 (instruction -> expression SEMICOLON .)


state 37

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 69
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 38

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 70
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 39

    (32) expression -> expression MAT_PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 71
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 40

    (33) expression -> expression MAT_MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 72
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 41

    (34) expression -> expression TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 73
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 42

    (35) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 74
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 43

    (36) expression -> expression MAT_TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 75
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 44

    (37) expression -> expression MAT_DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 76
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 45

    (39) expression -> expression TRANSPOSE .

    SEMICOLON       reduce using rule 39 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 39 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 39 (expression -> expression TRANSPOSE .)
    MAT_PLUS        reduce using rule 39 (expression -> expression TRANSPOSE .)
    MAT_MINUS       reduce using rule 39 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 39 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 39 (expression -> expression TRANSPOSE .)
    MAT_TIMES       reduce using rule 39 (expression -> expression TRANSPOSE .)
    MAT_DIVIDE      reduce using rule 39 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 39 (expression -> expression TRANSPOSE .)
    L_S_BRACKET     reduce using rule 39 (expression -> expression TRANSPOSE .)
    R_R_BRACKET     reduce using rule 39 (expression -> expression TRANSPOSE .)
    COMMA           reduce using rule 39 (expression -> expression TRANSPOSE .)
    EQUAL           reduce using rule 39 (expression -> expression TRANSPOSE .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression TRANSPOSE .)
    GREATER         reduce using rule 39 (expression -> expression TRANSPOSE .)
    LESS            reduce using rule 39 (expression -> expression TRANSPOSE .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression TRANSPOSE .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression TRANSPOSE .)
    R_S_BRACKET     reduce using rule 39 (expression -> expression TRANSPOSE .)
    COLON           reduce using rule 39 (expression -> expression TRANSPOSE .)
    OR              reduce using rule 39 (expression -> expression TRANSPOSE .)
    AND             reduce using rule 39 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 39 (expression -> expression TRANSPOSE .)
    ZEROS           reduce using rule 39 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 39 (expression -> expression TRANSPOSE .)
    L_R_BRACKET     reduce using rule 39 (expression -> expression TRANSPOSE .)
    INTEGER         reduce using rule 39 (expression -> expression TRANSPOSE .)
    FLOAT           reduce using rule 39 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 39 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 39 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 39 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 39 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 39 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 39 (expression -> expression TRANSPOSE .)
    L_C_BRACKET     reduce using rule 39 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 39 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 39 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 39 (expression -> expression TRANSPOSE .)


state 46

    (56) changeable -> expression L_S_BRACKET . INTEGER COMMA INTEGER R_S_BRACKET

    INTEGER         shift and go to state 77


state 47

    (7) instruction -> command SEMICOLON .

    MINUS           reduce using rule 7 (instruction -> command SEMICOLON .)
    EYE             reduce using rule 7 (instruction -> command SEMICOLON .)
    ZEROS           reduce using rule 7 (instruction -> command SEMICOLON .)
    ONES            reduce using rule 7 (instruction -> command SEMICOLON .)
    L_R_BRACKET     reduce using rule 7 (instruction -> command SEMICOLON .)
    INTEGER         reduce using rule 7 (instruction -> command SEMICOLON .)
    FLOAT           reduce using rule 7 (instruction -> command SEMICOLON .)
    STRING          reduce using rule 7 (instruction -> command SEMICOLON .)
    RETURN          reduce using rule 7 (instruction -> command SEMICOLON .)
    CONTINUE        reduce using rule 7 (instruction -> command SEMICOLON .)
    BREAK           reduce using rule 7 (instruction -> command SEMICOLON .)
    WHILE           reduce using rule 7 (instruction -> command SEMICOLON .)
    FOR             reduce using rule 7 (instruction -> command SEMICOLON .)
    L_C_BRACKET     reduce using rule 7 (instruction -> command SEMICOLON .)
    ID              reduce using rule 7 (instruction -> command SEMICOLON .)
    PRINT           reduce using rule 7 (instruction -> command SEMICOLON .)
    IF              reduce using rule 7 (instruction -> command SEMICOLON .)
    L_S_BRACKET     reduce using rule 7 (instruction -> command SEMICOLON .)
    $end            reduce using rule 7 (instruction -> command SEMICOLON .)
    R_C_BRACKET     reduce using rule 7 (instruction -> command SEMICOLON .)
    ELSE            reduce using rule 7 (instruction -> command SEMICOLON .)


state 48

    (38) expression -> MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 38 (expression -> MINUS expression .)
    PLUS            reduce using rule 38 (expression -> MINUS expression .)
    MINUS           reduce using rule 38 (expression -> MINUS expression .)
    MAT_PLUS        reduce using rule 38 (expression -> MINUS expression .)
    MAT_MINUS       reduce using rule 38 (expression -> MINUS expression .)
    TIMES           reduce using rule 38 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 38 (expression -> MINUS expression .)
    MAT_TIMES       reduce using rule 38 (expression -> MINUS expression .)
    MAT_DIVIDE      reduce using rule 38 (expression -> MINUS expression .)
    R_R_BRACKET     reduce using rule 38 (expression -> MINUS expression .)
    COMMA           reduce using rule 38 (expression -> MINUS expression .)
    EQUAL           reduce using rule 38 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> MINUS expression .)
    GREATER         reduce using rule 38 (expression -> MINUS expression .)
    LESS            reduce using rule 38 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> MINUS expression .)
    R_S_BRACKET     reduce using rule 38 (expression -> MINUS expression .)
    COLON           reduce using rule 38 (expression -> MINUS expression .)
    OR              reduce using rule 38 (expression -> MINUS expression .)
    AND             reduce using rule 38 (expression -> MINUS expression .)
    EYE             reduce using rule 38 (expression -> MINUS expression .)
    ZEROS           reduce using rule 38 (expression -> MINUS expression .)
    ONES            reduce using rule 38 (expression -> MINUS expression .)
    L_R_BRACKET     reduce using rule 38 (expression -> MINUS expression .)
    INTEGER         reduce using rule 38 (expression -> MINUS expression .)
    FLOAT           reduce using rule 38 (expression -> MINUS expression .)
    STRING          reduce using rule 38 (expression -> MINUS expression .)
    RETURN          reduce using rule 38 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 38 (expression -> MINUS expression .)
    BREAK           reduce using rule 38 (expression -> MINUS expression .)
    WHILE           reduce using rule 38 (expression -> MINUS expression .)
    FOR             reduce using rule 38 (expression -> MINUS expression .)
    L_C_BRACKET     reduce using rule 38 (expression -> MINUS expression .)
    ID              reduce using rule 38 (expression -> MINUS expression .)
    PRINT           reduce using rule 38 (expression -> MINUS expression .)
    IF              reduce using rule 38 (expression -> MINUS expression .)
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TRANSPOSE       [ reduce using rule 38 (expression -> MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 38 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]


state 49

    (40) expression -> EYE L_R_BRACKET . expression R_R_BRACKET
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 78
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 50

    (43) expression -> L_R_BRACKET expression . R_R_BRACKET
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 79
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 51

    (41) expression -> ZEROS L_R_BRACKET . expression R_R_BRACKET
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 80
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 52

    (42) expression -> ONES L_R_BRACKET . expression R_R_BRACKET
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 81
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 53

    (49) assignment -> changeable ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 18
    expression                     shift and go to state 82
    assignment                     shift and go to state 17
    matrix                         shift and go to state 31

state 54

    (50) assignment -> changeable PLUS_ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 18
    expression                     shift and go to state 83
    assignment                     shift and go to state 17
    matrix                         shift and go to state 31

state 55

    (51) assignment -> changeable MINUS_ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 18
    expression                     shift and go to state 84
    assignment                     shift and go to state 17
    matrix                         shift and go to state 31

state 56

    (52) assignment -> changeable TIMES_ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 18
    expression                     shift and go to state 85
    assignment                     shift and go to state 17
    matrix                         shift and go to state 31

state 57

    (53) assignment -> changeable DIVIDE_ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 18
    expression                     shift and go to state 86
    assignment                     shift and go to state 17
    matrix                         shift and go to state 31

state 58

    (58) command -> RETURN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 58 (command -> RETURN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 59

    (13) conditional_statement -> if_statement ELSE . body
    (18) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    if_statement                   shift and go to state 26
    body                           shift and go to state 87
    instruction                    shift and go to state 88
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    matrix                         shift and go to state 31

state 60

    (16) while_statement -> WHILE L_R_BRACKET . sentence R_R_BRACKET body
    (21) sentence -> . sentence OR sentence
    (22) sentence -> . sentence AND sentence
    (23) sentence -> . NOT sentence
    (24) sentence -> . expression EQUAL expression
    (25) sentence -> . expression NOT_EQUAL expression
    (26) sentence -> . expression GREATER expression
    (27) sentence -> . expression LESS expression
    (28) sentence -> . expression GREATER_EQUAL expression
    (29) sentence -> . expression LESS_EQUAL expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    NOT             shift and go to state 90
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 89
    expression                     shift and go to state 91
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 61

    (17) for_statement -> FOR ID . ASSIGN range body

    ASSIGN          shift and go to state 92


state 62

    (19) instruction_block -> L_C_BRACKET instructions_opt . R_C_BRACKET

    R_C_BRACKET     shift and go to state 93


state 63

    (65) row -> L_S_BRACKET . sequence R_S_BRACKET
    (66) sequence -> . expression COMMA sequence
    (67) sequence -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sequence                       shift and go to state 94
    expression                     shift and go to state 67
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 64

    (62) matrix -> L_S_BRACKET row_sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 95


state 65

    (63) row_sequence -> row . COMMA row_sequence
    (64) row_sequence -> row .

    COMMA           shift and go to state 96
    R_S_BRACKET     reduce using rule 64 (row_sequence -> row .)


state 66

    (61) print_command -> PRINT sequence .

    SEMICOLON       reduce using rule 61 (print_command -> PRINT sequence .)


state 67

    (66) sequence -> expression . COMMA sequence
    (67) sequence -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    COMMA           shift and go to state 97
    SEMICOLON       reduce using rule 67 (sequence -> expression .)
    R_S_BRACKET     reduce using rule 67 (sequence -> expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 68

    (15) if_statement -> IF L_R_BRACKET . sentence R_R_BRACKET body
    (21) sentence -> . sentence OR sentence
    (22) sentence -> . sentence AND sentence
    (23) sentence -> . NOT sentence
    (24) sentence -> . expression EQUAL expression
    (25) sentence -> . expression NOT_EQUAL expression
    (26) sentence -> . expression GREATER expression
    (27) sentence -> . expression LESS expression
    (28) sentence -> . expression GREATER_EQUAL expression
    (29) sentence -> . expression LESS_EQUAL expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    NOT             shift and go to state 90
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 98
    expression                     shift and go to state 91
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 69

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    MAT_PLUS        reduce using rule 30 (expression -> expression PLUS expression .)
    MAT_MINUS       reduce using rule 30 (expression -> expression PLUS expression .)
    R_R_BRACKET     reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 30 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 30 (expression -> expression PLUS expression .)
    LESS            reduce using rule 30 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 30 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 30 (expression -> expression PLUS expression .)
    R_S_BRACKET     reduce using rule 30 (expression -> expression PLUS expression .)
    COLON           reduce using rule 30 (expression -> expression PLUS expression .)
    OR              reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    EYE             reduce using rule 30 (expression -> expression PLUS expression .)
    ZEROS           reduce using rule 30 (expression -> expression PLUS expression .)
    ONES            reduce using rule 30 (expression -> expression PLUS expression .)
    L_R_BRACKET     reduce using rule 30 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 30 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 30 (expression -> expression PLUS expression .)
    STRING          reduce using rule 30 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 30 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 30 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 30 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 30 (expression -> expression PLUS expression .)
    FOR             reduce using rule 30 (expression -> expression PLUS expression .)
    L_C_BRACKET     reduce using rule 30 (expression -> expression PLUS expression .)
    ID              reduce using rule 30 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 30 (expression -> expression PLUS expression .)
    IF              reduce using rule 30 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]


state 70

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    MAT_PLUS        reduce using rule 31 (expression -> expression MINUS expression .)
    MAT_MINUS       reduce using rule 31 (expression -> expression MINUS expression .)
    R_R_BRACKET     reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 31 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 31 (expression -> expression MINUS expression .)
    LESS            reduce using rule 31 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression MINUS expression .)
    R_S_BRACKET     reduce using rule 31 (expression -> expression MINUS expression .)
    COLON           reduce using rule 31 (expression -> expression MINUS expression .)
    OR              reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    EYE             reduce using rule 31 (expression -> expression MINUS expression .)
    ZEROS           reduce using rule 31 (expression -> expression MINUS expression .)
    ONES            reduce using rule 31 (expression -> expression MINUS expression .)
    L_R_BRACKET     reduce using rule 31 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 31 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 31 (expression -> expression MINUS expression .)
    STRING          reduce using rule 31 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 31 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 31 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 31 (expression -> expression MINUS expression .)
    FOR             reduce using rule 31 (expression -> expression MINUS expression .)
    L_C_BRACKET     reduce using rule 31 (expression -> expression MINUS expression .)
    ID              reduce using rule 31 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 31 (expression -> expression MINUS expression .)
    IF              reduce using rule 31 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]


state 71

    (32) expression -> expression MAT_PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    PLUS            reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    MAT_PLUS        reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    MAT_MINUS       reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    R_R_BRACKET     reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    COMMA           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    EQUAL           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    GREATER         reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    LESS            reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    R_S_BRACKET     reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    COLON           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    OR              reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    AND             reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    EYE             reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    ZEROS           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    ONES            reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    L_R_BRACKET     reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    INTEGER         reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    FLOAT           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    STRING          reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    RETURN          reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    CONTINUE        reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    BREAK           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    WHILE           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    FOR             reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    L_C_BRACKET     reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    ID              reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    PRINT           reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    IF              reduce using rule 32 (expression -> expression MAT_PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TIMES           [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 32 (expression -> expression MAT_PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]


state 72

    (33) expression -> expression MAT_MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    PLUS            reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    MINUS           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    MAT_PLUS        reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    MAT_MINUS       reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    R_R_BRACKET     reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    COMMA           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    EQUAL           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    GREATER         reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    LESS            reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    R_S_BRACKET     reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    COLON           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    OR              reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    AND             reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    EYE             reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    ZEROS           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    ONES            reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    L_R_BRACKET     reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    INTEGER         reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    FLOAT           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    STRING          reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    RETURN          reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    CONTINUE        reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    BREAK           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    WHILE           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    FOR             reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    L_C_BRACKET     reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    ID              reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    PRINT           reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    IF              reduce using rule 33 (expression -> expression MAT_MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TIMES           [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! L_S_BRACKET     [ reduce using rule 33 (expression -> expression MAT_MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]


state 73

    (34) expression -> expression TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 34 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 34 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 34 (expression -> expression TIMES expression .)
    MAT_PLUS        reduce using rule 34 (expression -> expression TIMES expression .)
    MAT_MINUS       reduce using rule 34 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 34 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 34 (expression -> expression TIMES expression .)
    MAT_TIMES       reduce using rule 34 (expression -> expression TIMES expression .)
    MAT_DIVIDE      reduce using rule 34 (expression -> expression TIMES expression .)
    R_R_BRACKET     reduce using rule 34 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 34 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 34 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 34 (expression -> expression TIMES expression .)
    LESS            reduce using rule 34 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression TIMES expression .)
    R_S_BRACKET     reduce using rule 34 (expression -> expression TIMES expression .)
    COLON           reduce using rule 34 (expression -> expression TIMES expression .)
    OR              reduce using rule 34 (expression -> expression TIMES expression .)
    AND             reduce using rule 34 (expression -> expression TIMES expression .)
    EYE             reduce using rule 34 (expression -> expression TIMES expression .)
    ZEROS           reduce using rule 34 (expression -> expression TIMES expression .)
    ONES            reduce using rule 34 (expression -> expression TIMES expression .)
    L_R_BRACKET     reduce using rule 34 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 34 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 34 (expression -> expression TIMES expression .)
    STRING          reduce using rule 34 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 34 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 34 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 34 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 34 (expression -> expression TIMES expression .)
    FOR             reduce using rule 34 (expression -> expression TIMES expression .)
    L_C_BRACKET     reduce using rule 34 (expression -> expression TIMES expression .)
    ID              reduce using rule 34 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 34 (expression -> expression TIMES expression .)
    IF              reduce using rule 34 (expression -> expression TIMES expression .)
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TRANSPOSE       [ reduce using rule 34 (expression -> expression TIMES expression .) ]
  ! L_S_BRACKET     [ reduce using rule 34 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]


state 74

    (35) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 35 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    MAT_PLUS        reduce using rule 35 (expression -> expression DIVIDE expression .)
    MAT_MINUS       reduce using rule 35 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    MAT_TIMES       reduce using rule 35 (expression -> expression DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 35 (expression -> expression DIVIDE expression .)
    R_R_BRACKET     reduce using rule 35 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 35 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 35 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 35 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression DIVIDE expression .)
    R_S_BRACKET     reduce using rule 35 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 35 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 35 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 35 (expression -> expression DIVIDE expression .)
    EYE             reduce using rule 35 (expression -> expression DIVIDE expression .)
    ZEROS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    ONES            reduce using rule 35 (expression -> expression DIVIDE expression .)
    L_R_BRACKET     reduce using rule 35 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 35 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 35 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 35 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 35 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 35 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 35 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 35 (expression -> expression DIVIDE expression .)
    L_C_BRACKET     reduce using rule 35 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 35 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 35 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 35 (expression -> expression DIVIDE expression .)
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TRANSPOSE       [ reduce using rule 35 (expression -> expression DIVIDE expression .) ]
  ! L_S_BRACKET     [ reduce using rule 35 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]


state 75

    (36) expression -> expression MAT_TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    PLUS            reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    MINUS           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    MAT_PLUS        reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    MAT_MINUS       reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    TIMES           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    DIVIDE          reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    MAT_TIMES       reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    MAT_DIVIDE      reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    R_R_BRACKET     reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    COMMA           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    EQUAL           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    GREATER         reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    LESS            reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    R_S_BRACKET     reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    COLON           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    OR              reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    AND             reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    EYE             reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    ZEROS           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    ONES            reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    L_R_BRACKET     reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    INTEGER         reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    FLOAT           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    STRING          reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    RETURN          reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    CONTINUE        reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    BREAK           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    WHILE           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    FOR             reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    L_C_BRACKET     reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    ID              reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    PRINT           reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    IF              reduce using rule 36 (expression -> expression MAT_TIMES expression .)
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TRANSPOSE       [ reduce using rule 36 (expression -> expression MAT_TIMES expression .) ]
  ! L_S_BRACKET     [ reduce using rule 36 (expression -> expression MAT_TIMES expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]


state 76

    (37) expression -> expression MAT_DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    PLUS            reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    MINUS           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    MAT_PLUS        reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    MAT_MINUS       reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    TIMES           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    DIVIDE          reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    MAT_TIMES       reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    R_R_BRACKET     reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    COMMA           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    EQUAL           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    GREATER         reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    LESS            reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    R_S_BRACKET     reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    COLON           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    OR              reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    AND             reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    EYE             reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    ZEROS           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    ONES            reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    L_R_BRACKET     reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    INTEGER         reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    FLOAT           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    STRING          reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    RETURN          reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    CONTINUE        reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    BREAK           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    WHILE           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    FOR             reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    L_C_BRACKET     reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    ID              reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    PRINT           reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    IF              reduce using rule 37 (expression -> expression MAT_DIVIDE expression .)
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! TRANSPOSE       [ reduce using rule 37 (expression -> expression MAT_DIVIDE expression .) ]
  ! L_S_BRACKET     [ reduce using rule 37 (expression -> expression MAT_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]


state 77

    (56) changeable -> expression L_S_BRACKET INTEGER . COMMA INTEGER R_S_BRACKET

    COMMA           shift and go to state 99


state 78

    (40) expression -> EYE L_R_BRACKET expression . R_R_BRACKET
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 100
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 79

    (43) expression -> L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    OR              reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    AND             reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 43 (expression -> L_R_BRACKET expression R_R_BRACKET .)


state 80

    (41) expression -> ZEROS L_R_BRACKET expression . R_R_BRACKET
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 101
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 81

    (42) expression -> ONES L_R_BRACKET expression . R_R_BRACKET
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 102
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 82

    (49) assignment -> changeable ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    R_R_BRACKET     reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    COMMA           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    EQUAL           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    NOT_EQUAL       reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    GREATER         reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    LESS            reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    LESS_EQUAL      reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    R_S_BRACKET     reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    COLON           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    OR              reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    AND             reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    EYE             reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    ZEROS           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    ONES            reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    L_R_BRACKET     reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    INTEGER         reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    FLOAT           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    STRING          reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    RETURN          reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    CONTINUE        reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    BREAK           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    WHILE           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    FOR             reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    L_C_BRACKET     reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    ID              reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    PRINT           reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    IF              reduce using rule 49 (assignment -> changeable ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! PLUS            [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! MAT_PLUS        [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! MAT_MINUS       [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! MAT_TIMES       [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! TRANSPOSE       [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]
  ! L_S_BRACKET     [ reduce using rule 49 (assignment -> changeable ASSIGN expression .) ]


state 83

    (50) assignment -> changeable PLUS_ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    R_R_BRACKET     reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    COMMA           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    EQUAL           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    GREATER         reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    LESS            reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    R_S_BRACKET     reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    COLON           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    OR              reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    AND             reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    EYE             reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    ZEROS           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    ONES            reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    L_R_BRACKET     reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    INTEGER         reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    FLOAT           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    STRING          reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    RETURN          reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    CONTINUE        reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    BREAK           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    WHILE           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    FOR             reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    L_C_BRACKET     reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    ID              reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    PRINT           reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    IF              reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! PLUS            [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! MAT_PLUS        [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! MAT_MINUS       [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! MAT_TIMES       [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! TRANSPOSE       [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]
  ! L_S_BRACKET     [ reduce using rule 50 (assignment -> changeable PLUS_ASSIGN expression .) ]


state 84

    (51) assignment -> changeable MINUS_ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    R_R_BRACKET     reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    COMMA           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    EQUAL           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    GREATER         reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    LESS            reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    R_S_BRACKET     reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    COLON           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    OR              reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    AND             reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    EYE             reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    ZEROS           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    ONES            reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    L_R_BRACKET     reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    INTEGER         reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    FLOAT           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    STRING          reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    RETURN          reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    CONTINUE        reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    BREAK           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    WHILE           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    FOR             reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    L_C_BRACKET     reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    ID              reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    PRINT           reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    IF              reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! PLUS            [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! MAT_PLUS        [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! MAT_MINUS       [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! MAT_TIMES       [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! TRANSPOSE       [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]
  ! L_S_BRACKET     [ reduce using rule 51 (assignment -> changeable MINUS_ASSIGN expression .) ]


state 85

    (52) assignment -> changeable TIMES_ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    R_R_BRACKET     reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    COMMA           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    EQUAL           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    GREATER         reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    LESS            reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    R_S_BRACKET     reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    COLON           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    OR              reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    AND             reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    EYE             reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    ZEROS           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    ONES            reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    L_R_BRACKET     reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    INTEGER         reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    FLOAT           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    STRING          reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    RETURN          reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    CONTINUE        reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    BREAK           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    WHILE           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    FOR             reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    L_C_BRACKET     reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    ID              reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    PRINT           reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    IF              reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! PLUS            [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! MAT_PLUS        [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! MAT_MINUS       [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! MAT_TIMES       [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! TRANSPOSE       [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]
  ! L_S_BRACKET     [ reduce using rule 52 (assignment -> changeable TIMES_ASSIGN expression .) ]


state 86

    (53) assignment -> changeable DIVIDE_ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    R_R_BRACKET     reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    COMMA           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    EQUAL           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    GREATER         reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    LESS            reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    R_S_BRACKET     reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    COLON           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    OR              reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    AND             reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    EYE             reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    ZEROS           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    ONES            reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    L_R_BRACKET     reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    INTEGER         reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    FLOAT           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    STRING          reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    RETURN          reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    CONTINUE        reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    BREAK           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    WHILE           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    FOR             reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    L_C_BRACKET     reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    ID              reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    PRINT           reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    IF              reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! PLUS            [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! MAT_PLUS        [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! MAT_MINUS       [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! MAT_TIMES       [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! TRANSPOSE       [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]
  ! L_S_BRACKET     [ reduce using rule 53 (assignment -> changeable DIVIDE_ASSIGN expression .) ]


state 87

    (13) conditional_statement -> if_statement ELSE body .

    MINUS           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    EYE             reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    ZEROS           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    ONES            reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    L_R_BRACKET     reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    INTEGER         reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    FLOAT           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    STRING          reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    RETURN          reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    CONTINUE        reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    BREAK           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    WHILE           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    FOR             reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    L_C_BRACKET     reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    ID              reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    PRINT           reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    IF              reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    L_S_BRACKET     reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    $end            reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    R_C_BRACKET     reduce using rule 13 (conditional_statement -> if_statement ELSE body .)
    ELSE            reduce using rule 13 (conditional_statement -> if_statement ELSE body .)


state 88

    (18) body -> instruction .

    MINUS           reduce using rule 18 (body -> instruction .)
    EYE             reduce using rule 18 (body -> instruction .)
    ZEROS           reduce using rule 18 (body -> instruction .)
    ONES            reduce using rule 18 (body -> instruction .)
    L_R_BRACKET     reduce using rule 18 (body -> instruction .)
    INTEGER         reduce using rule 18 (body -> instruction .)
    FLOAT           reduce using rule 18 (body -> instruction .)
    STRING          reduce using rule 18 (body -> instruction .)
    RETURN          reduce using rule 18 (body -> instruction .)
    CONTINUE        reduce using rule 18 (body -> instruction .)
    BREAK           reduce using rule 18 (body -> instruction .)
    WHILE           reduce using rule 18 (body -> instruction .)
    FOR             reduce using rule 18 (body -> instruction .)
    L_C_BRACKET     reduce using rule 18 (body -> instruction .)
    ID              reduce using rule 18 (body -> instruction .)
    PRINT           reduce using rule 18 (body -> instruction .)
    IF              reduce using rule 18 (body -> instruction .)
    L_S_BRACKET     reduce using rule 18 (body -> instruction .)
    $end            reduce using rule 18 (body -> instruction .)
    R_C_BRACKET     reduce using rule 18 (body -> instruction .)
    ELSE            reduce using rule 18 (body -> instruction .)


state 89

    (16) while_statement -> WHILE L_R_BRACKET sentence . R_R_BRACKET body
    (21) sentence -> sentence . OR sentence
    (22) sentence -> sentence . AND sentence

    R_R_BRACKET     shift and go to state 103
    OR              shift and go to state 104
    AND             shift and go to state 105


state 90

    (23) sentence -> NOT . sentence
    (21) sentence -> . sentence OR sentence
    (22) sentence -> . sentence AND sentence
    (23) sentence -> . NOT sentence
    (24) sentence -> . expression EQUAL expression
    (25) sentence -> . expression NOT_EQUAL expression
    (26) sentence -> . expression GREATER expression
    (27) sentence -> . expression LESS expression
    (28) sentence -> . expression GREATER_EQUAL expression
    (29) sentence -> . expression LESS_EQUAL expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    NOT             shift and go to state 90
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 106
    expression                     shift and go to state 91
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 91

    (24) sentence -> expression . EQUAL expression
    (25) sentence -> expression . NOT_EQUAL expression
    (26) sentence -> expression . GREATER expression
    (27) sentence -> expression . LESS expression
    (28) sentence -> expression . GREATER_EQUAL expression
    (29) sentence -> expression . LESS_EQUAL expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    EQUAL           shift and go to state 107
    NOT_EQUAL       shift and go to state 108
    GREATER         shift and go to state 109
    LESS            shift and go to state 110
    GREATER_EQUAL   shift and go to state 111
    LESS_EQUAL      shift and go to state 112
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 92

    (17) for_statement -> FOR ID ASSIGN . range body
    (20) range -> . expression COLON expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    range                          shift and go to state 113
    expression                     shift and go to state 114
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 93

    (19) instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .

    MINUS           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    EYE             reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ZEROS           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ONES            reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_R_BRACKET     reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    INTEGER         reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FLOAT           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    STRING          reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    RETURN          reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    CONTINUE        reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    BREAK           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    WHILE           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FOR             reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_C_BRACKET     reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ID              reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    PRINT           reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    IF              reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_S_BRACKET     reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    $end            reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    R_C_BRACKET     reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ELSE            reduce using rule 19 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)


state 94

    (65) row -> L_S_BRACKET sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 115


state 95

    (62) matrix -> L_S_BRACKET row_sequence R_S_BRACKET .

    ASSIGN          reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PLUS_ASSIGN     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MINUS_ASSIGN    reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TIMES_ASSIGN    reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    SEMICOLON       reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PLUS            reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MINUS           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_PLUS        reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_MINUS       reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TIMES           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    DIVIDE          reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_TIMES       reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TRANSPOSE       reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COMMA           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EQUAL           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER         reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS            reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COLON           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    OR              reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    AND             reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EYE             reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ZEROS           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ONES            reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    INTEGER         reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FLOAT           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    STRING          reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    RETURN          reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    CONTINUE        reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    BREAK           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    WHILE           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FOR             reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ID              reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PRINT           reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    IF              reduce using rule 62 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)


state 96

    (63) row_sequence -> row COMMA . row_sequence
    (63) row_sequence -> . row COMMA row_sequence
    (64) row_sequence -> . row
    (65) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 63

    row                            shift and go to state 65
    row_sequence                   shift and go to state 116

state 97

    (66) sequence -> expression COMMA . sequence
    (66) sequence -> . expression COMMA sequence
    (67) sequence -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 67
    sequence                       shift and go to state 117
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 98

    (15) if_statement -> IF L_R_BRACKET sentence . R_R_BRACKET body
    (21) sentence -> sentence . OR sentence
    (22) sentence -> sentence . AND sentence

    R_R_BRACKET     shift and go to state 118
    OR              shift and go to state 104
    AND             shift and go to state 105


state 99

    (56) changeable -> expression L_S_BRACKET INTEGER COMMA . INTEGER R_S_BRACKET

    INTEGER         shift and go to state 119


state 100

    (40) expression -> EYE L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    OR              reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    AND             reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 40 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)


state 101

    (41) expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    OR              reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    AND             reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 41 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)


state 102

    (42) expression -> ONES L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    OR              reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    AND             reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 42 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)


state 103

    (16) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET . body
    (18) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    body                           shift and go to state 120
    instruction                    shift and go to state 88
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 104

    (21) sentence -> sentence OR . sentence
    (21) sentence -> . sentence OR sentence
    (22) sentence -> . sentence AND sentence
    (23) sentence -> . NOT sentence
    (24) sentence -> . expression EQUAL expression
    (25) sentence -> . expression NOT_EQUAL expression
    (26) sentence -> . expression GREATER expression
    (27) sentence -> . expression LESS expression
    (28) sentence -> . expression GREATER_EQUAL expression
    (29) sentence -> . expression LESS_EQUAL expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    NOT             shift and go to state 90
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 121
    expression                     shift and go to state 91
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 105

    (22) sentence -> sentence AND . sentence
    (21) sentence -> . sentence OR sentence
    (22) sentence -> . sentence AND sentence
    (23) sentence -> . NOT sentence
    (24) sentence -> . expression EQUAL expression
    (25) sentence -> . expression NOT_EQUAL expression
    (26) sentence -> . expression GREATER expression
    (27) sentence -> . expression LESS expression
    (28) sentence -> . expression GREATER_EQUAL expression
    (29) sentence -> . expression LESS_EQUAL expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    NOT             shift and go to state 90
    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 122
    expression                     shift and go to state 91
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 106

    (23) sentence -> NOT sentence .
    (21) sentence -> sentence . OR sentence
    (22) sentence -> sentence . AND sentence

    R_R_BRACKET     reduce using rule 23 (sentence -> NOT sentence .)
    OR              reduce using rule 23 (sentence -> NOT sentence .)
    AND             reduce using rule 23 (sentence -> NOT sentence .)

  ! OR              [ shift and go to state 104 ]
  ! AND             [ shift and go to state 105 ]


state 107

    (24) sentence -> expression EQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 123
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 108

    (25) sentence -> expression NOT_EQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 124
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 109

    (26) sentence -> expression GREATER . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 125
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 110

    (27) sentence -> expression LESS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 126
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 111

    (28) sentence -> expression GREATER_EQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 127
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 112

    (29) sentence -> expression LESS_EQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 128
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 113

    (17) for_statement -> FOR ID ASSIGN range . body
    (18) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    body                           shift and go to state 129
    instruction                    shift and go to state 88
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 114

    (20) range -> expression . COLON expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    COLON           shift and go to state 130
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 115

    (65) row -> L_S_BRACKET sequence R_S_BRACKET .

    COMMA           reduce using rule 65 (row -> L_S_BRACKET sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 65 (row -> L_S_BRACKET sequence R_S_BRACKET .)


state 116

    (63) row_sequence -> row COMMA row_sequence .

    R_S_BRACKET     reduce using rule 63 (row_sequence -> row COMMA row_sequence .)


state 117

    (66) sequence -> expression COMMA sequence .

    SEMICOLON       reduce using rule 66 (sequence -> expression COMMA sequence .)
    R_S_BRACKET     reduce using rule 66 (sequence -> expression COMMA sequence .)


state 118

    (15) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET . body
    (18) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . command SEMICOLON
    (8) instruction -> . conditional_statement
    (9) instruction -> . while_statement
    (10) instruction -> . for_statement
    (11) instruction -> . instruction_block
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (57) command -> . print_command
    (58) command -> . RETURN expression
    (59) command -> . CONTINUE
    (60) command -> . BREAK
    (13) conditional_statement -> . if_statement ELSE body
    (14) conditional_statement -> . if_statement
    (16) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (17) for_statement -> . FOR ID ASSIGN range body
    (19) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (61) print_command -> . PRINT sequence
    (15) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    RETURN          shift and go to state 23
    CONTINUE        shift and go to state 24
    BREAK           shift and go to state 25
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    L_C_BRACKET     shift and go to state 30
    ID              shift and go to state 29
    PRINT           shift and go to state 33
    IF              shift and go to state 34
    L_S_BRACKET     shift and go to state 32

    body                           shift and go to state 131
    instruction                    shift and go to state 88
    expression                     shift and go to state 6
    command                        shift and go to state 7
    conditional_statement          shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    instruction_block              shift and go to state 11
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    print_command                  shift and go to state 22
    if_statement                   shift and go to state 26
    matrix                         shift and go to state 31

state 119

    (56) changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER . R_S_BRACKET

    R_S_BRACKET     shift and go to state 132


state 120

    (16) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .

    MINUS           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ELSE            reduce using rule 16 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)


state 121

    (21) sentence -> sentence OR sentence .
    (21) sentence -> sentence . OR sentence
    (22) sentence -> sentence . AND sentence

    R_R_BRACKET     reduce using rule 21 (sentence -> sentence OR sentence .)
    OR              reduce using rule 21 (sentence -> sentence OR sentence .)
    AND             shift and go to state 105

  ! AND             [ reduce using rule 21 (sentence -> sentence OR sentence .) ]
  ! OR              [ shift and go to state 104 ]


state 122

    (22) sentence -> sentence AND sentence .
    (21) sentence -> sentence . OR sentence
    (22) sentence -> sentence . AND sentence

    R_R_BRACKET     reduce using rule 22 (sentence -> sentence AND sentence .)
    OR              reduce using rule 22 (sentence -> sentence AND sentence .)
    AND             reduce using rule 22 (sentence -> sentence AND sentence .)

  ! OR              [ shift and go to state 104 ]
  ! AND             [ shift and go to state 105 ]


state 123

    (24) sentence -> expression EQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 24 (sentence -> expression EQUAL expression .)
    OR              reduce using rule 24 (sentence -> expression EQUAL expression .)
    AND             reduce using rule 24 (sentence -> expression EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 124

    (25) sentence -> expression NOT_EQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 25 (sentence -> expression NOT_EQUAL expression .)
    OR              reduce using rule 25 (sentence -> expression NOT_EQUAL expression .)
    AND             reduce using rule 25 (sentence -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 125

    (26) sentence -> expression GREATER expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 26 (sentence -> expression GREATER expression .)
    OR              reduce using rule 26 (sentence -> expression GREATER expression .)
    AND             reduce using rule 26 (sentence -> expression GREATER expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 126

    (27) sentence -> expression LESS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 27 (sentence -> expression LESS expression .)
    OR              reduce using rule 27 (sentence -> expression LESS expression .)
    AND             reduce using rule 27 (sentence -> expression LESS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 127

    (28) sentence -> expression GREATER_EQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 28 (sentence -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 28 (sentence -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 28 (sentence -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 128

    (29) sentence -> expression LESS_EQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 29 (sentence -> expression LESS_EQUAL expression .)
    OR              reduce using rule 29 (sentence -> expression LESS_EQUAL expression .)
    AND             reduce using rule 29 (sentence -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 129

    (17) for_statement -> FOR ID ASSIGN range body .

    MINUS           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    EYE             reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    ZEROS           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    ONES            reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    L_R_BRACKET     reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    INTEGER         reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    FLOAT           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    STRING          reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    RETURN          reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    CONTINUE        reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    BREAK           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    WHILE           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    FOR             reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    L_C_BRACKET     reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    ID              reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    PRINT           reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    IF              reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    L_S_BRACKET     reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    $end            reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    R_C_BRACKET     reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)
    ELSE            reduce using rule 17 (for_statement -> FOR ID ASSIGN range body .)


state 130

    (20) range -> expression COLON . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MAT_PLUS expression
    (33) expression -> . expression MAT_MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression MAT_TIMES expression
    (37) expression -> . expression MAT_DIVIDE expression
    (38) expression -> . MINUS expression
    (39) expression -> . expression TRANSPOSE
    (40) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (43) expression -> . L_R_BRACKET expression R_R_BRACKET
    (44) expression -> . assignment
    (45) expression -> . changeable
    (46) expression -> . INTEGER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) assignment -> . changeable ASSIGN expression
    (50) assignment -> . changeable PLUS_ASSIGN expression
    (51) assignment -> . changeable MINUS_ASSIGN expression
    (52) assignment -> . changeable TIMES_ASSIGN expression
    (53) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) changeable -> . ID
    (55) changeable -> . matrix
    (56) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (62) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 12
    EYE             shift and go to state 13
    ZEROS           shift and go to state 15
    ONES            shift and go to state 16
    L_R_BRACKET     shift and go to state 14
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 21
    ID              shift and go to state 29
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 133
    assignment                     shift and go to state 17
    changeable                     shift and go to state 18
    matrix                         shift and go to state 31

state 131

    (15) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .

    ELSE            reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    MINUS           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 15 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)


state 132

    (56) changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .

    ASSIGN          reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PLUS_ASSIGN     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MINUS_ASSIGN    reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TIMES_ASSIGN    reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    SEMICOLON       reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PLUS            reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MINUS           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_PLUS        reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_MINUS       reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TIMES           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    DIVIDE          reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_TIMES       reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TRANSPOSE       reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    COMMA           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    EQUAL           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    GREATER         reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    LESS            reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    COLON           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    OR              reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    AND             reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    EYE             reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ZEROS           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ONES            reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    INTEGER         reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    FLOAT           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    STRING          reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    RETURN          reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    CONTINUE        reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    BREAK           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    WHILE           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    FOR             reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ID              reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PRINT           reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    IF              reduce using rule 56 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)


state 133

    (20) range -> expression COLON expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MAT_PLUS expression
    (33) expression -> expression . MAT_MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . MAT_TIMES expression
    (37) expression -> expression . MAT_DIVIDE expression
    (39) expression -> expression . TRANSPOSE
    (56) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    EYE             reduce using rule 20 (range -> expression COLON expression .)
    ZEROS           reduce using rule 20 (range -> expression COLON expression .)
    ONES            reduce using rule 20 (range -> expression COLON expression .)
    L_R_BRACKET     reduce using rule 20 (range -> expression COLON expression .)
    INTEGER         reduce using rule 20 (range -> expression COLON expression .)
    FLOAT           reduce using rule 20 (range -> expression COLON expression .)
    STRING          reduce using rule 20 (range -> expression COLON expression .)
    RETURN          reduce using rule 20 (range -> expression COLON expression .)
    CONTINUE        reduce using rule 20 (range -> expression COLON expression .)
    BREAK           reduce using rule 20 (range -> expression COLON expression .)
    WHILE           reduce using rule 20 (range -> expression COLON expression .)
    FOR             reduce using rule 20 (range -> expression COLON expression .)
    L_C_BRACKET     reduce using rule 20 (range -> expression COLON expression .)
    ID              reduce using rule 20 (range -> expression COLON expression .)
    PRINT           reduce using rule 20 (range -> expression COLON expression .)
    IF              reduce using rule 20 (range -> expression COLON expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46

  ! MINUS           [ reduce using rule 20 (range -> expression COLON expression .) ]
  ! L_S_BRACKET     [ reduce using rule 20 (range -> expression COLON expression .) ]

