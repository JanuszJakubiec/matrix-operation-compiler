
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIFXnonassocELSErightCOLONleftPLUSMINUSMAT_PLUSMAT_MINUSleftTIMESDIVIDEMAT_TIMESMAT_DIVIDErightUNARY_MINUSnonassocMAT_ELEMENTleftTRANSPOSEASSIGN BREAK COLON COMMA CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER GREATER_EQUAL ID IF INTEGER LESS LESS_EQUAL L_C_BRACKET L_R_BRACKET L_S_BRACKET MAT_DIVIDE MAT_MINUS MAT_PLUS MAT_TIMES MINUS MINUS_ASSIGN NOT_EQUAL ONES PLUS PLUS_ASSIGN PRINT RETURN R_C_BRACKET R_R_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TIMES_ASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_opt instructions_opt : instructions\n                        | epsilon instructions : instructions instruction\n                    | instruction instruction : expression SEMICOLON\n                   | assignment SEMICOLON\n                   | command SEMICOLON\n                   | conditional_statement\n                   | while_statement\n                   | for_statement\n                   | instruction_block epsilon : conditional_statement : if_statement ELSE body\n                             | if_statement %prec IFX if_statement : IF L_R_BRACKET sentence R_R_BRACKET body while_statement : WHILE L_R_BRACKET sentence R_R_BRACKET body for_statement : FOR ID ASSIGN range body body : instruction instruction_block : L_C_BRACKET instructions_opt R_C_BRACKET range : expression COLON expression sentence : expression EQUAL expression\n                | expression NOT_EQUAL expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression GREATER_EQUAL expression\n                | expression LESS_EQUAL expression expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MAT_PLUS expression\n                  | expression MAT_MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MAT_TIMES expression\n                  | expression MAT_DIVIDE expression\n                  | MINUS expression %prec UNARY_MINUS\n                  | expression TRANSPOSE\n                  | EYE L_R_BRACKET expression R_R_BRACKET\n                  | ZEROS L_R_BRACKET expression R_R_BRACKET\n                  | ONES L_R_BRACKET expression R_R_BRACKET\n                  | L_R_BRACKET expression R_R_BRACKET\n                  | changeable\n                  | matrix\n                  | integer\n                  | float\n                  | string assignment : changeable ASSIGN expression\n                  | changeable PLUS_ASSIGN expression\n                  | changeable MINUS_ASSIGN expression\n                  | changeable TIMES_ASSIGN expression\n                  | changeable DIVIDE_ASSIGN expression changeable : id\n                  | expression L_S_BRACKET integer COMMA integer R_S_BRACKET %prec MAT_ELEMENT integer : INTEGERfloat : FLOATstring : STRINGid : IDcommand : print_command\n               | RETURN expression\n               | CONTINUE\n               | BREAK print_command : PRINT sequence matrix : L_S_BRACKET row_sequence R_S_BRACKET row_sequence : row COMMA row_sequence\n                    | row row : L_S_BRACKET sequence R_S_BRACKET sequence : expression COMMA sequence\n                | expression '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,9,10,11,12,27,39,40,51,52,93,94,98,122,129,131,],[-13,0,-1,-2,-3,-5,-9,-10,-11,-12,-15,-4,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'MINUS':([0,3,5,6,9,10,11,12,13,15,18,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,116,120,122,123,124,125,126,127,128,129,130,131,132,133,],[13,13,-5,42,-9,-10,-11,-12,13,13,-42,-43,-44,-45,-46,13,-15,-57,13,-52,-54,-55,-56,13,-4,-6,13,13,13,13,13,13,13,13,-37,-7,-8,-36,-42,13,42,13,13,13,13,13,13,13,42,13,13,13,42,13,-28,-29,-30,-31,-32,-33,-34,-35,42,-41,42,42,42,42,42,42,42,-14,-19,42,13,-20,-63,13,-38,-39,-40,13,13,13,13,13,13,13,13,42,13,-17,42,42,42,42,42,42,-18,13,-16,-53,42,]),'EYE':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[14,14,-5,-9,-10,-11,-12,14,14,-43,-44,-45,-46,14,-15,-57,14,-52,-54,-55,-56,14,-4,-6,14,14,14,14,14,14,14,14,-37,-7,-8,-36,-42,14,14,14,14,14,14,14,14,14,14,14,14,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,14,-20,-63,14,-38,-39,-40,14,14,14,14,14,14,14,14,14,-17,-18,14,-16,-53,-21,]),'ZEROS':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[16,16,-5,-9,-10,-11,-12,16,16,-43,-44,-45,-46,16,-15,-57,16,-52,-54,-55,-56,16,-4,-6,16,16,16,16,16,16,16,16,-37,-7,-8,-36,-42,16,16,16,16,16,16,16,16,16,16,16,16,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,16,-20,-63,16,-38,-39,-40,16,16,16,16,16,16,16,16,16,-17,-18,16,-16,-53,-21,]),'ONES':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[17,17,-5,-9,-10,-11,-12,17,17,-43,-44,-45,-46,17,-15,-57,17,-52,-54,-55,-56,17,-4,-6,17,17,17,17,17,17,17,17,-37,-7,-8,-36,-42,17,17,17,17,17,17,17,17,17,17,17,17,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,17,-20,-63,17,-38,-39,-40,17,17,17,17,17,17,17,17,17,-17,-18,17,-16,-53,-21,]),'L_R_BRACKET':([0,3,5,9,10,11,12,13,14,15,16,17,19,20,21,22,24,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[15,15,-5,-9,-10,-11,-12,15,55,15,57,58,-43,-44,-45,-46,15,-15,66,-57,15,-52,-54,-55,-56,15,74,-4,-6,15,15,15,15,15,15,15,15,-37,-7,-8,-36,-42,15,15,15,15,15,15,15,15,15,15,15,15,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,15,-20,-63,15,-38,-39,-40,15,15,15,15,15,15,15,15,15,-17,-18,15,-16,-53,-21,]),'RETURN':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[24,24,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,24,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,24,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,24,24,24,-17,-18,-16,-53,-21,]),'CONTINUE':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[25,25,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,25,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,25,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,25,25,25,-17,-18,-16,-53,-21,]),'BREAK':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[26,26,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,26,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,26,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,26,26,26,-17,-18,-16,-53,-21,]),'WHILE':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[28,28,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,28,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,28,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,28,28,28,-17,-18,-16,-53,-21,]),'FOR':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[29,29,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,29,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,29,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,29,29,29,-17,-18,-16,-53,-21,]),'L_C_BRACKET':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[31,31,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,31,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,31,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,31,31,31,-17,-18,-16,-53,-21,]),'L_S_BRACKET':([0,3,5,6,9,10,11,12,13,15,18,19,20,21,22,24,27,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,120,122,123,124,125,126,127,128,129,130,131,132,133,],[33,33,-5,50,-9,-10,-11,-12,33,33,-42,-43,-44,-45,-46,33,-15,-57,33,-52,69,-54,-55,-56,33,-4,-6,33,33,33,33,33,33,33,33,-37,-7,-8,-36,-42,33,50,33,33,33,33,33,33,33,50,33,33,33,50,33,-28,-29,-30,-31,-32,-33,-34,-35,50,-41,50,50,50,50,50,50,50,-14,-19,50,33,-20,-63,69,33,-38,-39,-40,33,33,33,33,33,33,33,33,50,33,-17,50,50,50,50,50,50,-18,33,-16,-53,-21,]),'INTEGER':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,104,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[34,34,-5,-9,-10,-11,-12,34,34,-43,-44,-45,-46,34,-15,-57,34,-52,-54,-55,-56,34,-4,-6,34,34,34,34,34,34,34,34,-37,34,-7,-8,-36,-42,34,34,34,34,34,34,34,34,34,34,34,34,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,34,-20,-63,34,34,-38,-39,-40,34,34,34,34,34,34,34,34,34,-17,-18,34,-16,-53,-21,]),'FLOAT':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[35,35,-5,-9,-10,-11,-12,35,35,-43,-44,-45,-46,35,-15,-57,35,-52,-54,-55,-56,35,-4,-6,35,35,35,35,35,35,35,35,-37,-7,-8,-36,-42,35,35,35,35,35,35,35,35,35,35,35,35,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,35,-20,-63,35,-38,-39,-40,35,35,35,35,35,35,35,35,35,-17,-18,35,-16,-53,-21,]),'STRING':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[36,36,-5,-9,-10,-11,-12,36,36,-43,-44,-45,-46,36,-15,-57,36,-52,-54,-55,-56,36,-4,-6,36,36,36,36,36,36,36,36,-37,-7,-8,-36,-42,36,36,36,36,36,36,36,36,36,36,36,36,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,36,-20,-63,36,-38,-39,-40,36,36,36,36,36,36,36,36,36,-17,-18,36,-16,-53,-21,]),'PRINT':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[37,37,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,37,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,37,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,37,37,37,-17,-18,-16,-53,-21,]),'IF':([0,3,5,9,10,11,12,19,20,21,22,27,30,31,32,34,35,36,39,40,49,51,52,53,54,65,75,76,77,78,79,80,81,82,85,93,94,98,100,105,106,107,108,115,120,122,129,131,132,133,],[38,38,-5,-9,-10,-11,-12,-43,-44,-45,-46,-15,-57,38,-52,-54,-55,-56,-4,-6,-37,-7,-8,-36,-42,38,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,-20,-63,-38,-39,-40,38,38,38,-17,-18,-16,-53,-21,]),'ID':([0,3,5,9,10,11,12,13,15,19,20,21,22,24,27,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,65,66,69,74,75,76,77,78,79,80,81,82,85,93,94,97,98,100,102,105,106,107,108,109,110,111,112,113,114,115,120,122,129,130,131,132,133,],[30,30,-5,-9,-10,-11,-12,30,30,-43,-44,-45,-46,30,-15,67,-57,30,-52,-54,-55,-56,30,-4,-6,30,30,30,30,30,30,30,30,-37,-7,-8,-36,-42,30,30,30,30,30,30,30,30,30,30,30,30,-28,-29,-30,-31,-32,-33,-34,-35,-41,-14,-19,30,-20,-63,30,-38,-39,-40,30,30,30,30,30,30,30,30,30,-17,-18,30,-16,-53,-21,]),'R_C_BRACKET':([3,4,5,9,10,11,12,27,31,39,40,51,52,68,93,94,98,122,129,131,],[-2,-3,-5,-9,-10,-11,-12,-15,-13,-4,-6,-7,-8,98,-14,-19,-20,-17,-18,-16,]),'SEMICOLON':([6,7,8,18,19,20,21,22,23,25,26,30,32,34,35,36,49,53,54,64,72,73,75,76,77,78,79,80,81,82,85,88,89,90,91,92,100,105,106,107,119,132,],[40,51,52,-42,-43,-44,-45,-46,-58,-60,-61,-57,-52,-54,-55,-56,-37,-36,-42,-59,-62,-68,-28,-29,-30,-31,-32,-33,-34,-35,-41,-47,-48,-49,-50,-51,-63,-38,-39,-40,-67,-53,]),'PLUS':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[41,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,41,41,41,-28,-29,-30,-31,-32,-33,-34,-35,41,-41,41,41,41,41,41,41,41,41,-63,-38,-39,-40,41,41,41,41,41,41,41,-53,41,]),'MAT_PLUS':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[43,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,43,43,43,-28,-29,-30,-31,-32,-33,-34,-35,43,-41,43,43,43,43,43,43,43,43,-63,-38,-39,-40,43,43,43,43,43,43,43,-53,43,]),'MAT_MINUS':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[44,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,44,44,44,-28,-29,-30,-31,-32,-33,-34,-35,44,-41,44,44,44,44,44,44,44,44,-63,-38,-39,-40,44,44,44,44,44,44,44,-53,44,]),'TIMES':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[45,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,45,45,45,45,45,45,45,-32,-33,-34,-35,45,-41,45,45,45,45,45,45,45,45,-63,-38,-39,-40,45,45,45,45,45,45,45,-53,45,]),'DIVIDE':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[46,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,46,46,46,46,46,46,46,-32,-33,-34,-35,46,-41,46,46,46,46,46,46,46,46,-63,-38,-39,-40,46,46,46,46,46,46,46,-53,46,]),'MAT_TIMES':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[47,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,47,47,47,47,47,47,47,-32,-33,-34,-35,47,-41,47,47,47,47,47,47,47,47,-63,-38,-39,-40,47,47,47,47,47,47,47,-53,47,]),'MAT_DIVIDE':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[48,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,48,48,48,48,48,48,48,-32,-33,-34,-35,48,-41,48,48,48,48,48,48,48,48,-63,-38,-39,-40,48,48,48,48,48,48,48,-53,48,]),'TRANSPOSE':([6,18,19,20,21,22,30,32,34,35,36,49,53,54,56,64,73,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,96,100,105,106,107,116,123,124,125,126,127,128,132,133,],[49,-42,-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,49,-42,49,49,49,49,49,49,49,49,49,49,49,49,-41,49,49,49,49,49,49,49,49,-63,-38,-39,-40,49,49,49,49,49,49,49,-53,49,]),'ELSE':([9,10,11,12,27,40,51,52,93,94,98,122,129,131,],[-9,-10,-11,-12,65,-6,-7,-8,-14,-19,-20,-17,-18,-16,]),'ASSIGN':([18,30,32,67,132,],[59,-57,-52,97,-53,]),'PLUS_ASSIGN':([18,30,32,132,],[60,-57,-52,-53,]),'MINUS_ASSIGN':([18,30,32,132,],[61,-57,-52,-53,]),'TIMES_ASSIGN':([18,30,32,132,],[62,-57,-52,-53,]),'DIVIDE_ASSIGN':([18,30,32,132,],[63,-57,-52,-53,]),'R_R_BRACKET':([19,20,21,22,30,32,34,35,36,49,53,54,56,75,76,77,78,79,80,81,82,84,85,86,87,95,100,103,105,106,107,123,124,125,126,127,128,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,85,-28,-29,-30,-31,-32,-33,-34,-35,105,-41,106,107,108,-63,120,-38,-39,-40,-22,-23,-24,-25,-26,-27,-53,]),'COMMA':([19,20,21,22,30,32,34,35,36,49,53,54,71,73,75,76,77,78,79,80,81,82,83,85,100,105,106,107,117,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,101,102,-28,-29,-30,-31,-32,-33,-34,-35,104,-41,-63,-38,-39,-40,-66,-53,]),'EQUAL':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,109,-63,-38,-39,-40,-53,]),'NOT_EQUAL':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,110,-63,-38,-39,-40,-53,]),'GREATER':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,111,-63,-38,-39,-40,-53,]),'LESS':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,112,-63,-38,-39,-40,-53,]),'GREATER_EQUAL':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,113,-63,-38,-39,-40,-53,]),'LESS_EQUAL':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,96,100,105,106,107,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,114,-63,-38,-39,-40,-53,]),'R_S_BRACKET':([19,20,21,22,30,32,34,35,36,49,53,54,70,71,73,75,76,77,78,79,80,81,82,85,99,100,105,106,107,117,118,119,121,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,100,-65,-68,-28,-29,-30,-31,-32,-33,-34,-35,-41,117,-63,-38,-39,-40,-66,-64,-67,132,-53,]),'COLON':([19,20,21,22,30,32,34,35,36,49,53,54,75,76,77,78,79,80,81,82,85,100,105,106,107,116,132,],[-43,-44,-45,-46,-57,-52,-54,-55,-56,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-41,-63,-38,-39,-40,130,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,31,],[2,68,]),'instructions':([0,31,],[3,3,]),'epsilon':([0,31,],[4,4,]),'instruction':([0,3,31,65,108,115,120,],[5,39,5,94,94,94,94,]),'expression':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[6,6,53,56,64,6,73,75,76,77,78,79,80,81,82,84,86,87,88,89,90,91,92,6,96,73,96,116,73,6,123,124,125,126,127,128,6,6,133,]),'assignment':([0,3,31,65,108,115,120,],[7,7,7,7,7,7,7,]),'command':([0,3,31,65,108,115,120,],[8,8,8,8,8,8,8,]),'conditional_statement':([0,3,31,65,108,115,120,],[9,9,9,9,9,9,9,]),'while_statement':([0,3,31,65,108,115,120,],[10,10,10,10,10,10,10,]),'for_statement':([0,3,31,65,108,115,120,],[11,11,11,11,11,11,11,]),'instruction_block':([0,3,31,65,108,115,120,],[12,12,12,12,12,12,12,]),'changeable':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[18,18,54,54,54,18,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,18,54,54,54,54,54,18,54,54,54,54,54,54,18,18,54,]),'matrix':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'integer':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,50,55,57,58,59,60,61,62,63,65,66,69,74,97,102,104,108,109,110,111,112,113,114,115,120,130,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,83,20,20,20,20,20,20,20,20,20,20,20,20,20,20,121,20,20,20,20,20,20,20,20,20,20,]),'float':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'string':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'print_command':([0,3,31,65,108,115,120,],[23,23,23,23,23,23,23,]),'if_statement':([0,3,31,65,108,115,120,],[27,27,27,27,27,27,27,]),'id':([0,3,13,15,24,31,37,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,63,65,66,69,74,97,102,108,109,110,111,112,113,114,115,120,130,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'row_sequence':([33,101,],[70,118,]),'row':([33,101,],[71,71,]),'sequence':([37,69,102,],[72,99,119,]),'body':([65,108,115,120,],[93,122,129,131,]),'sentence':([66,74,],[95,103,]),'range':([97,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','matrix_parser.py',36),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','matrix_parser.py',41),
  ('instructions_opt -> epsilon','instructions_opt',1,'p_instructions_opt','matrix_parser.py',42),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','matrix_parser.py',50),
  ('instructions -> instruction','instructions',1,'p_instructions','matrix_parser.py',51),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',59),
  ('instruction -> assignment SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',60),
  ('instruction -> command SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',61),
  ('instruction -> conditional_statement','instruction',1,'p_instruction','matrix_parser.py',62),
  ('instruction -> while_statement','instruction',1,'p_instruction','matrix_parser.py',63),
  ('instruction -> for_statement','instruction',1,'p_instruction','matrix_parser.py',64),
  ('instruction -> instruction_block','instruction',1,'p_instruction','matrix_parser.py',65),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','matrix_parser.py',70),
  ('conditional_statement -> if_statement ELSE body','conditional_statement',3,'p_conditional_statement','matrix_parser.py',79),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','matrix_parser.py',80),
  ('if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body','if_statement',5,'p_if_statement','matrix_parser.py',88),
  ('while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body','while_statement',5,'p_while_statement','matrix_parser.py',93),
  ('for_statement -> FOR ID ASSIGN range body','for_statement',5,'p_for_statement','matrix_parser.py',98),
  ('body -> instruction','body',1,'p_body','matrix_parser.py',103),
  ('instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET','instruction_block',3,'p_instruction_block','matrix_parser.py',108),
  ('range -> expression COLON expression','range',3,'p_range','matrix_parser.py',113),
  ('sentence -> expression EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',122),
  ('sentence -> expression NOT_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',123),
  ('sentence -> expression GREATER expression','sentence',3,'p_sentence','matrix_parser.py',124),
  ('sentence -> expression LESS expression','sentence',3,'p_sentence','matrix_parser.py',125),
  ('sentence -> expression GREATER_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',126),
  ('sentence -> expression LESS_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',127),
  ('expression -> expression PLUS expression','expression',3,'p_expression','matrix_parser.py',139),
  ('expression -> expression MINUS expression','expression',3,'p_expression','matrix_parser.py',140),
  ('expression -> expression MAT_PLUS expression','expression',3,'p_expression','matrix_parser.py',141),
  ('expression -> expression MAT_MINUS expression','expression',3,'p_expression','matrix_parser.py',142),
  ('expression -> expression TIMES expression','expression',3,'p_expression','matrix_parser.py',143),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','matrix_parser.py',144),
  ('expression -> expression MAT_TIMES expression','expression',3,'p_expression','matrix_parser.py',145),
  ('expression -> expression MAT_DIVIDE expression','expression',3,'p_expression','matrix_parser.py',146),
  ('expression -> MINUS expression','expression',2,'p_expression','matrix_parser.py',147),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression','matrix_parser.py',148),
  ('expression -> EYE L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',149),
  ('expression -> ZEROS L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',150),
  ('expression -> ONES L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',151),
  ('expression -> L_R_BRACKET expression R_R_BRACKET','expression',3,'p_expression','matrix_parser.py',152),
  ('expression -> changeable','expression',1,'p_expression','matrix_parser.py',153),
  ('expression -> matrix','expression',1,'p_expression','matrix_parser.py',154),
  ('expression -> integer','expression',1,'p_expression','matrix_parser.py',155),
  ('expression -> float','expression',1,'p_expression','matrix_parser.py',156),
  ('expression -> string','expression',1,'p_expression','matrix_parser.py',157),
  ('assignment -> changeable ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',172),
  ('assignment -> changeable PLUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',173),
  ('assignment -> changeable MINUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',174),
  ('assignment -> changeable TIMES_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',175),
  ('assignment -> changeable DIVIDE_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',176),
  ('changeable -> id','changeable',1,'p_changeable','matrix_parser.py',181),
  ('changeable -> expression L_S_BRACKET integer COMMA integer R_S_BRACKET','changeable',6,'p_changeable','matrix_parser.py',182),
  ('integer -> INTEGER','integer',1,'p_integer','matrix_parser.py',190),
  ('float -> FLOAT','float',1,'p_float','matrix_parser.py',195),
  ('string -> STRING','string',1,'p_string','matrix_parser.py',200),
  ('id -> ID','id',1,'p_id','matrix_parser.py',205),
  ('command -> print_command','command',1,'p_command','matrix_parser.py',214),
  ('command -> RETURN expression','command',2,'p_command','matrix_parser.py',215),
  ('command -> CONTINUE','command',1,'p_command','matrix_parser.py',216),
  ('command -> BREAK','command',1,'p_command','matrix_parser.py',217),
  ('print_command -> PRINT sequence','print_command',2,'p_print_command','matrix_parser.py',225),
  ('matrix -> L_S_BRACKET row_sequence R_S_BRACKET','matrix',3,'p_matrix','matrix_parser.py',234),
  ('row_sequence -> row COMMA row_sequence','row_sequence',3,'p_row_sequence','matrix_parser.py',239),
  ('row_sequence -> row','row_sequence',1,'p_row_sequence','matrix_parser.py',240),
  ('row -> L_S_BRACKET sequence R_S_BRACKET','row',3,'p_row','matrix_parser.py',248),
  ('sequence -> expression COMMA sequence','sequence',3,'p_sequence','matrix_parser.py',253),
  ('sequence -> expression','sequence',1,'p_sequence','matrix_parser.py',254),
]
