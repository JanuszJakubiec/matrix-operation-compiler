Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> epsilon
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> expression SEMICOLON
Rule 7     instruction -> assignment SEMICOLON
Rule 8     instruction -> command SEMICOLON
Rule 9     instruction -> conditional_statement
Rule 10    instruction -> while_statement
Rule 11    instruction -> for_statement
Rule 12    instruction -> instruction_block
Rule 13    epsilon -> <empty>
Rule 14    conditional_statement -> if_statement ELSE body
Rule 15    conditional_statement -> if_statement
Rule 16    if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body
Rule 17    while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body
Rule 18    for_statement -> FOR ID ASSIGN range body
Rule 19    body -> instruction
Rule 20    instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET
Rule 21    range -> expression COLON expression
Rule 22    sentence -> expression EQUAL expression
Rule 23    sentence -> expression NOT_EQUAL expression
Rule 24    sentence -> expression GREATER expression
Rule 25    sentence -> expression LESS expression
Rule 26    sentence -> expression GREATER_EQUAL expression
Rule 27    sentence -> expression LESS_EQUAL expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression MAT_PLUS expression
Rule 31    expression -> expression MAT_MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MAT_TIMES expression
Rule 35    expression -> expression MAT_DIVIDE expression
Rule 36    expression -> MINUS expression
Rule 37    expression -> expression TRANSPOSE
Rule 38    expression -> EYE L_R_BRACKET expression R_R_BRACKET
Rule 39    expression -> ZEROS L_R_BRACKET expression R_R_BRACKET
Rule 40    expression -> ONES L_R_BRACKET expression R_R_BRACKET
Rule 41    expression -> L_R_BRACKET expression R_R_BRACKET
Rule 42    expression -> changeable
Rule 43    expression -> matrix
Rule 44    expression -> INTEGER
Rule 45    expression -> FLOAT
Rule 46    expression -> STRING
Rule 47    assignment -> changeable ASSIGN expression
Rule 48    assignment -> changeable PLUS_ASSIGN expression
Rule 49    assignment -> changeable MINUS_ASSIGN expression
Rule 50    assignment -> changeable TIMES_ASSIGN expression
Rule 51    assignment -> changeable DIVIDE_ASSIGN expression
Rule 52    changeable -> ID
Rule 53    changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
Rule 54    command -> print_command
Rule 55    command -> RETURN expression
Rule 56    command -> CONTINUE
Rule 57    command -> BREAK
Rule 58    print_command -> PRINT sequence
Rule 59    matrix -> L_S_BRACKET row_sequence R_S_BRACKET
Rule 60    row_sequence -> row COMMA row_sequence
Rule 61    row_sequence -> row
Rule 62    row -> L_S_BRACKET sequence R_S_BRACKET
Rule 63    sequence -> expression COMMA sequence
Rule 64    sequence -> expression

Terminals, with rules where they appear

ASSIGN               : 18 47
BREAK                : 57
COLON                : 21
COMMA                : 53 60 63
CONTINUE             : 56
DIVIDE               : 33
DIVIDE_ASSIGN        : 51
ELSE                 : 14
EQUAL                : 22
EYE                  : 38
FLOAT                : 45
FOR                  : 18
GREATER              : 24
GREATER_EQUAL        : 26
ID                   : 18 52
IF                   : 16
INTEGER              : 44 53 53
LESS                 : 25
LESS_EQUAL           : 27
L_C_BRACKET          : 20
L_R_BRACKET          : 16 17 38 39 40 41
L_S_BRACKET          : 53 59 62
MAT_DIVIDE           : 35
MAT_MINUS            : 31
MAT_PLUS             : 30
MAT_TIMES            : 34
MINUS                : 29 36
MINUS_ASSIGN         : 49
NOT_EQUAL            : 23
ONES                 : 40
PLUS                 : 28
PLUS_ASSIGN          : 48
PRINT                : 58
RETURN               : 55
R_C_BRACKET          : 20
R_R_BRACKET          : 16 17 38 39 40 41
R_S_BRACKET          : 53 59 62
SEMICOLON            : 6 7 8
STRING               : 46
TIMES                : 32
TIMES_ASSIGN         : 50
TRANSPOSE            : 37
WHILE                : 17
ZEROS                : 39
error                : 

Nonterminals, with rules where they appear

assignment           : 7
body                 : 14 16 17 18
changeable           : 42 47 48 49 50 51
command              : 8
conditional_statement : 9
epsilon              : 3
expression           : 6 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 38 39 40 41 47 48 49 50 51 53 55 63 64
for_statement        : 11
if_statement         : 14 15
instruction          : 4 5 19
instruction_block    : 12
instructions         : 2 4
instructions_opt     : 1 20
matrix               : 43
print_command        : 54
program              : 0
range                : 18
row                  : 60 61
row_sequence         : 59 60
sentence             : 16 17
sequence             : 58 62 63
while_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (13) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    $end            reduce using rule 13 (epsilon -> .)
    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    R_C_BRACKET     reduce using rule 2 (instructions_opt -> instructions .)
    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    instruction                    shift and go to state 35
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 4

    (3) instructions_opt -> epsilon .

    $end            reduce using rule 3 (instructions_opt -> epsilon .)
    R_C_BRACKET     reduce using rule 3 (instructions_opt -> epsilon .)


state 5

    (5) instructions -> instruction .

    MINUS           reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    L_R_BRACKET     reduce using rule 5 (instructions -> instruction .)
    INTEGER         reduce using rule 5 (instructions -> instruction .)
    FLOAT           reduce using rule 5 (instructions -> instruction .)
    STRING          reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    L_C_BRACKET     reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    L_S_BRACKET     reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    R_C_BRACKET     reduce using rule 5 (instructions -> instruction .)


state 6

    (6) instruction -> expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 7

    (7) instruction -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 47


state 8

    (8) instruction -> command . SEMICOLON

    SEMICOLON       shift and go to state 48


state 9

    (9) instruction -> conditional_statement .

    MINUS           reduce using rule 9 (instruction -> conditional_statement .)
    EYE             reduce using rule 9 (instruction -> conditional_statement .)
    ZEROS           reduce using rule 9 (instruction -> conditional_statement .)
    ONES            reduce using rule 9 (instruction -> conditional_statement .)
    L_R_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    INTEGER         reduce using rule 9 (instruction -> conditional_statement .)
    FLOAT           reduce using rule 9 (instruction -> conditional_statement .)
    STRING          reduce using rule 9 (instruction -> conditional_statement .)
    RETURN          reduce using rule 9 (instruction -> conditional_statement .)
    CONTINUE        reduce using rule 9 (instruction -> conditional_statement .)
    BREAK           reduce using rule 9 (instruction -> conditional_statement .)
    WHILE           reduce using rule 9 (instruction -> conditional_statement .)
    FOR             reduce using rule 9 (instruction -> conditional_statement .)
    L_C_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    ID              reduce using rule 9 (instruction -> conditional_statement .)
    L_S_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    PRINT           reduce using rule 9 (instruction -> conditional_statement .)
    IF              reduce using rule 9 (instruction -> conditional_statement .)
    $end            reduce using rule 9 (instruction -> conditional_statement .)
    R_C_BRACKET     reduce using rule 9 (instruction -> conditional_statement .)
    ELSE            reduce using rule 9 (instruction -> conditional_statement .)


state 10

    (10) instruction -> while_statement .

    MINUS           reduce using rule 10 (instruction -> while_statement .)
    EYE             reduce using rule 10 (instruction -> while_statement .)
    ZEROS           reduce using rule 10 (instruction -> while_statement .)
    ONES            reduce using rule 10 (instruction -> while_statement .)
    L_R_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    INTEGER         reduce using rule 10 (instruction -> while_statement .)
    FLOAT           reduce using rule 10 (instruction -> while_statement .)
    STRING          reduce using rule 10 (instruction -> while_statement .)
    RETURN          reduce using rule 10 (instruction -> while_statement .)
    CONTINUE        reduce using rule 10 (instruction -> while_statement .)
    BREAK           reduce using rule 10 (instruction -> while_statement .)
    WHILE           reduce using rule 10 (instruction -> while_statement .)
    FOR             reduce using rule 10 (instruction -> while_statement .)
    L_C_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    ID              reduce using rule 10 (instruction -> while_statement .)
    L_S_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    PRINT           reduce using rule 10 (instruction -> while_statement .)
    IF              reduce using rule 10 (instruction -> while_statement .)
    $end            reduce using rule 10 (instruction -> while_statement .)
    R_C_BRACKET     reduce using rule 10 (instruction -> while_statement .)
    ELSE            reduce using rule 10 (instruction -> while_statement .)


state 11

    (11) instruction -> for_statement .

    MINUS           reduce using rule 11 (instruction -> for_statement .)
    EYE             reduce using rule 11 (instruction -> for_statement .)
    ZEROS           reduce using rule 11 (instruction -> for_statement .)
    ONES            reduce using rule 11 (instruction -> for_statement .)
    L_R_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    INTEGER         reduce using rule 11 (instruction -> for_statement .)
    FLOAT           reduce using rule 11 (instruction -> for_statement .)
    STRING          reduce using rule 11 (instruction -> for_statement .)
    RETURN          reduce using rule 11 (instruction -> for_statement .)
    CONTINUE        reduce using rule 11 (instruction -> for_statement .)
    BREAK           reduce using rule 11 (instruction -> for_statement .)
    WHILE           reduce using rule 11 (instruction -> for_statement .)
    FOR             reduce using rule 11 (instruction -> for_statement .)
    L_C_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    ID              reduce using rule 11 (instruction -> for_statement .)
    L_S_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    PRINT           reduce using rule 11 (instruction -> for_statement .)
    IF              reduce using rule 11 (instruction -> for_statement .)
    $end            reduce using rule 11 (instruction -> for_statement .)
    R_C_BRACKET     reduce using rule 11 (instruction -> for_statement .)
    ELSE            reduce using rule 11 (instruction -> for_statement .)


state 12

    (12) instruction -> instruction_block .

    MINUS           reduce using rule 12 (instruction -> instruction_block .)
    EYE             reduce using rule 12 (instruction -> instruction_block .)
    ZEROS           reduce using rule 12 (instruction -> instruction_block .)
    ONES            reduce using rule 12 (instruction -> instruction_block .)
    L_R_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    INTEGER         reduce using rule 12 (instruction -> instruction_block .)
    FLOAT           reduce using rule 12 (instruction -> instruction_block .)
    STRING          reduce using rule 12 (instruction -> instruction_block .)
    RETURN          reduce using rule 12 (instruction -> instruction_block .)
    CONTINUE        reduce using rule 12 (instruction -> instruction_block .)
    BREAK           reduce using rule 12 (instruction -> instruction_block .)
    WHILE           reduce using rule 12 (instruction -> instruction_block .)
    FOR             reduce using rule 12 (instruction -> instruction_block .)
    L_C_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    ID              reduce using rule 12 (instruction -> instruction_block .)
    L_S_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    PRINT           reduce using rule 12 (instruction -> instruction_block .)
    IF              reduce using rule 12 (instruction -> instruction_block .)
    $end            reduce using rule 12 (instruction -> instruction_block .)
    R_C_BRACKET     reduce using rule 12 (instruction -> instruction_block .)
    ELSE            reduce using rule 12 (instruction -> instruction_block .)


state 13

    (36) expression -> MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 49
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 14

    (38) expression -> EYE . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 51


state 15

    (41) expression -> L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 52
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 16

    (39) expression -> ZEROS . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 53


state 17

    (40) expression -> ONES . L_R_BRACKET expression R_R_BRACKET

    L_R_BRACKET     shift and go to state 54


state 18

    (42) expression -> changeable .
    (47) assignment -> changeable . ASSIGN expression
    (48) assignment -> changeable . PLUS_ASSIGN expression
    (49) assignment -> changeable . MINUS_ASSIGN expression
    (50) assignment -> changeable . TIMES_ASSIGN expression
    (51) assignment -> changeable . DIVIDE_ASSIGN expression

    SEMICOLON       reduce using rule 42 (expression -> changeable .)
    PLUS            reduce using rule 42 (expression -> changeable .)
    MINUS           reduce using rule 42 (expression -> changeable .)
    MAT_PLUS        reduce using rule 42 (expression -> changeable .)
    MAT_MINUS       reduce using rule 42 (expression -> changeable .)
    TIMES           reduce using rule 42 (expression -> changeable .)
    DIVIDE          reduce using rule 42 (expression -> changeable .)
    MAT_TIMES       reduce using rule 42 (expression -> changeable .)
    MAT_DIVIDE      reduce using rule 42 (expression -> changeable .)
    TRANSPOSE       reduce using rule 42 (expression -> changeable .)
    L_S_BRACKET     reduce using rule 42 (expression -> changeable .)
    ASSIGN          shift and go to state 55
    PLUS_ASSIGN     shift and go to state 56
    MINUS_ASSIGN    shift and go to state 57
    TIMES_ASSIGN    shift and go to state 58
    DIVIDE_ASSIGN   shift and go to state 59


state 19

    (43) expression -> matrix .

    SEMICOLON       reduce using rule 43 (expression -> matrix .)
    PLUS            reduce using rule 43 (expression -> matrix .)
    MINUS           reduce using rule 43 (expression -> matrix .)
    MAT_PLUS        reduce using rule 43 (expression -> matrix .)
    MAT_MINUS       reduce using rule 43 (expression -> matrix .)
    TIMES           reduce using rule 43 (expression -> matrix .)
    DIVIDE          reduce using rule 43 (expression -> matrix .)
    MAT_TIMES       reduce using rule 43 (expression -> matrix .)
    MAT_DIVIDE      reduce using rule 43 (expression -> matrix .)
    TRANSPOSE       reduce using rule 43 (expression -> matrix .)
    L_S_BRACKET     reduce using rule 43 (expression -> matrix .)
    R_R_BRACKET     reduce using rule 43 (expression -> matrix .)
    COMMA           reduce using rule 43 (expression -> matrix .)
    EQUAL           reduce using rule 43 (expression -> matrix .)
    NOT_EQUAL       reduce using rule 43 (expression -> matrix .)
    GREATER         reduce using rule 43 (expression -> matrix .)
    LESS            reduce using rule 43 (expression -> matrix .)
    GREATER_EQUAL   reduce using rule 43 (expression -> matrix .)
    LESS_EQUAL      reduce using rule 43 (expression -> matrix .)
    R_S_BRACKET     reduce using rule 43 (expression -> matrix .)
    COLON           reduce using rule 43 (expression -> matrix .)
    EYE             reduce using rule 43 (expression -> matrix .)
    ZEROS           reduce using rule 43 (expression -> matrix .)
    ONES            reduce using rule 43 (expression -> matrix .)
    L_R_BRACKET     reduce using rule 43 (expression -> matrix .)
    INTEGER         reduce using rule 43 (expression -> matrix .)
    FLOAT           reduce using rule 43 (expression -> matrix .)
    STRING          reduce using rule 43 (expression -> matrix .)
    RETURN          reduce using rule 43 (expression -> matrix .)
    CONTINUE        reduce using rule 43 (expression -> matrix .)
    BREAK           reduce using rule 43 (expression -> matrix .)
    WHILE           reduce using rule 43 (expression -> matrix .)
    FOR             reduce using rule 43 (expression -> matrix .)
    L_C_BRACKET     reduce using rule 43 (expression -> matrix .)
    ID              reduce using rule 43 (expression -> matrix .)
    PRINT           reduce using rule 43 (expression -> matrix .)
    IF              reduce using rule 43 (expression -> matrix .)


state 20

    (44) expression -> INTEGER .

    SEMICOLON       reduce using rule 44 (expression -> INTEGER .)
    PLUS            reduce using rule 44 (expression -> INTEGER .)
    MINUS           reduce using rule 44 (expression -> INTEGER .)
    MAT_PLUS        reduce using rule 44 (expression -> INTEGER .)
    MAT_MINUS       reduce using rule 44 (expression -> INTEGER .)
    TIMES           reduce using rule 44 (expression -> INTEGER .)
    DIVIDE          reduce using rule 44 (expression -> INTEGER .)
    MAT_TIMES       reduce using rule 44 (expression -> INTEGER .)
    MAT_DIVIDE      reduce using rule 44 (expression -> INTEGER .)
    TRANSPOSE       reduce using rule 44 (expression -> INTEGER .)
    L_S_BRACKET     reduce using rule 44 (expression -> INTEGER .)
    R_R_BRACKET     reduce using rule 44 (expression -> INTEGER .)
    COMMA           reduce using rule 44 (expression -> INTEGER .)
    EQUAL           reduce using rule 44 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 44 (expression -> INTEGER .)
    GREATER         reduce using rule 44 (expression -> INTEGER .)
    LESS            reduce using rule 44 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 44 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 44 (expression -> INTEGER .)
    R_S_BRACKET     reduce using rule 44 (expression -> INTEGER .)
    COLON           reduce using rule 44 (expression -> INTEGER .)
    EYE             reduce using rule 44 (expression -> INTEGER .)
    ZEROS           reduce using rule 44 (expression -> INTEGER .)
    ONES            reduce using rule 44 (expression -> INTEGER .)
    L_R_BRACKET     reduce using rule 44 (expression -> INTEGER .)
    INTEGER         reduce using rule 44 (expression -> INTEGER .)
    FLOAT           reduce using rule 44 (expression -> INTEGER .)
    STRING          reduce using rule 44 (expression -> INTEGER .)
    RETURN          reduce using rule 44 (expression -> INTEGER .)
    CONTINUE        reduce using rule 44 (expression -> INTEGER .)
    BREAK           reduce using rule 44 (expression -> INTEGER .)
    WHILE           reduce using rule 44 (expression -> INTEGER .)
    FOR             reduce using rule 44 (expression -> INTEGER .)
    L_C_BRACKET     reduce using rule 44 (expression -> INTEGER .)
    ID              reduce using rule 44 (expression -> INTEGER .)
    PRINT           reduce using rule 44 (expression -> INTEGER .)
    IF              reduce using rule 44 (expression -> INTEGER .)


state 21

    (45) expression -> FLOAT .

    SEMICOLON       reduce using rule 45 (expression -> FLOAT .)
    PLUS            reduce using rule 45 (expression -> FLOAT .)
    MINUS           reduce using rule 45 (expression -> FLOAT .)
    MAT_PLUS        reduce using rule 45 (expression -> FLOAT .)
    MAT_MINUS       reduce using rule 45 (expression -> FLOAT .)
    TIMES           reduce using rule 45 (expression -> FLOAT .)
    DIVIDE          reduce using rule 45 (expression -> FLOAT .)
    MAT_TIMES       reduce using rule 45 (expression -> FLOAT .)
    MAT_DIVIDE      reduce using rule 45 (expression -> FLOAT .)
    TRANSPOSE       reduce using rule 45 (expression -> FLOAT .)
    L_S_BRACKET     reduce using rule 45 (expression -> FLOAT .)
    R_R_BRACKET     reduce using rule 45 (expression -> FLOAT .)
    COMMA           reduce using rule 45 (expression -> FLOAT .)
    EQUAL           reduce using rule 45 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 45 (expression -> FLOAT .)
    GREATER         reduce using rule 45 (expression -> FLOAT .)
    LESS            reduce using rule 45 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 45 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 45 (expression -> FLOAT .)
    R_S_BRACKET     reduce using rule 45 (expression -> FLOAT .)
    COLON           reduce using rule 45 (expression -> FLOAT .)
    EYE             reduce using rule 45 (expression -> FLOAT .)
    ZEROS           reduce using rule 45 (expression -> FLOAT .)
    ONES            reduce using rule 45 (expression -> FLOAT .)
    L_R_BRACKET     reduce using rule 45 (expression -> FLOAT .)
    INTEGER         reduce using rule 45 (expression -> FLOAT .)
    FLOAT           reduce using rule 45 (expression -> FLOAT .)
    STRING          reduce using rule 45 (expression -> FLOAT .)
    RETURN          reduce using rule 45 (expression -> FLOAT .)
    CONTINUE        reduce using rule 45 (expression -> FLOAT .)
    BREAK           reduce using rule 45 (expression -> FLOAT .)
    WHILE           reduce using rule 45 (expression -> FLOAT .)
    FOR             reduce using rule 45 (expression -> FLOAT .)
    L_C_BRACKET     reduce using rule 45 (expression -> FLOAT .)
    ID              reduce using rule 45 (expression -> FLOAT .)
    PRINT           reduce using rule 45 (expression -> FLOAT .)
    IF              reduce using rule 45 (expression -> FLOAT .)


state 22

    (46) expression -> STRING .

    SEMICOLON       reduce using rule 46 (expression -> STRING .)
    PLUS            reduce using rule 46 (expression -> STRING .)
    MINUS           reduce using rule 46 (expression -> STRING .)
    MAT_PLUS        reduce using rule 46 (expression -> STRING .)
    MAT_MINUS       reduce using rule 46 (expression -> STRING .)
    TIMES           reduce using rule 46 (expression -> STRING .)
    DIVIDE          reduce using rule 46 (expression -> STRING .)
    MAT_TIMES       reduce using rule 46 (expression -> STRING .)
    MAT_DIVIDE      reduce using rule 46 (expression -> STRING .)
    TRANSPOSE       reduce using rule 46 (expression -> STRING .)
    L_S_BRACKET     reduce using rule 46 (expression -> STRING .)
    R_R_BRACKET     reduce using rule 46 (expression -> STRING .)
    COMMA           reduce using rule 46 (expression -> STRING .)
    EQUAL           reduce using rule 46 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 46 (expression -> STRING .)
    GREATER         reduce using rule 46 (expression -> STRING .)
    LESS            reduce using rule 46 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 46 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 46 (expression -> STRING .)
    R_S_BRACKET     reduce using rule 46 (expression -> STRING .)
    COLON           reduce using rule 46 (expression -> STRING .)
    EYE             reduce using rule 46 (expression -> STRING .)
    ZEROS           reduce using rule 46 (expression -> STRING .)
    ONES            reduce using rule 46 (expression -> STRING .)
    L_R_BRACKET     reduce using rule 46 (expression -> STRING .)
    INTEGER         reduce using rule 46 (expression -> STRING .)
    FLOAT           reduce using rule 46 (expression -> STRING .)
    STRING          reduce using rule 46 (expression -> STRING .)
    RETURN          reduce using rule 46 (expression -> STRING .)
    CONTINUE        reduce using rule 46 (expression -> STRING .)
    BREAK           reduce using rule 46 (expression -> STRING .)
    WHILE           reduce using rule 46 (expression -> STRING .)
    FOR             reduce using rule 46 (expression -> STRING .)
    L_C_BRACKET     reduce using rule 46 (expression -> STRING .)
    ID              reduce using rule 46 (expression -> STRING .)
    PRINT           reduce using rule 46 (expression -> STRING .)
    IF              reduce using rule 46 (expression -> STRING .)


state 23

    (54) command -> print_command .

    SEMICOLON       reduce using rule 54 (command -> print_command .)


state 24

    (55) command -> RETURN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 60
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 25

    (56) command -> CONTINUE .

    SEMICOLON       reduce using rule 56 (command -> CONTINUE .)


state 26

    (57) command -> BREAK .

    SEMICOLON       reduce using rule 57 (command -> BREAK .)


state 27

    (14) conditional_statement -> if_statement . ELSE body
    (15) conditional_statement -> if_statement .

    ELSE            shift and go to state 61
    MINUS           reduce using rule 15 (conditional_statement -> if_statement .)
    EYE             reduce using rule 15 (conditional_statement -> if_statement .)
    ZEROS           reduce using rule 15 (conditional_statement -> if_statement .)
    ONES            reduce using rule 15 (conditional_statement -> if_statement .)
    L_R_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    INTEGER         reduce using rule 15 (conditional_statement -> if_statement .)
    FLOAT           reduce using rule 15 (conditional_statement -> if_statement .)
    STRING          reduce using rule 15 (conditional_statement -> if_statement .)
    RETURN          reduce using rule 15 (conditional_statement -> if_statement .)
    CONTINUE        reduce using rule 15 (conditional_statement -> if_statement .)
    BREAK           reduce using rule 15 (conditional_statement -> if_statement .)
    WHILE           reduce using rule 15 (conditional_statement -> if_statement .)
    FOR             reduce using rule 15 (conditional_statement -> if_statement .)
    L_C_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    ID              reduce using rule 15 (conditional_statement -> if_statement .)
    L_S_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)
    PRINT           reduce using rule 15 (conditional_statement -> if_statement .)
    IF              reduce using rule 15 (conditional_statement -> if_statement .)
    $end            reduce using rule 15 (conditional_statement -> if_statement .)
    R_C_BRACKET     reduce using rule 15 (conditional_statement -> if_statement .)

  ! ELSE            [ reduce using rule 15 (conditional_statement -> if_statement .) ]


state 28

    (17) while_statement -> WHILE . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 62


state 29

    (18) for_statement -> FOR . ID ASSIGN range body

    ID              shift and go to state 63


state 30

    (52) changeable -> ID .

    ASSIGN          reduce using rule 52 (changeable -> ID .)
    PLUS_ASSIGN     reduce using rule 52 (changeable -> ID .)
    MINUS_ASSIGN    reduce using rule 52 (changeable -> ID .)
    TIMES_ASSIGN    reduce using rule 52 (changeable -> ID .)
    DIVIDE_ASSIGN   reduce using rule 52 (changeable -> ID .)
    SEMICOLON       reduce using rule 52 (changeable -> ID .)
    PLUS            reduce using rule 52 (changeable -> ID .)
    MINUS           reduce using rule 52 (changeable -> ID .)
    MAT_PLUS        reduce using rule 52 (changeable -> ID .)
    MAT_MINUS       reduce using rule 52 (changeable -> ID .)
    TIMES           reduce using rule 52 (changeable -> ID .)
    DIVIDE          reduce using rule 52 (changeable -> ID .)
    MAT_TIMES       reduce using rule 52 (changeable -> ID .)
    MAT_DIVIDE      reduce using rule 52 (changeable -> ID .)
    TRANSPOSE       reduce using rule 52 (changeable -> ID .)
    L_S_BRACKET     reduce using rule 52 (changeable -> ID .)
    R_R_BRACKET     reduce using rule 52 (changeable -> ID .)
    COMMA           reduce using rule 52 (changeable -> ID .)
    EQUAL           reduce using rule 52 (changeable -> ID .)
    NOT_EQUAL       reduce using rule 52 (changeable -> ID .)
    GREATER         reduce using rule 52 (changeable -> ID .)
    LESS            reduce using rule 52 (changeable -> ID .)
    GREATER_EQUAL   reduce using rule 52 (changeable -> ID .)
    LESS_EQUAL      reduce using rule 52 (changeable -> ID .)
    R_S_BRACKET     reduce using rule 52 (changeable -> ID .)
    COLON           reduce using rule 52 (changeable -> ID .)
    EYE             reduce using rule 52 (changeable -> ID .)
    ZEROS           reduce using rule 52 (changeable -> ID .)
    ONES            reduce using rule 52 (changeable -> ID .)
    L_R_BRACKET     reduce using rule 52 (changeable -> ID .)
    INTEGER         reduce using rule 52 (changeable -> ID .)
    FLOAT           reduce using rule 52 (changeable -> ID .)
    STRING          reduce using rule 52 (changeable -> ID .)
    RETURN          reduce using rule 52 (changeable -> ID .)
    CONTINUE        reduce using rule 52 (changeable -> ID .)
    BREAK           reduce using rule 52 (changeable -> ID .)
    WHILE           reduce using rule 52 (changeable -> ID .)
    FOR             reduce using rule 52 (changeable -> ID .)
    L_C_BRACKET     reduce using rule 52 (changeable -> ID .)
    ID              reduce using rule 52 (changeable -> ID .)
    PRINT           reduce using rule 52 (changeable -> ID .)
    IF              reduce using rule 52 (changeable -> ID .)


state 31

    (20) instruction_block -> L_C_BRACKET . instructions_opt R_C_BRACKET
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> . epsilon
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (13) epsilon -> .
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    R_C_BRACKET     reduce using rule 13 (epsilon -> .)
    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    instructions_opt               shift and go to state 64
    instructions                   shift and go to state 3
    epsilon                        shift and go to state 4
    instruction                    shift and go to state 5
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 32

    (59) matrix -> L_S_BRACKET . row_sequence R_S_BRACKET
    (60) row_sequence -> . row COMMA row_sequence
    (61) row_sequence -> . row
    (62) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 65

    row_sequence                   shift and go to state 66
    row                            shift and go to state 67

state 33

    (58) print_command -> PRINT . sequence
    (63) sequence -> . expression COMMA sequence
    (64) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    sequence                       shift and go to state 68
    expression                     shift and go to state 69
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 34

    (16) if_statement -> IF . L_R_BRACKET sentence R_R_BRACKET body

    L_R_BRACKET     shift and go to state 70


state 35

    (4) instructions -> instructions instruction .

    MINUS           reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    L_R_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    INTEGER         reduce using rule 4 (instructions -> instructions instruction .)
    FLOAT           reduce using rule 4 (instructions -> instructions instruction .)
    STRING          reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    L_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    L_S_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    R_C_BRACKET     reduce using rule 4 (instructions -> instructions instruction .)


state 36

    (6) instruction -> expression SEMICOLON .

    MINUS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    EYE             reduce using rule 6 (instruction -> expression SEMICOLON .)
    ZEROS           reduce using rule 6 (instruction -> expression SEMICOLON .)
    ONES            reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_R_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    INTEGER         reduce using rule 6 (instruction -> expression SEMICOLON .)
    FLOAT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 6 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 6 (instruction -> expression SEMICOLON .)
    CONTINUE        reduce using rule 6 (instruction -> expression SEMICOLON .)
    BREAK           reduce using rule 6 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 6 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 6 (instruction -> expression SEMICOLON .)
    L_S_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 6 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 6 (instruction -> expression SEMICOLON .)
    $end            reduce using rule 6 (instruction -> expression SEMICOLON .)
    R_C_BRACKET     reduce using rule 6 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 6 (instruction -> expression SEMICOLON .)


state 37

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 71
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 38

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 72
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 39

    (30) expression -> expression MAT_PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 73
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 40

    (31) expression -> expression MAT_MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 74
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 41

    (32) expression -> expression TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 75
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 42

    (33) expression -> expression DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 76
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 43

    (34) expression -> expression MAT_TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 77
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 44

    (35) expression -> expression MAT_DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 78
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 45

    (37) expression -> expression TRANSPOSE .

    SEMICOLON       reduce using rule 37 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 37 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_PLUS        reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_MINUS       reduce using rule 37 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 37 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_TIMES       reduce using rule 37 (expression -> expression TRANSPOSE .)
    MAT_DIVIDE      reduce using rule 37 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_S_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    R_R_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    COMMA           reduce using rule 37 (expression -> expression TRANSPOSE .)
    EQUAL           reduce using rule 37 (expression -> expression TRANSPOSE .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression TRANSPOSE .)
    GREATER         reduce using rule 37 (expression -> expression TRANSPOSE .)
    LESS            reduce using rule 37 (expression -> expression TRANSPOSE .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression TRANSPOSE .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression TRANSPOSE .)
    R_S_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    COLON           reduce using rule 37 (expression -> expression TRANSPOSE .)
    EYE             reduce using rule 37 (expression -> expression TRANSPOSE .)
    ZEROS           reduce using rule 37 (expression -> expression TRANSPOSE .)
    ONES            reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_R_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    INTEGER         reduce using rule 37 (expression -> expression TRANSPOSE .)
    FLOAT           reduce using rule 37 (expression -> expression TRANSPOSE .)
    STRING          reduce using rule 37 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 37 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 37 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 37 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 37 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 37 (expression -> expression TRANSPOSE .)
    L_C_BRACKET     reduce using rule 37 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 37 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 37 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 37 (expression -> expression TRANSPOSE .)


state 46

    (53) changeable -> expression L_S_BRACKET . INTEGER COMMA INTEGER R_S_BRACKET

    INTEGER         shift and go to state 79


state 47

    (7) instruction -> assignment SEMICOLON .

    MINUS           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    EYE             reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ZEROS           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ONES            reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_R_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    INTEGER         reduce using rule 7 (instruction -> assignment SEMICOLON .)
    FLOAT           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    STRING          reduce using rule 7 (instruction -> assignment SEMICOLON .)
    RETURN          reduce using rule 7 (instruction -> assignment SEMICOLON .)
    CONTINUE        reduce using rule 7 (instruction -> assignment SEMICOLON .)
    BREAK           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    WHILE           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    FOR             reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_C_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ID              reduce using rule 7 (instruction -> assignment SEMICOLON .)
    L_S_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    PRINT           reduce using rule 7 (instruction -> assignment SEMICOLON .)
    IF              reduce using rule 7 (instruction -> assignment SEMICOLON .)
    $end            reduce using rule 7 (instruction -> assignment SEMICOLON .)
    R_C_BRACKET     reduce using rule 7 (instruction -> assignment SEMICOLON .)
    ELSE            reduce using rule 7 (instruction -> assignment SEMICOLON .)


state 48

    (8) instruction -> command SEMICOLON .

    MINUS           reduce using rule 8 (instruction -> command SEMICOLON .)
    EYE             reduce using rule 8 (instruction -> command SEMICOLON .)
    ZEROS           reduce using rule 8 (instruction -> command SEMICOLON .)
    ONES            reduce using rule 8 (instruction -> command SEMICOLON .)
    L_R_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    INTEGER         reduce using rule 8 (instruction -> command SEMICOLON .)
    FLOAT           reduce using rule 8 (instruction -> command SEMICOLON .)
    STRING          reduce using rule 8 (instruction -> command SEMICOLON .)
    RETURN          reduce using rule 8 (instruction -> command SEMICOLON .)
    CONTINUE        reduce using rule 8 (instruction -> command SEMICOLON .)
    BREAK           reduce using rule 8 (instruction -> command SEMICOLON .)
    WHILE           reduce using rule 8 (instruction -> command SEMICOLON .)
    FOR             reduce using rule 8 (instruction -> command SEMICOLON .)
    L_C_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    ID              reduce using rule 8 (instruction -> command SEMICOLON .)
    L_S_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    PRINT           reduce using rule 8 (instruction -> command SEMICOLON .)
    IF              reduce using rule 8 (instruction -> command SEMICOLON .)
    $end            reduce using rule 8 (instruction -> command SEMICOLON .)
    R_C_BRACKET     reduce using rule 8 (instruction -> command SEMICOLON .)
    ELSE            reduce using rule 8 (instruction -> command SEMICOLON .)


state 49

    (36) expression -> MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 36 (expression -> MINUS expression .)
    PLUS            reduce using rule 36 (expression -> MINUS expression .)
    MINUS           reduce using rule 36 (expression -> MINUS expression .)
    MAT_PLUS        reduce using rule 36 (expression -> MINUS expression .)
    MAT_MINUS       reduce using rule 36 (expression -> MINUS expression .)
    TIMES           reduce using rule 36 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 36 (expression -> MINUS expression .)
    MAT_TIMES       reduce using rule 36 (expression -> MINUS expression .)
    MAT_DIVIDE      reduce using rule 36 (expression -> MINUS expression .)
    L_S_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    R_R_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    COMMA           reduce using rule 36 (expression -> MINUS expression .)
    EQUAL           reduce using rule 36 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> MINUS expression .)
    GREATER         reduce using rule 36 (expression -> MINUS expression .)
    LESS            reduce using rule 36 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> MINUS expression .)
    R_S_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    COLON           reduce using rule 36 (expression -> MINUS expression .)
    EYE             reduce using rule 36 (expression -> MINUS expression .)
    ZEROS           reduce using rule 36 (expression -> MINUS expression .)
    ONES            reduce using rule 36 (expression -> MINUS expression .)
    L_R_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    INTEGER         reduce using rule 36 (expression -> MINUS expression .)
    FLOAT           reduce using rule 36 (expression -> MINUS expression .)
    STRING          reduce using rule 36 (expression -> MINUS expression .)
    RETURN          reduce using rule 36 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 36 (expression -> MINUS expression .)
    BREAK           reduce using rule 36 (expression -> MINUS expression .)
    WHILE           reduce using rule 36 (expression -> MINUS expression .)
    FOR             reduce using rule 36 (expression -> MINUS expression .)
    L_C_BRACKET     reduce using rule 36 (expression -> MINUS expression .)
    ID              reduce using rule 36 (expression -> MINUS expression .)
    PRINT           reduce using rule 36 (expression -> MINUS expression .)
    IF              reduce using rule 36 (expression -> MINUS expression .)
    TRANSPOSE       shift and go to state 45

  ! TRANSPOSE       [ reduce using rule 36 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 50

    (42) expression -> changeable .

    PLUS            reduce using rule 42 (expression -> changeable .)
    MINUS           reduce using rule 42 (expression -> changeable .)
    MAT_PLUS        reduce using rule 42 (expression -> changeable .)
    MAT_MINUS       reduce using rule 42 (expression -> changeable .)
    TIMES           reduce using rule 42 (expression -> changeable .)
    DIVIDE          reduce using rule 42 (expression -> changeable .)
    MAT_TIMES       reduce using rule 42 (expression -> changeable .)
    MAT_DIVIDE      reduce using rule 42 (expression -> changeable .)
    TRANSPOSE       reduce using rule 42 (expression -> changeable .)
    L_S_BRACKET     reduce using rule 42 (expression -> changeable .)
    SEMICOLON       reduce using rule 42 (expression -> changeable .)
    R_R_BRACKET     reduce using rule 42 (expression -> changeable .)
    COMMA           reduce using rule 42 (expression -> changeable .)
    EQUAL           reduce using rule 42 (expression -> changeable .)
    NOT_EQUAL       reduce using rule 42 (expression -> changeable .)
    GREATER         reduce using rule 42 (expression -> changeable .)
    LESS            reduce using rule 42 (expression -> changeable .)
    GREATER_EQUAL   reduce using rule 42 (expression -> changeable .)
    LESS_EQUAL      reduce using rule 42 (expression -> changeable .)
    R_S_BRACKET     reduce using rule 42 (expression -> changeable .)
    COLON           reduce using rule 42 (expression -> changeable .)
    EYE             reduce using rule 42 (expression -> changeable .)
    ZEROS           reduce using rule 42 (expression -> changeable .)
    ONES            reduce using rule 42 (expression -> changeable .)
    L_R_BRACKET     reduce using rule 42 (expression -> changeable .)
    INTEGER         reduce using rule 42 (expression -> changeable .)
    FLOAT           reduce using rule 42 (expression -> changeable .)
    STRING          reduce using rule 42 (expression -> changeable .)
    RETURN          reduce using rule 42 (expression -> changeable .)
    CONTINUE        reduce using rule 42 (expression -> changeable .)
    BREAK           reduce using rule 42 (expression -> changeable .)
    WHILE           reduce using rule 42 (expression -> changeable .)
    FOR             reduce using rule 42 (expression -> changeable .)
    L_C_BRACKET     reduce using rule 42 (expression -> changeable .)
    ID              reduce using rule 42 (expression -> changeable .)
    PRINT           reduce using rule 42 (expression -> changeable .)
    IF              reduce using rule 42 (expression -> changeable .)


state 51

    (38) expression -> EYE L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 80
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 52

    (41) expression -> L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 81
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 53

    (39) expression -> ZEROS L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 82
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 54

    (40) expression -> ONES L_R_BRACKET . expression R_R_BRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 83
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 55

    (47) assignment -> changeable ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 50
    expression                     shift and go to state 84
    matrix                         shift and go to state 19

state 56

    (48) assignment -> changeable PLUS_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 50
    expression                     shift and go to state 85
    matrix                         shift and go to state 19

state 57

    (49) assignment -> changeable MINUS_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 50
    expression                     shift and go to state 86
    matrix                         shift and go to state 19

state 58

    (50) assignment -> changeable TIMES_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 50
    expression                     shift and go to state 87
    matrix                         shift and go to state 19

state 59

    (51) assignment -> changeable DIVIDE_ASSIGN . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    changeable                     shift and go to state 50
    expression                     shift and go to state 88
    matrix                         shift and go to state 19

state 60

    (55) command -> RETURN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 55 (command -> RETURN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 61

    (14) conditional_statement -> if_statement ELSE . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    if_statement                   shift and go to state 27
    body                           shift and go to state 89
    instruction                    shift and go to state 90
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23

state 62

    (17) while_statement -> WHILE L_R_BRACKET . sentence R_R_BRACKET body
    (22) sentence -> . expression EQUAL expression
    (23) sentence -> . expression NOT_EQUAL expression
    (24) sentence -> . expression GREATER expression
    (25) sentence -> . expression LESS expression
    (26) sentence -> . expression GREATER_EQUAL expression
    (27) sentence -> . expression LESS_EQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 91
    expression                     shift and go to state 92
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 63

    (18) for_statement -> FOR ID . ASSIGN range body

    ASSIGN          shift and go to state 93


state 64

    (20) instruction_block -> L_C_BRACKET instructions_opt . R_C_BRACKET

    R_C_BRACKET     shift and go to state 94


state 65

    (62) row -> L_S_BRACKET . sequence R_S_BRACKET
    (63) sequence -> . expression COMMA sequence
    (64) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    sequence                       shift and go to state 95
    expression                     shift and go to state 69
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 66

    (59) matrix -> L_S_BRACKET row_sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 96


state 67

    (60) row_sequence -> row . COMMA row_sequence
    (61) row_sequence -> row .

    COMMA           shift and go to state 97
    R_S_BRACKET     reduce using rule 61 (row_sequence -> row .)


state 68

    (58) print_command -> PRINT sequence .

    SEMICOLON       reduce using rule 58 (print_command -> PRINT sequence .)


state 69

    (63) sequence -> expression . COMMA sequence
    (64) sequence -> expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    COMMA           shift and go to state 98
    SEMICOLON       reduce using rule 64 (sequence -> expression .)
    R_S_BRACKET     reduce using rule 64 (sequence -> expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 70

    (16) if_statement -> IF L_R_BRACKET . sentence R_R_BRACKET body
    (22) sentence -> . expression EQUAL expression
    (23) sentence -> . expression NOT_EQUAL expression
    (24) sentence -> . expression GREATER expression
    (25) sentence -> . expression LESS expression
    (26) sentence -> . expression GREATER_EQUAL expression
    (27) sentence -> . expression LESS_EQUAL expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    sentence                       shift and go to state 99
    expression                     shift and go to state 92
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 71

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    MAT_PLUS        reduce using rule 28 (expression -> expression PLUS expression .)
    MAT_MINUS       reduce using rule 28 (expression -> expression PLUS expression .)
    L_S_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    R_R_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 28 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 28 (expression -> expression PLUS expression .)
    LESS            reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression PLUS expression .)
    R_S_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    COLON           reduce using rule 28 (expression -> expression PLUS expression .)
    EYE             reduce using rule 28 (expression -> expression PLUS expression .)
    ZEROS           reduce using rule 28 (expression -> expression PLUS expression .)
    ONES            reduce using rule 28 (expression -> expression PLUS expression .)
    L_R_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 28 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 28 (expression -> expression PLUS expression .)
    STRING          reduce using rule 28 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 28 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 28 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 28 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 28 (expression -> expression PLUS expression .)
    FOR             reduce using rule 28 (expression -> expression PLUS expression .)
    L_C_BRACKET     reduce using rule 28 (expression -> expression PLUS expression .)
    ID              reduce using rule 28 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 28 (expression -> expression PLUS expression .)
    IF              reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 72

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    MAT_PLUS        reduce using rule 29 (expression -> expression MINUS expression .)
    MAT_MINUS       reduce using rule 29 (expression -> expression MINUS expression .)
    L_S_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    R_R_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 29 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 29 (expression -> expression MINUS expression .)
    LESS            reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression MINUS expression .)
    R_S_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    COLON           reduce using rule 29 (expression -> expression MINUS expression .)
    EYE             reduce using rule 29 (expression -> expression MINUS expression .)
    ZEROS           reduce using rule 29 (expression -> expression MINUS expression .)
    ONES            reduce using rule 29 (expression -> expression MINUS expression .)
    L_R_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 29 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 29 (expression -> expression MINUS expression .)
    STRING          reduce using rule 29 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 29 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 29 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 29 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 29 (expression -> expression MINUS expression .)
    FOR             reduce using rule 29 (expression -> expression MINUS expression .)
    L_C_BRACKET     reduce using rule 29 (expression -> expression MINUS expression .)
    ID              reduce using rule 29 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 29 (expression -> expression MINUS expression .)
    IF              reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 73

    (30) expression -> expression MAT_PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MAT_PLUS        reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    MAT_MINUS       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    L_S_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    R_R_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    EQUAL           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    GREATER         reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    LESS            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    GREATER_EQUAL   reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    LESS_EQUAL      reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    R_S_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    COLON           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    EYE             reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ZEROS           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ONES            reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    L_R_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    INTEGER         reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    FLOAT           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    STRING          reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    RETURN          reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    CONTINUE        reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    BREAK           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    WHILE           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    FOR             reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    L_C_BRACKET     reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    ID              reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    PRINT           reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    IF              reduce using rule 30 (expression -> expression MAT_PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45

  ! TIMES           [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 30 (expression -> expression MAT_PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 74

    (31) expression -> expression MAT_MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MAT_PLUS        reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    MAT_MINUS       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    L_S_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    R_R_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    EQUAL           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    GREATER         reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    LESS            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    R_S_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    COLON           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    EYE             reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ZEROS           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ONES            reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    L_R_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    INTEGER         reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    FLOAT           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    STRING          reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    RETURN          reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    BREAK           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    WHILE           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    FOR             reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    L_C_BRACKET     reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    ID              reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    PRINT           reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    IF              reduce using rule 31 (expression -> expression MAT_MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45

  ! TIMES           [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_TIMES       [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! MAT_DIVIDE      [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! TRANSPOSE       [ reduce using rule 31 (expression -> expression MAT_MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 75

    (32) expression -> expression TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_PLUS        reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_MINUS       reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_TIMES       reduce using rule 32 (expression -> expression TIMES expression .)
    MAT_DIVIDE      reduce using rule 32 (expression -> expression TIMES expression .)
    L_S_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    R_R_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 32 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 32 (expression -> expression TIMES expression .)
    LESS            reduce using rule 32 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression TIMES expression .)
    R_S_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    COLON           reduce using rule 32 (expression -> expression TIMES expression .)
    EYE             reduce using rule 32 (expression -> expression TIMES expression .)
    ZEROS           reduce using rule 32 (expression -> expression TIMES expression .)
    ONES            reduce using rule 32 (expression -> expression TIMES expression .)
    L_R_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 32 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 32 (expression -> expression TIMES expression .)
    STRING          reduce using rule 32 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 32 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 32 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 32 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 32 (expression -> expression TIMES expression .)
    FOR             reduce using rule 32 (expression -> expression TIMES expression .)
    L_C_BRACKET     reduce using rule 32 (expression -> expression TIMES expression .)
    ID              reduce using rule 32 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 32 (expression -> expression TIMES expression .)
    IF              reduce using rule 32 (expression -> expression TIMES expression .)
    TRANSPOSE       shift and go to state 45

  ! TRANSPOSE       [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 76

    (33) expression -> expression DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_PLUS        reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_MINUS       reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_TIMES       reduce using rule 33 (expression -> expression DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 33 (expression -> expression DIVIDE expression .)
    L_S_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    R_R_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 33 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression DIVIDE expression .)
    R_S_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 33 (expression -> expression DIVIDE expression .)
    EYE             reduce using rule 33 (expression -> expression DIVIDE expression .)
    ZEROS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    ONES            reduce using rule 33 (expression -> expression DIVIDE expression .)
    L_R_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 33 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 33 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 33 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 33 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 33 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 33 (expression -> expression DIVIDE expression .)
    L_C_BRACKET     reduce using rule 33 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 33 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 33 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 33 (expression -> expression DIVIDE expression .)
    TRANSPOSE       shift and go to state 45

  ! TRANSPOSE       [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 77

    (34) expression -> expression MAT_TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    PLUS            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MINUS           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_PLUS        reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_MINUS       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    TIMES           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_TIMES       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    MAT_DIVIDE      reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    L_S_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    R_R_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    COMMA           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    EQUAL           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    GREATER         reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    LESS            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    R_S_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    COLON           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    EYE             reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ZEROS           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ONES            reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    L_R_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    INTEGER         reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    FLOAT           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    STRING          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    RETURN          reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    CONTINUE        reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    BREAK           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    WHILE           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    FOR             reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    L_C_BRACKET     reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    ID              reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    PRINT           reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    IF              reduce using rule 34 (expression -> expression MAT_TIMES expression .)
    TRANSPOSE       shift and go to state 45

  ! TRANSPOSE       [ reduce using rule 34 (expression -> expression MAT_TIMES expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 78

    (35) expression -> expression MAT_DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_PLUS        reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_MINUS       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_TIMES       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    MAT_DIVIDE      reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    L_S_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    R_R_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    COMMA           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    EQUAL           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    GREATER         reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    LESS            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    R_S_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    COLON           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    EYE             reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ZEROS           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ONES            reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    L_R_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    INTEGER         reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    FLOAT           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    STRING          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    RETURN          reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    CONTINUE        reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    BREAK           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    WHILE           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    FOR             reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    L_C_BRACKET     reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    ID              reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    PRINT           reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    IF              reduce using rule 35 (expression -> expression MAT_DIVIDE expression .)
    TRANSPOSE       shift and go to state 45

  ! TRANSPOSE       [ reduce using rule 35 (expression -> expression MAT_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! MAT_PLUS        [ shift and go to state 39 ]
  ! MAT_MINUS       [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MAT_TIMES       [ shift and go to state 43 ]
  ! MAT_DIVIDE      [ shift and go to state 44 ]
  ! L_S_BRACKET     [ shift and go to state 46 ]


state 79

    (53) changeable -> expression L_S_BRACKET INTEGER . COMMA INTEGER R_S_BRACKET

    COMMA           shift and go to state 100


state 80

    (38) expression -> EYE L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 101
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 81

    (41) expression -> L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 41 (expression -> L_R_BRACKET expression R_R_BRACKET .)


state 82

    (39) expression -> ZEROS L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 102
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 83

    (40) expression -> ONES L_R_BRACKET expression . R_R_BRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     shift and go to state 103
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 84

    (47) assignment -> changeable ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 47 (assignment -> changeable ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 85

    (48) assignment -> changeable PLUS_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 48 (assignment -> changeable PLUS_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 86

    (49) assignment -> changeable MINUS_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 49 (assignment -> changeable MINUS_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 87

    (50) assignment -> changeable TIMES_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 50 (assignment -> changeable TIMES_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 88

    (51) assignment -> changeable DIVIDE_ASSIGN expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    SEMICOLON       reduce using rule 51 (assignment -> changeable DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 89

    (14) conditional_statement -> if_statement ELSE body .

    MINUS           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    EYE             reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ZEROS           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ONES            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_R_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    INTEGER         reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    FLOAT           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    STRING          reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    RETURN          reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    CONTINUE        reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    BREAK           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    WHILE           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    FOR             reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ID              reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    L_S_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    PRINT           reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    IF              reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    $end            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    R_C_BRACKET     reduce using rule 14 (conditional_statement -> if_statement ELSE body .)
    ELSE            reduce using rule 14 (conditional_statement -> if_statement ELSE body .)


state 90

    (19) body -> instruction .

    MINUS           reduce using rule 19 (body -> instruction .)
    EYE             reduce using rule 19 (body -> instruction .)
    ZEROS           reduce using rule 19 (body -> instruction .)
    ONES            reduce using rule 19 (body -> instruction .)
    L_R_BRACKET     reduce using rule 19 (body -> instruction .)
    INTEGER         reduce using rule 19 (body -> instruction .)
    FLOAT           reduce using rule 19 (body -> instruction .)
    STRING          reduce using rule 19 (body -> instruction .)
    RETURN          reduce using rule 19 (body -> instruction .)
    CONTINUE        reduce using rule 19 (body -> instruction .)
    BREAK           reduce using rule 19 (body -> instruction .)
    WHILE           reduce using rule 19 (body -> instruction .)
    FOR             reduce using rule 19 (body -> instruction .)
    L_C_BRACKET     reduce using rule 19 (body -> instruction .)
    ID              reduce using rule 19 (body -> instruction .)
    L_S_BRACKET     reduce using rule 19 (body -> instruction .)
    PRINT           reduce using rule 19 (body -> instruction .)
    IF              reduce using rule 19 (body -> instruction .)
    $end            reduce using rule 19 (body -> instruction .)
    R_C_BRACKET     reduce using rule 19 (body -> instruction .)
    ELSE            reduce using rule 19 (body -> instruction .)


state 91

    (17) while_statement -> WHILE L_R_BRACKET sentence . R_R_BRACKET body

    R_R_BRACKET     shift and go to state 104


state 92

    (22) sentence -> expression . EQUAL expression
    (23) sentence -> expression . NOT_EQUAL expression
    (24) sentence -> expression . GREATER expression
    (25) sentence -> expression . LESS expression
    (26) sentence -> expression . GREATER_EQUAL expression
    (27) sentence -> expression . LESS_EQUAL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    EQUAL           shift and go to state 105
    NOT_EQUAL       shift and go to state 106
    GREATER         shift and go to state 107
    LESS            shift and go to state 108
    GREATER_EQUAL   shift and go to state 109
    LESS_EQUAL      shift and go to state 110
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 93

    (18) for_statement -> FOR ID ASSIGN . range body
    (21) range -> . expression COLON expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    range                          shift and go to state 111
    expression                     shift and go to state 112
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 94

    (20) instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .

    MINUS           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    EYE             reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ZEROS           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ONES            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_R_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    INTEGER         reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FLOAT           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    STRING          reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    RETURN          reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    CONTINUE        reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    BREAK           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    WHILE           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    FOR             reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_C_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ID              reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    L_S_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    PRINT           reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    IF              reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    $end            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    R_C_BRACKET     reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)
    ELSE            reduce using rule 20 (instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET .)


state 95

    (62) row -> L_S_BRACKET sequence . R_S_BRACKET

    R_S_BRACKET     shift and go to state 113


state 96

    (59) matrix -> L_S_BRACKET row_sequence R_S_BRACKET .

    SEMICOLON       reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PLUS            reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MINUS           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_PLUS        reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_MINUS       reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TIMES           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    DIVIDE          reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_TIMES       reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    TRANSPOSE       reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COMMA           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EQUAL           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER         reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS            reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    COLON           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    EYE             reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ZEROS           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ONES            reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    INTEGER         reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FLOAT           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    STRING          reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    RETURN          reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    CONTINUE        reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    BREAK           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    WHILE           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    FOR             reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    ID              reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    PRINT           reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)
    IF              reduce using rule 59 (matrix -> L_S_BRACKET row_sequence R_S_BRACKET .)


state 97

    (60) row_sequence -> row COMMA . row_sequence
    (60) row_sequence -> . row COMMA row_sequence
    (61) row_sequence -> . row
    (62) row -> . L_S_BRACKET sequence R_S_BRACKET

    L_S_BRACKET     shift and go to state 65

    row                            shift and go to state 67
    row_sequence                   shift and go to state 114

state 98

    (63) sequence -> expression COMMA . sequence
    (63) sequence -> . expression COMMA sequence
    (64) sequence -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 69
    sequence                       shift and go to state 115
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 99

    (16) if_statement -> IF L_R_BRACKET sentence . R_R_BRACKET body

    R_R_BRACKET     shift and go to state 116


state 100

    (53) changeable -> expression L_S_BRACKET INTEGER COMMA . INTEGER R_S_BRACKET

    INTEGER         shift and go to state 117


state 101

    (38) expression -> EYE L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 38 (expression -> EYE L_R_BRACKET expression R_R_BRACKET .)


state 102

    (39) expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 39 (expression -> ZEROS L_R_BRACKET expression R_R_BRACKET .)


state 103

    (40) expression -> ONES L_R_BRACKET expression R_R_BRACKET .

    SEMICOLON       reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PLUS            reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MINUS           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_PLUS        reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_MINUS       reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TIMES           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    DIVIDE          reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_TIMES       reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    MAT_DIVIDE      reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    TRANSPOSE       reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_S_BRACKET     reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_R_BRACKET     reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COMMA           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EQUAL           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    NOT_EQUAL       reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER         reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS            reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    GREATER_EQUAL   reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    LESS_EQUAL      reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    R_S_BRACKET     reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    COLON           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    EYE             reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ZEROS           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ONES            reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_R_BRACKET     reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    INTEGER         reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FLOAT           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    STRING          reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    RETURN          reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    CONTINUE        reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    BREAK           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    WHILE           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    FOR             reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    L_C_BRACKET     reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    ID              reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    PRINT           reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)
    IF              reduce using rule 40 (expression -> ONES L_R_BRACKET expression R_R_BRACKET .)


state 104

    (17) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    body                           shift and go to state 118
    instruction                    shift and go to state 90
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 105

    (22) sentence -> expression EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 119
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 106

    (23) sentence -> expression NOT_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 120
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 107

    (24) sentence -> expression GREATER . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 121
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 108

    (25) sentence -> expression LESS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 122
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 109

    (26) sentence -> expression GREATER_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 123
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 110

    (27) sentence -> expression LESS_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 124
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 111

    (18) for_statement -> FOR ID ASSIGN range . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    body                           shift and go to state 125
    instruction                    shift and go to state 90
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 112

    (21) range -> expression . COLON expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    COLON           shift and go to state 126
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 113

    (62) row -> L_S_BRACKET sequence R_S_BRACKET .

    COMMA           reduce using rule 62 (row -> L_S_BRACKET sequence R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 62 (row -> L_S_BRACKET sequence R_S_BRACKET .)


state 114

    (60) row_sequence -> row COMMA row_sequence .

    R_S_BRACKET     reduce using rule 60 (row_sequence -> row COMMA row_sequence .)


state 115

    (63) sequence -> expression COMMA sequence .

    SEMICOLON       reduce using rule 63 (sequence -> expression COMMA sequence .)
    R_S_BRACKET     reduce using rule 63 (sequence -> expression COMMA sequence .)


state 116

    (16) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET . body
    (19) body -> . instruction
    (6) instruction -> . expression SEMICOLON
    (7) instruction -> . assignment SEMICOLON
    (8) instruction -> . command SEMICOLON
    (9) instruction -> . conditional_statement
    (10) instruction -> . while_statement
    (11) instruction -> . for_statement
    (12) instruction -> . instruction_block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (47) assignment -> . changeable ASSIGN expression
    (48) assignment -> . changeable PLUS_ASSIGN expression
    (49) assignment -> . changeable MINUS_ASSIGN expression
    (50) assignment -> . changeable TIMES_ASSIGN expression
    (51) assignment -> . changeable DIVIDE_ASSIGN expression
    (54) command -> . print_command
    (55) command -> . RETURN expression
    (56) command -> . CONTINUE
    (57) command -> . BREAK
    (14) conditional_statement -> . if_statement ELSE body
    (15) conditional_statement -> . if_statement
    (17) while_statement -> . WHILE L_R_BRACKET sentence R_R_BRACKET body
    (18) for_statement -> . FOR ID ASSIGN range body
    (20) instruction_block -> . L_C_BRACKET instructions_opt R_C_BRACKET
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET
    (58) print_command -> . PRINT sequence
    (16) if_statement -> . IF L_R_BRACKET sentence R_R_BRACKET body

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RETURN          shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    L_C_BRACKET     shift and go to state 31
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 34

    body                           shift and go to state 127
    instruction                    shift and go to state 90
    expression                     shift and go to state 6
    assignment                     shift and go to state 7
    command                        shift and go to state 8
    conditional_statement          shift and go to state 9
    while_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    instruction_block              shift and go to state 12
    changeable                     shift and go to state 18
    matrix                         shift and go to state 19
    print_command                  shift and go to state 23
    if_statement                   shift and go to state 27

state 117

    (53) changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER . R_S_BRACKET

    R_S_BRACKET     shift and go to state 128


state 118

    (17) while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .

    MINUS           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)
    ELSE            reduce using rule 17 (while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body .)


state 119

    (22) sentence -> expression EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 22 (sentence -> expression EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 120

    (23) sentence -> expression NOT_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 23 (sentence -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 121

    (24) sentence -> expression GREATER expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 24 (sentence -> expression GREATER expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 122

    (25) sentence -> expression LESS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 25 (sentence -> expression LESS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 123

    (26) sentence -> expression GREATER_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 26 (sentence -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 124

    (27) sentence -> expression LESS_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    R_R_BRACKET     reduce using rule 27 (sentence -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45
    L_S_BRACKET     shift and go to state 46


state 125

    (18) for_statement -> FOR ID ASSIGN range body .

    MINUS           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    EYE             reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ZEROS           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ONES            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_R_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    INTEGER         reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    FLOAT           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    STRING          reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    RETURN          reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    CONTINUE        reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    BREAK           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    WHILE           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    FOR             reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_C_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ID              reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    L_S_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    PRINT           reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    IF              reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    $end            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    R_C_BRACKET     reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)
    ELSE            reduce using rule 18 (for_statement -> FOR ID ASSIGN range body .)


state 126

    (21) range -> expression COLON . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MAT_PLUS expression
    (31) expression -> . expression MAT_MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MAT_TIMES expression
    (35) expression -> . expression MAT_DIVIDE expression
    (36) expression -> . MINUS expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . EYE L_R_BRACKET expression R_R_BRACKET
    (39) expression -> . ZEROS L_R_BRACKET expression R_R_BRACKET
    (40) expression -> . ONES L_R_BRACKET expression R_R_BRACKET
    (41) expression -> . L_R_BRACKET expression R_R_BRACKET
    (42) expression -> . changeable
    (43) expression -> . matrix
    (44) expression -> . INTEGER
    (45) expression -> . FLOAT
    (46) expression -> . STRING
    (52) changeable -> . ID
    (53) changeable -> . expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET
    (59) matrix -> . L_S_BRACKET row_sequence R_S_BRACKET

    MINUS           shift and go to state 13
    EYE             shift and go to state 14
    ZEROS           shift and go to state 16
    ONES            shift and go to state 17
    L_R_BRACKET     shift and go to state 15
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    ID              shift and go to state 30
    L_S_BRACKET     shift and go to state 32

    expression                     shift and go to state 129
    changeable                     shift and go to state 50
    matrix                         shift and go to state 19

state 127

    (16) if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .

    ELSE            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    MINUS           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    EYE             reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ZEROS           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ONES            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_R_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    INTEGER         reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FLOAT           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    STRING          reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    RETURN          reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    CONTINUE        reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    BREAK           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    WHILE           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    FOR             reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_C_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    ID              reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    L_S_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    PRINT           reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    IF              reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    $end            reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)
    R_C_BRACKET     reduce using rule 16 (if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body .)


state 128

    (53) changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .

    ASSIGN          reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PLUS_ASSIGN     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MINUS_ASSIGN    reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TIMES_ASSIGN    reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    SEMICOLON       reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PLUS            reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MINUS           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_PLUS        reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_MINUS       reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TIMES           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    DIVIDE          reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_TIMES       reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    MAT_DIVIDE      reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    TRANSPOSE       reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_S_BRACKET     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    R_R_BRACKET     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    COMMA           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    EQUAL           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    NOT_EQUAL       reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    GREATER         reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    LESS            reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    GREATER_EQUAL   reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    LESS_EQUAL      reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    R_S_BRACKET     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    COLON           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    EYE             reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ZEROS           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ONES            reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_R_BRACKET     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    INTEGER         reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    FLOAT           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    STRING          reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    RETURN          reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    CONTINUE        reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    BREAK           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    WHILE           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    FOR             reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    L_C_BRACKET     reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    ID              reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    PRINT           reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)
    IF              reduce using rule 53 (changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET .)


state 129

    (21) range -> expression COLON expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MAT_PLUS expression
    (31) expression -> expression . MAT_MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MAT_TIMES expression
    (35) expression -> expression . MAT_DIVIDE expression
    (37) expression -> expression . TRANSPOSE
    (53) changeable -> expression . L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET

    EYE             reduce using rule 21 (range -> expression COLON expression .)
    ZEROS           reduce using rule 21 (range -> expression COLON expression .)
    ONES            reduce using rule 21 (range -> expression COLON expression .)
    L_R_BRACKET     reduce using rule 21 (range -> expression COLON expression .)
    INTEGER         reduce using rule 21 (range -> expression COLON expression .)
    FLOAT           reduce using rule 21 (range -> expression COLON expression .)
    STRING          reduce using rule 21 (range -> expression COLON expression .)
    RETURN          reduce using rule 21 (range -> expression COLON expression .)
    CONTINUE        reduce using rule 21 (range -> expression COLON expression .)
    BREAK           reduce using rule 21 (range -> expression COLON expression .)
    WHILE           reduce using rule 21 (range -> expression COLON expression .)
    FOR             reduce using rule 21 (range -> expression COLON expression .)
    L_C_BRACKET     reduce using rule 21 (range -> expression COLON expression .)
    ID              reduce using rule 21 (range -> expression COLON expression .)
    L_S_BRACKET     reduce using rule 21 (range -> expression COLON expression .)
    PRINT           reduce using rule 21 (range -> expression COLON expression .)
    IF              reduce using rule 21 (range -> expression COLON expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MAT_PLUS        shift and go to state 39
    MAT_MINUS       shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MAT_TIMES       shift and go to state 43
    MAT_DIVIDE      shift and go to state 44
    TRANSPOSE       shift and go to state 45

  ! MINUS           [ reduce using rule 21 (range -> expression COLON expression .) ]
  ! L_S_BRACKET     [ shift and go to state 46 ]

