
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightSEMICOLONrightIFWHILEFORRETURNCONTINUEBREAKnonassocELSErightCOLONCOMMArightASSIGNPLUS_ASSIGNMINUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftORleftANDrightNOTnonassocGREATERLESSGREATER_EQUALLESS_EQUALEQUALNOT_EQUALleftPLUSMINUSMAT_PLUSMAT_MINUSleftTIMESDIVIDEMAT_TIMESMAT_DIVIDErightUNARY_MINUSnonassocMAT_ELEMENTleftTRANSPOSErightEYEZEROSONESPRINTrightL_R_BRACKETR_R_BRACKETL_S_BRACKETR_S_BRACKETL_C_BRACKETR_C_BRACKETAND ASSIGN BREAK COLON COMMA COMMENT CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER GREATER_EQUAL ID IF INTEGER LESS LESS_EQUAL L_C_BRACKET L_R_BRACKET L_S_BRACKET MAT_DIVIDE MAT_MINUS MAT_PLUS MAT_TIMES MINUS MINUS_ASSIGN NOT NOT_EQUAL ONES OR PLUS PLUS_ASSIGN PRINT RETURN R_C_BRACKET R_R_BRACKET R_S_BRACKET SEMICOLON STRING TIMES TIMES_ASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_opt instructions_opt : instructions\n                        | epsilon instructions : instructions instruction\n                    | instruction instruction : expression SEMICOLON\n                   | command SEMICOLON\n                   | conditional_statement\n                   | while_statement\n                   | for_statement\n                   | instruction_block epsilon : conditional_statement : if_statement ELSE body\n                             | if_statement %prec IF if_statement : IF L_R_BRACKET sentence R_R_BRACKET body while_statement : WHILE L_R_BRACKET sentence R_R_BRACKET body for_statement : FOR ID ASSIGN range body body : instruction instruction_block : L_C_BRACKET instructions_opt R_C_BRACKET range : expression COLON expression sentence : sentence OR sentence\n                | sentence AND sentence\n                | NOT sentence\n                | expression EQUAL expression\n                | expression NOT_EQUAL expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression GREATER_EQUAL expression\n                | expression LESS_EQUAL expression expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MAT_PLUS expression\n                  | expression MAT_MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MAT_TIMES expression\n                  | expression MAT_DIVIDE expression\n                  | MINUS expression %prec UNARY_MINUS\n                  | expression TRANSPOSE\n                  | EYE L_R_BRACKET expression R_R_BRACKET\n                  | ZEROS L_R_BRACKET expression R_R_BRACKET\n                  | ONES L_R_BRACKET expression R_R_BRACKET\n                  | L_R_BRACKET expression R_R_BRACKET\n                  | assignment\n                  | changeable\n                  | INTEGER\n                  | FLOAT\n                  | STRING assignment : changeable ASSIGN expression\n                  | changeable PLUS_ASSIGN expression\n                  | changeable MINUS_ASSIGN expression\n                  | changeable TIMES_ASSIGN expression\n                  | changeable DIVIDE_ASSIGN expression changeable : ID\n                  | matrix\n                  | expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET %prec MAT_ELEMENT command : print_command\n               | RETURN expression\n               | CONTINUE\n               | BREAK print_command : PRINT sequence matrix : L_S_BRACKET row_sequence R_S_BRACKET row_sequence : row COMMA row_sequence\n                    | row row : L_S_BRACKET sequence R_S_BRACKET sequence : expression COMMA sequence\n                | expression '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,9,10,11,26,35,36,47,87,88,93,120,129,131,],[-12,0,-1,-2,-3,-5,-8,-9,-10,-11,-14,-4,-6,-7,-13,-18,-19,-16,-17,-15,]),'MINUS':([0,3,5,6,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,114,118,120,123,124,125,126,127,128,129,130,131,132,133,],[12,12,-5,38,-8,-9,-10,-11,12,12,-44,-45,-46,-47,-48,12,-14,-54,12,-55,12,-4,-6,12,12,12,12,12,12,12,12,-39,-7,-38,12,38,12,12,12,12,12,12,12,38,12,12,12,38,12,-30,-31,-32,-33,-34,-35,-36,-37,38,-43,38,38,38,38,38,38,38,-13,-18,12,38,12,-19,-62,12,-40,-41,-42,12,12,12,12,12,12,12,12,12,12,38,12,-16,38,38,38,38,38,38,-17,12,-15,-56,38,]),'EYE':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[13,13,-5,-8,-9,-10,-11,13,13,-44,-45,-46,-47,-48,13,-14,-54,13,-55,13,-4,-6,13,13,13,13,13,13,13,13,-39,-7,-38,13,13,13,13,13,13,13,13,13,13,13,13,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,13,13,-19,-62,13,-40,-41,-42,13,13,13,13,13,13,13,13,13,13,13,-16,-17,13,-15,-56,-20,]),'ZEROS':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[15,15,-5,-8,-9,-10,-11,15,15,-44,-45,-46,-47,-48,15,-14,-54,15,-55,15,-4,-6,15,15,15,15,15,15,15,15,-39,-7,-38,15,15,15,15,15,15,15,15,15,15,15,15,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,15,15,-19,-62,15,-40,-41,-42,15,15,15,15,15,15,15,15,15,15,15,-16,-17,15,-15,-56,-20,]),'ONES':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[16,16,-5,-8,-9,-10,-11,16,16,-44,-45,-46,-47,-48,16,-14,-54,16,-55,16,-4,-6,16,16,16,16,16,16,16,16,-39,-7,-38,16,16,16,16,16,16,16,16,16,16,16,16,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,16,16,-19,-62,16,-40,-41,-42,16,16,16,16,16,16,16,16,16,16,16,-16,-17,16,-15,-56,-20,]),'L_R_BRACKET':([0,3,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[14,14,-5,-8,-9,-10,-11,14,49,14,51,52,-44,-45,-46,-47,-48,14,-14,60,-54,14,-55,14,68,-4,-6,14,14,14,14,14,14,14,14,-39,-7,-38,14,14,14,14,14,14,14,14,14,14,14,14,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,14,14,-19,-62,14,-40,-41,-42,14,14,14,14,14,14,14,14,14,14,14,-16,-17,14,-15,-56,-20,]),'INTEGER':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,99,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[19,19,-5,-8,-9,-10,-11,19,19,-44,-45,-46,-47,-48,19,-14,-54,19,-55,19,-4,-6,19,19,19,19,19,19,19,19,-39,77,-7,-38,19,19,19,19,19,19,19,19,19,19,19,19,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,19,19,-19,-62,19,119,-40,-41,-42,19,19,19,19,19,19,19,19,19,19,19,-16,-17,19,-15,-56,-20,]),'FLOAT':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[20,20,-5,-8,-9,-10,-11,20,20,-44,-45,-46,-47,-48,20,-14,-54,20,-55,20,-4,-6,20,20,20,20,20,20,20,20,-39,-7,-38,20,20,20,20,20,20,20,20,20,20,20,20,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,20,20,-19,-62,20,-40,-41,-42,20,20,20,20,20,20,20,20,20,20,20,-16,-17,20,-15,-56,-20,]),'STRING':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[21,21,-5,-8,-9,-10,-11,21,21,-44,-45,-46,-47,-48,21,-14,-54,21,-55,21,-4,-6,21,21,21,21,21,21,21,21,-39,-7,-38,21,21,21,21,21,21,21,21,21,21,21,21,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,21,21,-19,-62,21,-40,-41,-42,21,21,21,21,21,21,21,21,21,21,21,-16,-17,21,-15,-56,-20,]),'RETURN':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[23,23,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,23,-55,-4,-6,-39,-7,-38,23,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,23,23,23,-16,-17,-15,-56,-20,]),'CONTINUE':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[24,24,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,24,-55,-4,-6,-39,-7,-38,24,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,24,24,24,-16,-17,-15,-56,-20,]),'BREAK':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[25,25,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,25,-55,-4,-6,-39,-7,-38,25,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,25,25,25,-16,-17,-15,-56,-20,]),'WHILE':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[27,27,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,27,-55,-4,-6,-39,-7,-38,27,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,27,27,27,-16,-17,-15,-56,-20,]),'FOR':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[28,28,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,28,-55,-4,-6,-39,-7,-38,28,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,28,28,28,-16,-17,-15,-56,-20,]),'L_C_BRACKET':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[30,30,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,30,-55,-4,-6,-39,-7,-38,30,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,30,30,30,-16,-17,-15,-56,-20,]),'ID':([0,3,5,8,9,10,11,12,14,17,18,19,20,21,23,26,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,59,60,63,68,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,90,92,93,95,97,100,101,102,103,104,105,107,108,109,110,111,112,113,118,120,129,130,131,132,133,],[29,29,-5,-8,-9,-10,-11,29,29,-44,-45,-46,-47,-48,29,-14,61,-54,29,-55,29,-4,-6,29,29,29,29,29,29,29,29,-39,-7,-38,29,29,29,29,29,29,29,29,29,29,29,29,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,29,29,-19,-62,29,-40,-41,-42,29,29,29,29,29,29,29,29,29,29,29,-16,-17,29,-15,-56,-20,]),'PRINT':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[33,33,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,33,-55,-4,-6,-39,-7,-38,33,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,33,33,33,-16,-17,-15,-56,-20,]),'IF':([0,3,5,8,9,10,11,17,18,19,20,21,26,29,30,31,35,36,45,47,48,59,69,70,71,72,73,74,75,76,79,82,83,84,85,86,87,88,93,95,100,101,102,103,113,118,120,129,131,132,133,],[34,34,-5,-8,-9,-10,-11,-44,-45,-46,-47,-48,-14,-54,34,-55,-4,-6,-39,-7,-38,34,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-13,-18,-19,-62,-40,-41,-42,34,34,34,-16,-17,-15,-56,-20,]),'L_S_BRACKET':([0,3,5,6,8,9,10,11,12,14,17,18,19,20,21,23,26,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,95,96,97,100,101,102,103,104,105,107,108,109,110,111,112,113,114,118,120,123,124,125,126,127,128,129,130,131,132,133,],[32,32,-5,46,-8,-9,-10,-11,32,32,-44,-45,-46,-47,-48,32,-14,-54,32,-55,63,32,-4,-6,32,32,32,32,32,32,32,32,-39,-7,46,32,46,32,32,32,32,32,32,32,46,32,32,32,46,32,46,46,46,46,46,46,46,46,46,-43,46,46,46,46,46,46,46,-13,-18,32,46,32,-19,-62,63,32,-40,-41,-42,32,32,32,32,32,32,32,32,32,32,46,32,-16,46,46,46,46,46,46,-17,32,-15,-56,46,]),'R_C_BRACKET':([3,4,5,8,9,10,11,26,30,35,36,47,62,87,88,93,120,129,131,],[-2,-3,-5,-8,-9,-10,-11,-14,-12,-4,-6,-7,93,-13,-18,-19,-16,-17,-15,]),'SEMICOLON':([6,7,17,18,19,20,21,22,24,25,29,31,45,48,58,66,67,69,70,71,72,73,74,75,76,79,82,83,84,85,86,95,100,101,102,117,132,],[36,47,-44,-45,-46,-47,-48,-57,-59,-60,-54,-55,-39,-38,-58,-61,-67,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-62,-40,-41,-42,-66,-56,]),'PLUS':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[37,-44,-45,-46,-47,-48,-54,-55,-39,-38,37,37,37,-30,-31,-32,-33,-34,-35,-36,-37,37,-43,37,37,37,37,37,37,37,37,-62,-40,-41,-42,37,37,37,37,37,37,37,-56,37,]),'MAT_PLUS':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[39,-44,-45,-46,-47,-48,-54,-55,-39,-38,39,39,39,-30,-31,-32,-33,-34,-35,-36,-37,39,-43,39,39,39,39,39,39,39,39,-62,-40,-41,-42,39,39,39,39,39,39,39,-56,39,]),'MAT_MINUS':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[40,-44,-45,-46,-47,-48,-54,-55,-39,-38,40,40,40,-30,-31,-32,-33,-34,-35,-36,-37,40,-43,40,40,40,40,40,40,40,40,-62,-40,-41,-42,40,40,40,40,40,40,40,-56,40,]),'TIMES':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[41,-44,-45,-46,-47,-48,-54,-55,-39,-38,41,41,41,41,41,41,41,-34,-35,-36,-37,41,-43,41,41,41,41,41,41,41,41,-62,-40,-41,-42,41,41,41,41,41,41,41,-56,41,]),'DIVIDE':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[42,-44,-45,-46,-47,-48,-54,-55,-39,-38,42,42,42,42,42,42,42,-34,-35,-36,-37,42,-43,42,42,42,42,42,42,42,42,-62,-40,-41,-42,42,42,42,42,42,42,42,-56,42,]),'MAT_TIMES':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[43,-44,-45,-46,-47,-48,-54,-55,-39,-38,43,43,43,43,43,43,43,-34,-35,-36,-37,43,-43,43,43,43,43,43,43,43,43,-62,-40,-41,-42,43,43,43,43,43,43,43,-56,43,]),'MAT_DIVIDE':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[44,-44,-45,-46,-47,-48,-54,-55,-39,-38,44,44,44,44,44,44,44,-34,-35,-36,-37,44,-43,44,44,44,44,44,44,44,44,-62,-40,-41,-42,44,44,44,44,44,44,44,-56,44,]),'TRANSPOSE':([6,17,18,19,20,21,29,31,45,48,50,58,67,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,91,95,100,101,102,114,123,124,125,126,127,128,132,133,],[45,-44,-45,-46,-47,-48,-54,-55,-39,45,45,45,45,45,45,45,45,45,45,45,45,45,-43,45,45,45,45,45,45,45,45,-62,-40,-41,-42,45,45,45,45,45,45,45,-56,45,]),'ELSE':([8,9,10,11,26,36,47,87,88,93,120,129,131,],[-8,-9,-10,-11,59,-6,-7,-13,-18,-19,-16,-17,-15,]),'R_R_BRACKET':([17,18,19,20,21,29,31,45,48,50,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,89,95,98,100,101,102,106,121,122,123,124,125,126,127,128,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,79,-30,-31,-32,-33,-34,-35,-36,-37,100,-43,101,102,-49,-50,-51,-52,-53,103,-62,118,-40,-41,-42,-23,-21,-22,-24,-25,-26,-27,-28,-29,-56,]),'COMMA':([17,18,19,20,21,29,31,45,48,65,67,69,70,71,72,73,74,75,76,77,79,82,83,84,85,86,95,100,101,102,115,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,96,97,-30,-31,-32,-33,-34,-35,-36,-37,99,-43,-49,-50,-51,-52,-53,-62,-40,-41,-42,-65,-56,]),'EQUAL':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,107,-62,-40,-41,-42,-56,]),'NOT_EQUAL':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,108,-62,-40,-41,-42,-56,]),'GREATER':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,109,-62,-40,-41,-42,-56,]),'LESS':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,110,-62,-40,-41,-42,-56,]),'GREATER_EQUAL':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,111,-62,-40,-41,-42,-56,]),'LESS_EQUAL':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,91,95,100,101,102,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,112,-62,-40,-41,-42,-56,]),'R_S_BRACKET':([17,18,19,20,21,29,31,45,48,64,65,67,69,70,71,72,73,74,75,76,79,82,83,84,85,86,94,95,100,101,102,115,116,117,119,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,95,-64,-67,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,115,-62,-40,-41,-42,-65,-63,-66,132,-56,]),'COLON':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,95,100,101,102,114,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,-62,-40,-41,-42,130,-56,]),'OR':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,89,95,98,100,101,102,106,121,122,123,124,125,126,127,128,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,104,-62,104,-40,-41,-42,-23,-21,-22,-24,-25,-26,-27,-28,-29,-56,]),'AND':([17,18,19,20,21,29,31,45,48,69,70,71,72,73,74,75,76,79,82,83,84,85,86,89,95,98,100,101,102,106,121,122,123,124,125,126,127,128,132,],[-44,-45,-46,-47,-48,-54,-55,-39,-38,-30,-31,-32,-33,-34,-35,-36,-37,-43,-49,-50,-51,-52,-53,105,-62,105,-40,-41,-42,-23,105,-22,-24,-25,-26,-27,-28,-29,-56,]),'ASSIGN':([18,29,31,61,95,132,],[53,-54,-55,92,-62,-56,]),'PLUS_ASSIGN':([18,29,31,95,132,],[54,-54,-55,-62,-56,]),'MINUS_ASSIGN':([18,29,31,95,132,],[55,-54,-55,-62,-56,]),'TIMES_ASSIGN':([18,29,31,95,132,],[56,-54,-55,-62,-56,]),'DIVIDE_ASSIGN':([18,29,31,95,132,],[57,-54,-55,-62,-56,]),'NOT':([60,68,90,104,105,],[90,90,90,90,90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,30,],[2,62,]),'instructions':([0,30,],[3,3,]),'epsilon':([0,30,],[4,4,]),'instruction':([0,3,30,59,103,113,118,],[5,35,5,88,88,88,88,]),'expression':([0,3,12,14,23,30,33,37,38,39,40,41,42,43,44,49,51,52,53,54,55,56,57,59,60,63,68,90,92,97,103,104,105,107,108,109,110,111,112,113,118,130,],[6,6,48,50,58,6,67,69,70,71,72,73,74,75,76,78,80,81,82,83,84,85,86,6,91,67,91,91,114,67,6,91,91,123,124,125,126,127,128,6,6,133,]),'command':([0,3,30,59,103,113,118,],[7,7,7,7,7,7,7,]),'conditional_statement':([0,3,30,59,103,113,118,],[8,8,8,8,8,8,8,]),'while_statement':([0,3,30,59,103,113,118,],[9,9,9,9,9,9,9,]),'for_statement':([0,3,30,59,103,113,118,],[10,10,10,10,10,10,10,]),'instruction_block':([0,3,30,59,103,113,118,],[11,11,11,11,11,11,11,]),'assignment':([0,3,12,14,23,30,33,37,38,39,40,41,42,43,44,49,51,52,53,54,55,56,57,59,60,63,68,90,92,97,103,104,105,107,108,109,110,111,112,113,118,130,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'changeable':([0,3,12,14,23,30,33,37,38,39,40,41,42,43,44,49,51,52,53,54,55,56,57,59,60,63,68,90,92,97,103,104,105,107,108,109,110,111,112,113,118,130,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'print_command':([0,3,30,59,103,113,118,],[22,22,22,22,22,22,22,]),'if_statement':([0,3,30,59,103,113,118,],[26,26,26,26,26,26,26,]),'matrix':([0,3,12,14,23,30,33,37,38,39,40,41,42,43,44,49,51,52,53,54,55,56,57,59,60,63,68,90,92,97,103,104,105,107,108,109,110,111,112,113,118,130,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'row_sequence':([32,96,],[64,116,]),'row':([32,96,],[65,65,]),'sequence':([33,63,97,],[66,94,117,]),'body':([59,103,113,118,],[87,120,129,131,]),'sentence':([60,68,90,104,105,],[89,98,106,121,122,]),'range':([92,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','matrix_parser.py',49),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','matrix_parser.py',53),
  ('instructions_opt -> epsilon','instructions_opt',1,'p_instructions_opt','matrix_parser.py',54),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','matrix_parser.py',58),
  ('instructions -> instruction','instructions',1,'p_instructions','matrix_parser.py',59),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',63),
  ('instruction -> command SEMICOLON','instruction',2,'p_instruction','matrix_parser.py',64),
  ('instruction -> conditional_statement','instruction',1,'p_instruction','matrix_parser.py',65),
  ('instruction -> while_statement','instruction',1,'p_instruction','matrix_parser.py',66),
  ('instruction -> for_statement','instruction',1,'p_instruction','matrix_parser.py',67),
  ('instruction -> instruction_block','instruction',1,'p_instruction','matrix_parser.py',68),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','matrix_parser.py',72),
  ('conditional_statement -> if_statement ELSE body','conditional_statement',3,'p_conditional_statement','matrix_parser.py',81),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','matrix_parser.py',82),
  ('if_statement -> IF L_R_BRACKET sentence R_R_BRACKET body','if_statement',5,'p_if_statement','matrix_parser.py',86),
  ('while_statement -> WHILE L_R_BRACKET sentence R_R_BRACKET body','while_statement',5,'p_while_statement','matrix_parser.py',90),
  ('for_statement -> FOR ID ASSIGN range body','for_statement',5,'p_for_statement','matrix_parser.py',94),
  ('body -> instruction','body',1,'p_body','matrix_parser.py',98),
  ('instruction_block -> L_C_BRACKET instructions_opt R_C_BRACKET','instruction_block',3,'p_instruction_block','matrix_parser.py',102),
  ('range -> expression COLON expression','range',3,'p_range','matrix_parser.py',106),
  ('sentence -> sentence OR sentence','sentence',3,'p_sentence','matrix_parser.py',114),
  ('sentence -> sentence AND sentence','sentence',3,'p_sentence','matrix_parser.py',115),
  ('sentence -> NOT sentence','sentence',2,'p_sentence','matrix_parser.py',116),
  ('sentence -> expression EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',117),
  ('sentence -> expression NOT_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',118),
  ('sentence -> expression GREATER expression','sentence',3,'p_sentence','matrix_parser.py',119),
  ('sentence -> expression LESS expression','sentence',3,'p_sentence','matrix_parser.py',120),
  ('sentence -> expression GREATER_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',121),
  ('sentence -> expression LESS_EQUAL expression','sentence',3,'p_sentence','matrix_parser.py',122),
  ('expression -> expression PLUS expression','expression',3,'p_expression','matrix_parser.py',130),
  ('expression -> expression MINUS expression','expression',3,'p_expression','matrix_parser.py',131),
  ('expression -> expression MAT_PLUS expression','expression',3,'p_expression','matrix_parser.py',132),
  ('expression -> expression MAT_MINUS expression','expression',3,'p_expression','matrix_parser.py',133),
  ('expression -> expression TIMES expression','expression',3,'p_expression','matrix_parser.py',134),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','matrix_parser.py',135),
  ('expression -> expression MAT_TIMES expression','expression',3,'p_expression','matrix_parser.py',136),
  ('expression -> expression MAT_DIVIDE expression','expression',3,'p_expression','matrix_parser.py',137),
  ('expression -> MINUS expression','expression',2,'p_expression','matrix_parser.py',138),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression','matrix_parser.py',139),
  ('expression -> EYE L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',140),
  ('expression -> ZEROS L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',141),
  ('expression -> ONES L_R_BRACKET expression R_R_BRACKET','expression',4,'p_expression','matrix_parser.py',142),
  ('expression -> L_R_BRACKET expression R_R_BRACKET','expression',3,'p_expression','matrix_parser.py',143),
  ('expression -> assignment','expression',1,'p_expression','matrix_parser.py',144),
  ('expression -> changeable','expression',1,'p_expression','matrix_parser.py',145),
  ('expression -> INTEGER','expression',1,'p_expression','matrix_parser.py',146),
  ('expression -> FLOAT','expression',1,'p_expression','matrix_parser.py',147),
  ('expression -> STRING','expression',1,'p_expression','matrix_parser.py',148),
  ('assignment -> changeable ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',152),
  ('assignment -> changeable PLUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',153),
  ('assignment -> changeable MINUS_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',154),
  ('assignment -> changeable TIMES_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',155),
  ('assignment -> changeable DIVIDE_ASSIGN expression','assignment',3,'p_assignment','matrix_parser.py',156),
  ('changeable -> ID','changeable',1,'p_changeable','matrix_parser.py',160),
  ('changeable -> matrix','changeable',1,'p_changeable','matrix_parser.py',161),
  ('changeable -> expression L_S_BRACKET INTEGER COMMA INTEGER R_S_BRACKET','changeable',6,'p_changeable','matrix_parser.py',162),
  ('command -> print_command','command',1,'p_command','matrix_parser.py',169),
  ('command -> RETURN expression','command',2,'p_command','matrix_parser.py',170),
  ('command -> CONTINUE','command',1,'p_command','matrix_parser.py',171),
  ('command -> BREAK','command',1,'p_command','matrix_parser.py',172),
  ('print_command -> PRINT sequence','print_command',2,'p_print_command','matrix_parser.py',176),
  ('matrix -> L_S_BRACKET row_sequence R_S_BRACKET','matrix',3,'p_matrix','matrix_parser.py',184),
  ('row_sequence -> row COMMA row_sequence','row_sequence',3,'p_row_sequence','matrix_parser.py',188),
  ('row_sequence -> row','row_sequence',1,'p_row_sequence','matrix_parser.py',189),
  ('row -> L_S_BRACKET sequence R_S_BRACKET','row',3,'p_row','matrix_parser.py',193),
  ('sequence -> expression COMMA sequence','sequence',3,'p_sequence','matrix_parser.py',197),
  ('sequence -> expression','sequence',1,'p_sequence','matrix_parser.py',198),
]
